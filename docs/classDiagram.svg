<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1736px" preserveAspectRatio="none" style="width:2645px;height:1736px;background:#FFFFFF;" version="1.1" viewBox="0 0 2645 1736" width="2645px" zoomAndPan="magnify"><defs/><g><!--MD5=[4add89f23865d9608ef05f08bfd846b0]
cluster Definitions--><g id="cluster_Definitions"><rect fill="none" height="208" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="434" x="1954" y="893.5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="77.8125" x="2132.0938" y="910.4659">Definitions</text></g><!--MD5=[121a8bf1197281ab89ed693fab589f94]
cluster Domain--><g id="cluster_Domain"><rect fill="none" height="518" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="810" x="1489" y="1212.5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="54.625" x="1866.6875" y="1229.4659">Domain</text></g><!--MD5=[63e5b7017781b3ad047b9a41bfb8f6f6]
cluster Structure--><g id="cluster_Structure"><rect fill="none" height="1438.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1458" x="7" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="66.9375" x="702.5313" y="23.9659">Structure</text></g><!--MD5=[62b64a30049332948fe41c7fb8cab065]
cluster PK_Tree--><g id="cluster_PK_Tree"><rect fill="none" height="1007.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="786" x="31" y="53"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="31.75" x="408.125" y="69.9659">Tree</text></g><!--MD5=[e8b13cba2af981d58aa2577b369716a5]
cluster PK_WeightedTree--><g id="cluster_PK_WeightedTree"><rect fill="none" height="653" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="200" x="55" y="99"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="100.25" x="104.875" y="115.9659">WeightedTree</text></g><!--MD5=[38d595aac29b727d429e875f7450ae1c]
cluster Searches--><g id="cluster_Searches"><rect fill="none" height="788" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1150" x="1489" y="16.5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="64.5" x="2031.75" y="33.4659">Searches</text></g><!--MD5=[4120e9011ff0a271f45df1819781d506]
cluster PK_UninformedSearch--><g id="cluster_PK_UninformedSearch"><rect fill="none" height="497" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="734" x="1881" y="62.5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="134" x="2181" y="79.4659">UninformedSearch</text></g><!--MD5=[651cc0966bbb65108ffda3ced9df7240]
cluster PK_InformedSearch--><g id="cluster_PK_InformedSearch"><rect fill="none" height="338" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="344" x="1513" y="99"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="115.125" x="1627.4375" y="115.9659">InformedSearch</text></g><!--MD5=[44a1b4afaef76c16e6c9ec4990ad0c8d]
class Item--><g id="elem_Item"><rect codeLine="62" fill="#F1F1F1" height="154.4075" id="Item" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="87" x="2284.5" y="931.5"/><ellipse cx="2310.3" cy="947.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2313.7688,954 L2306.4563,954 L2306.4563,941.3281 L2313.7688,941.3281 L2313.7688,943.2031 L2308.5031,943.2031 L2308.5031,946.4688 L2313.4563,946.4688 L2313.4563,948.3281 L2308.5031,948.3281 L2308.5031,952.125 L2313.7688,952.125 L2313.7688,954 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="31" x="2326.7" y="952.932">Item</text><line style="stroke:#181818;stroke-width:0.5;" x1="2285.5" x2="2370.5" y1="963.5" y2="963.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="2290.5" y="982.4659">Lamp = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="2290.5" y="1001.5339">Athlete = 1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="2290.5" y="1020.6018">Boy = 3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="2290.5" y="1039.6697">Lord = 6</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="2290.5" y="1058.7376">Woman = 8</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="2290.5" y="1077.8055">Lady = 12</text></g><!--MD5=[818f33120a12cf26bd14afdff251130b]
class RiverBank--><g id="elem_RiverBank"><rect codeLine="71" fill="#F1F1F1" height="78.1358" id="RiverBank" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="2150.5" y="969.5"/><ellipse cx="2165.5" cy="985.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2168.9688,992 L2161.6563,992 L2161.6563,979.3281 L2168.9688,979.3281 L2168.9688,981.2031 L2163.7031,981.2031 L2163.7031,984.4688 L2168.6563,984.4688 L2168.6563,986.3281 L2163.7031,986.3281 L2163.7031,990.125 L2168.9688,990.125 L2168.9688,992 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="2179.5" y="990.932">RiverBank</text><line style="stroke:#181818;stroke-width:0.5;" x1="2151.5" x2="2248.5" y1="1001.5" y2="1001.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="2156.5" y="1020.4659">Initial</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="2156.5" y="1039.5339">Final</text></g><!--MD5=[651984b30145f63e53adab6e7e9bc4b7]
class Outcome--><g id="elem_Outcome"><rect codeLine="76" fill="#F1F1F1" height="78.1358" id="Outcome" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="1970.5" y="969.5"/><ellipse cx="2008.9" cy="985.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2013.4625,988.4844 Q2013.4625,989.6563 2012.8844,990.4844 Q2012.3219,991.3125 2011.275,991.75 Q2010.2438,992.1719 2008.8688,992.1719 Q2008.1656,992.1719 2007.525,992.0938 Q2006.9,992.0313 2006.3688,991.9063 Q2005.8375,991.7656 2005.2594,991.5 L2005.2594,989.4531 Q2006.2438,989.8906 2007.1188,990.1094 Q2007.9938,990.3125 2008.9313,990.3125 Q2009.7906,990.3125 2010.3375,990.1094 Q2010.8844,989.8906 2011.1344,989.5156 Q2011.4,989.1406 2011.4,988.625 Q2011.4,988.1094 2011.1813,987.7656 Q2010.9781,987.4219 2010.3844,987.0938 Q2009.8063,986.7656 2008.7125,986.375 Q2007.9156,986.0625 2007.2906,985.7344 Q2006.6813,985.3906 2006.2594,984.9375 Q2005.8375,984.4688 2005.6188,983.875 Q2005.4156,983.2813 2005.4156,982.5156 Q2005.4156,981.4688 2005.9469,980.7188 Q2006.4938,979.9531 2007.4313,979.5625 Q2008.3688,979.1563 2009.5563,979.1563 Q2010.6031,979.1563 2011.4469,979.3594 Q2012.3063,979.5469 2013.2438,979.9688 L2012.5875,981.7813 Q2011.7125,981.3906 2010.9938,981.2188 Q2010.2906,981.0313 2009.525,981.0313 Q2008.8219,981.0313 2008.3688,981.2344 Q2007.9313,981.4219 2007.7125,981.7656 Q2007.4938,982.0938 2007.4938,982.5313 Q2007.4938,983.0781 2007.7125,983.4219 Q2007.9313,983.7656 2008.4625,984.0781 Q2009.0094,984.375 2009.9781,984.7344 Q2011.0719,985.1406 2011.8375,985.625 Q2012.6188,986.0938 2013.0406,986.7813 Q2013.4625,987.4531 2013.4625,988.4844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="2028.1" y="990.932">Outcome</text><line style="stroke:#181818;stroke-width:0.5;" x1="1971.5" x2="2114.5" y1="1001.5" y2="1001.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1976.5" y="1020.4659">isTerminal: boolean</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="1976.5" y="1039.5339">win: boolean</text></g><!--MD5=[4cf87534c235239d37db4adfd136fff4]
class Rule--><g id="elem_Rule"><rect codeLine="84" fill="#F1F1F1" height="124.2717" id="Rule" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="1571" y="1570.5"/><ellipse cx="1660.75" cy="1586.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1660.8594,1582.0313 Q1659.9375,1582.0313 1659.2031,1582.3438 Q1658.4844,1582.6563 1657.9844,1583.25 Q1657.4844,1583.8281 1657.2031,1584.7031 Q1656.9375,1585.5781 1656.9375,1586.6719 Q1656.9375,1588.1094 1657.375,1589.1563 Q1657.8281,1590.2031 1658.6719,1590.75 Q1659.5313,1591.2969 1660.8438,1591.2969 Q1661.625,1591.2969 1662.3125,1591.1719 Q1663.0156,1591.0313 1664.0156,1590.7188 L1664.0156,1592.5938 Q1663.1563,1592.9219 1662.3906,1593.0469 Q1661.6406,1593.1719 1660.625,1593.1719 Q1658.7031,1593.1719 1657.3906,1592.375 Q1656.0938,1591.5625 1655.4375,1590.0938 Q1654.7813,1588.6094 1654.7813,1586.6406 Q1654.7813,1585.2188 1655.1719,1584.0469 Q1655.5781,1582.8594 1656.3594,1581.9844 Q1657.1406,1581.1094 1658.2813,1580.6406 Q1659.4219,1580.1563 1660.8906,1580.1563 Q1661.8438,1580.1563 1662.7344,1580.3594 Q1663.6406,1580.5469 1664.5781,1581.0156 L1663.75,1582.7969 Q1662.9688,1582.4219 1662.3125,1582.2344 Q1661.6563,1582.0313 1660.8594,1582.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1681.25" y="1591.932">Rule</text><line style="stroke:#181818;stroke-width:0.5;" x1="1572" x2="1788" y1="1602.5" y2="1602.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1579" y="1614.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1591" y="1621.4659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1579" y="1633.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="1591" y="1640.5339">travellingPeople: Item[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1572" x2="1788" y1="1648.6358" y2="1648.6358"/><ellipse cx="1582" cy="1663.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1591" y="1667.6018">getElapsedTime(): number</text><ellipse cx="1582" cy="1682.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="1591" y="1686.6697">transpose(state: State): State</text></g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="91" fill="#F1F1F1" height="181.4754" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="263" x="1996" y="1271"/><ellipse cx="2106.25" cy="1287" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2106.3594,1282.5313 Q2105.4375,1282.5313 2104.7031,1282.8438 Q2103.9844,1283.1563 2103.4844,1283.75 Q2102.9844,1284.3281 2102.7031,1285.2031 Q2102.4375,1286.0781 2102.4375,1287.1719 Q2102.4375,1288.6094 2102.875,1289.6563 Q2103.3281,1290.7031 2104.1719,1291.25 Q2105.0313,1291.7969 2106.3438,1291.7969 Q2107.125,1291.7969 2107.8125,1291.6719 Q2108.5156,1291.5313 2109.5156,1291.2188 L2109.5156,1293.0938 Q2108.6563,1293.4219 2107.8906,1293.5469 Q2107.1406,1293.6719 2106.125,1293.6719 Q2104.2031,1293.6719 2102.8906,1292.875 Q2101.5938,1292.0625 2100.9375,1290.5938 Q2100.2813,1289.1094 2100.2813,1287.1406 Q2100.2813,1285.7188 2100.6719,1284.5469 Q2101.0781,1283.3594 2101.8594,1282.4844 Q2102.6406,1281.6094 2103.7813,1281.1406 Q2104.9219,1280.6563 2106.3906,1280.6563 Q2107.3438,1280.6563 2108.2344,1280.8594 Q2109.1406,1281.0469 2110.0781,1281.5156 L2109.25,1283.2969 Q2108.4688,1282.9219 2107.8125,1282.7344 Q2107.1563,1282.5313 2106.3594,1282.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="2126.75" y="1292.432">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="1997" x2="2258" y1="1303" y2="1303"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2004" y="1315.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="2016" y="1321.9659">initialRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2004" y="1334.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="2016" y="1341.0339">finalRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2004" y="1353.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="2016" y="1360.1018">remainingTime: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="1997" x2="2258" y1="1368.2038" y2="1368.2038"/><ellipse cx="2007" cy="1383.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="2016" y="1387.1697">getValidRules(): Rule[]</text><ellipse cx="2007" cy="1402.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2016" y="1406.2376">getOutcome(): Outcome</text><ellipse cx="2007" cy="1421.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="2016" y="1425.3055">equalByItems(state: State): boolean</text><ellipse cx="2007" cy="1440.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="2016" y="1444.3734">getLampPosition(): RiverBank</text></g><!--MD5=[08770b5ff02271603200ffd0f930842d]
class Problem--><g id="elem_Problem"><rect codeLine="101" fill="#F1F1F1" height="105.2038" id="Problem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="383" x="1530" y="1309"/><ellipse cx="1689.25" cy="1325" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1689.3594,1320.5313 Q1688.4375,1320.5313 1687.7031,1320.8438 Q1686.9844,1321.1563 1686.4844,1321.75 Q1685.9844,1322.3281 1685.7031,1323.2031 Q1685.4375,1324.0781 1685.4375,1325.1719 Q1685.4375,1326.6094 1685.875,1327.6563 Q1686.3281,1328.7031 1687.1719,1329.25 Q1688.0313,1329.7969 1689.3438,1329.7969 Q1690.125,1329.7969 1690.8125,1329.6719 Q1691.5156,1329.5313 1692.5156,1329.2188 L1692.5156,1331.0938 Q1691.6563,1331.4219 1690.8906,1331.5469 Q1690.1406,1331.6719 1689.125,1331.6719 Q1687.2031,1331.6719 1685.8906,1330.875 Q1684.5938,1330.0625 1683.9375,1328.5938 Q1683.2813,1327.1094 1683.2813,1325.1406 Q1683.2813,1323.7188 1683.6719,1322.5469 Q1684.0781,1321.3594 1684.8594,1320.4844 Q1685.6406,1319.6094 1686.7813,1319.1406 Q1687.9219,1318.6563 1689.3906,1318.6563 Q1690.3438,1318.6563 1691.2344,1318.8594 Q1692.1406,1319.0469 1693.0781,1319.5156 L1692.25,1321.2969 Q1691.4688,1320.9219 1690.8125,1320.7344 Q1690.1563,1320.5313 1689.3594,1320.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1709.75" y="1330.432">Problem</text><line style="stroke:#181818;stroke-width:0.5;" x1="1531" x2="1912" y1="1341" y2="1341"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1538" y="1353.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="82" x="1550" y="1359.9659">rules: Rule[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1531" x2="1912" y1="1368.0679" y2="1368.0679"/><ellipse cx="1541" cy="1383.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="357" x="1550" y="1387.0339">getRule(firstPerson: Item, secondPerson?: Item): Rule</text><ellipse cx="1541" cy="1402.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="211" x="1550" y="1406.1018">isSolution(state: State): boolean</text></g><!--MD5=[b6822c04d2a4e38de2312ac23c188825]
class BasicEdge--><g id="elem_BasicEdge"><rect codeLine="107" fill="#F1F1F1" height="97.2038" id="BasicEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="1049" y="1313"/><ellipse cx="1106.75" cy="1329" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1110.0938,1334.25 L1108.625,1330.5 L1104.1875,1330.5 L1102.75,1334.25 L1100.625,1334.25 L1105.5781,1321.5313 L1107.3281,1321.5313 L1112.25,1334.25 L1110.0938,1334.25 Z M1106.75,1325.2969 Q1106.7031,1325.1406 1106.5781,1324.7813 Q1106.4531,1324.4219 1106.3438,1324.0469 Q1106.2344,1323.6563 1106.4375,1323.5938 Q1106.5938,1323.7813 1106.5,1324.1406 Q1106.4063,1324.4844 1106.3125,1324.7813 Q1106.2188,1325.0625 1106.1406,1325.2969 L1104.9063,1328.6094 L1107.9844,1328.6094 L1106.75,1325.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="62" x="1127.25" y="1334.432">BasicEdge</text><line style="stroke:#181818;stroke-width:0.5;" x1="1050" x2="1234" y1="1345" y2="1345"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1057" y="1357.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1069" y="1363.9659">sourceNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1057" y="1376.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="1069" y="1383.0339">targetNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1057" y="1395.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1069" y="1402.1018">rule: Rule</text></g><!--MD5=[991089839fde95c2276dcf2721646821]
class BasicNode--><g id="elem_BasicNode"><rect codeLine="113" fill="#F1F1F1" height="238.6792" id="BasicNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="567" x="858" y="889.5"/><ellipse cx="1104.75" cy="905.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1108.0938,910.75 L1106.625,907 L1102.1875,907 L1100.75,910.75 L1098.625,910.75 L1103.5781,898.0313 L1105.3281,898.0313 L1110.25,910.75 L1108.0938,910.75 Z M1104.75,901.7969 Q1104.7031,901.6406 1104.5781,901.2813 Q1104.4531,900.9219 1104.3438,900.5469 Q1104.2344,900.1563 1104.4375,900.0938 Q1104.5938,900.2813 1104.5,900.6406 Q1104.4063,900.9844 1104.3125,901.2813 Q1104.2188,901.5625 1104.1406,901.7969 L1102.9063,905.1094 L1105.9844,905.1094 L1104.75,901.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="65" x="1125.25" y="910.932">BasicNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="859" x2="1424" y1="921.5" y2="921.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="866" y="933.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="878" y="940.4659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="866" y="952.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="878" y="959.5339">state: State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="866" y="971.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="878" y="978.6018">targetEdges: BasicEdge[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="859" x2="1424" y1="986.7038" y2="986.7038"/><polygon fill="#FFFF44" points="869,996.7377,873,1000.7377,869,1004.7377,865,1000.7377" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="429" x="878" y="1005.6697">addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null</text><polygon fill="#FFFF44" points="869,1015.8056,873,1019.8056,869,1023.8056,865,1019.8056" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="541" x="878" y="1024.7376">addTargetEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge</text><ellipse cx="869" cy="1039.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="878" y="1043.8055">addEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge</text><ellipse cx="869" cy="1058.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="878" y="1062.8734">connectTargetEdges(targetEdges: BasicEdge[]): void</text><ellipse cx="869" cy="1078.0094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="258" x="878" y="1081.9414">checkIfThereIsLoop(state: State): boolean</text><ellipse cx="869" cy="1097.0773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="878" y="1101.0093">getDotColor(): string</text><ellipse cx="869" cy="1116.1452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="878" y="1120.0772">toDot(): string</text></g><!--MD5=[2a3c70e0e60fdc5bec87fc3bba3491c5]
class BasicStructure--><g id="elem_BasicStructure"><rect codeLine="126" fill="#F1F1F1" height="143.3396" id="BasicStructure" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="526" x="836" y="635"/><ellipse cx="1049.75" cy="651" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1053.0938,656.25 L1051.625,652.5 L1047.1875,652.5 L1045.75,656.25 L1043.625,656.25 L1048.5781,643.5313 L1050.3281,643.5313 L1055.25,656.25 L1053.0938,656.25 Z M1049.75,647.2969 Q1049.7031,647.1406 1049.5781,646.7813 Q1049.4531,646.4219 1049.3438,646.0469 Q1049.2344,645.6563 1049.4375,645.5938 Q1049.5938,645.7813 1049.5,646.1406 Q1049.4063,646.4844 1049.3125,646.7813 Q1049.2188,647.0625 1049.1406,647.2969 L1047.9063,650.6094 L1050.9844,650.6094 L1049.75,647.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="90" x="1070.25" y="656.432">BasicStructure</text><line style="stroke:#181818;stroke-width:0.5;" x1="837" x2="1361" y1="667" y2="667"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="844" y="679.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="856" y="685.9659">nextNodeId: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="837" x2="1361" y1="694.0679" y2="694.0679"/><polygon fill="#FFFF44" points="847,704.1019,851,708.1019,847,712.1019,843,708.1019" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="330" x="856" y="713.0339">instantiateNode(id: number, state: State): BasicNode</text><polygon fill="#FFFF44" points="847,723.1698,851,727.1698,847,731.1698,843,727.1698" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="856" y="732.1018">createNode(state: State): BasicNode</text><ellipse cx="847" cy="747.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="500" x="856" y="751.1697">createValidTransitions(node: BasicNode, sortingFunction: Function): BasicEdge[]</text><ellipse cx="847" cy="766.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="88" x="856" y="770.2376">toDot(): string</text></g><!--MD5=[0fe71ee5d44d03bcbd1815cd1a526ec5]
class TreeEdge--><g id="elem_TreeEdge"><rect codeLine="134" fill="#F1F1F1" height="32" id="TreeEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="488" y="992.5"/><ellipse cx="503" cy="1008.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M503.1094,1004.0313 Q502.1875,1004.0313 501.4531,1004.3438 Q500.7344,1004.6563 500.2344,1005.25 Q499.7344,1005.8281 499.4531,1006.7031 Q499.1875,1007.5781 499.1875,1008.6719 Q499.1875,1010.1094 499.625,1011.1563 Q500.0781,1012.2031 500.9219,1012.75 Q501.7813,1013.2969 503.0938,1013.2969 Q503.875,1013.2969 504.5625,1013.1719 Q505.2656,1013.0313 506.2656,1012.7188 L506.2656,1014.5938 Q505.4063,1014.9219 504.6406,1015.0469 Q503.8906,1015.1719 502.875,1015.1719 Q500.9531,1015.1719 499.6406,1014.375 Q498.3438,1013.5625 497.6875,1012.0938 Q497.0313,1010.6094 497.0313,1008.6406 Q497.0313,1007.2188 497.4219,1006.0469 Q497.8281,1004.8594 498.6094,1003.9844 Q499.3906,1003.1094 500.5313,1002.6406 Q501.6719,1002.1563 503.1406,1002.1563 Q504.0938,1002.1563 504.9844,1002.3594 Q505.8906,1002.5469 506.8281,1003.0156 L506,1004.7969 Q505.2188,1004.4219 504.5625,1004.2344 Q503.9063,1004.0313 503.1094,1004.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="517" y="1013.932">TreeEdge</text></g><!--MD5=[8c9078384c8216faeee668eb33da04e9]
class TreeNode--><g id="elem_TreeNode"><rect codeLine="136" fill="#F1F1F1" height="124.2717" id="TreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="482" x="295" y="644.5"/><ellipse cx="498.75" cy="660.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M498.8594,656.0313 Q497.9375,656.0313 497.2031,656.3438 Q496.4844,656.6563 495.9844,657.25 Q495.4844,657.8281 495.2031,658.7031 Q494.9375,659.5781 494.9375,660.6719 Q494.9375,662.1094 495.375,663.1563 Q495.8281,664.2031 496.6719,664.75 Q497.5313,665.2969 498.8438,665.2969 Q499.625,665.2969 500.3125,665.1719 Q501.0156,665.0313 502.0156,664.7188 L502.0156,666.5938 Q501.1563,666.9219 500.3906,667.0469 Q499.6406,667.1719 498.625,667.1719 Q496.7031,667.1719 495.3906,666.375 Q494.0938,665.5625 493.4375,664.0938 Q492.7813,662.6094 492.7813,660.6406 Q492.7813,659.2188 493.1719,658.0469 Q493.5781,656.8594 494.3594,655.9844 Q495.1406,655.1094 496.2813,654.6406 Q497.4219,654.1563 498.8906,654.1563 Q499.8438,654.1563 500.7344,654.3594 Q501.6406,654.5469 502.5781,655.0156 L501.75,656.7969 Q500.9688,656.4219 500.3125,656.2344 Q499.6563,656.0313 498.8594,656.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="519.25" y="665.932">TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="296" x2="776" y1="676.5" y2="676.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="303" y="688.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="315" y="695.4659">sourceEdge: TreeEdge | null</text><line style="stroke:#181818;stroke-width:0.5;" x1="296" x2="776" y1="703.5679" y2="703.5679"/><polygon fill="#FFFF44" points="306,713.6019,310,717.6019,306,721.6019,302,717.6019" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="315" y="722.5339">addSourceEdge(sourceNode: TreeNode, rule: Rule): TreeEdge | null</text><ellipse cx="306" cy="737.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="315" y="741.6018">checkIfThereIsLoop(state: State): boolean</text><ellipse cx="306" cy="756.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="315" y="760.6697">checkIfTransitionAlreadyExists(rule: Rule): boolean</text></g><!--MD5=[bb7f1c801adcc1c297b2d9190618259c]
class Tree--><g id="elem_Tree"><rect codeLine="143" fill="#F1F1F1" height="124.2717" id="Tree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="396" y="343"/><ellipse cx="550.25" cy="359" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M550.3594,354.5313 Q549.4375,354.5313 548.7031,354.8438 Q547.9844,355.1563 547.4844,355.75 Q546.9844,356.3281 546.7031,357.2031 Q546.4375,358.0781 546.4375,359.1719 Q546.4375,360.6094 546.875,361.6563 Q547.3281,362.7031 548.1719,363.25 Q549.0313,363.7969 550.3438,363.7969 Q551.125,363.7969 551.8125,363.6719 Q552.5156,363.5313 553.5156,363.2188 L553.5156,365.0938 Q552.6563,365.4219 551.8906,365.5469 Q551.1406,365.6719 550.125,365.6719 Q548.2031,365.6719 546.8906,364.875 Q545.5938,364.0625 544.9375,362.5938 Q544.2813,361.1094 544.2813,359.1406 Q544.2813,357.7188 544.6719,356.5469 Q545.0781,355.3594 545.8594,354.4844 Q546.6406,353.6094 547.7813,353.1406 Q548.9219,352.6563 550.3906,352.6563 Q551.3438,352.6563 552.2344,352.8594 Q553.1406,353.0469 554.0781,353.5156 L553.25,355.2969 Q552.4688,354.9219 551.8125,354.7344 Q551.1563,354.5313 550.3594,354.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="570.75" y="364.432">Tree</text><line style="stroke:#181818;stroke-width:0.5;" x1="397" x2="742" y1="375" y2="375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="404" y="387.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="416" y="393.9659">root: TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="397" x2="742" y1="402.0679" y2="402.0679"/><ellipse cx="407" cy="426.6358" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="416" y="421.0339">createNextValidTransition(node: TreeNode,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="416" y="440.1018">sortingFunction: Function): TreeEdge | null</text><ellipse cx="407" cy="455.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="321" x="416" y="459.1697">getAscendingPath(node: TreeNode): TreeEdge[]</text></g><!--MD5=[4843b67a3b9840b2bac36b52d843b310]
class WeightedTreeEdge--><g id="elem_WeightedTreeEdge"><rect codeLine="149" fill="#F1F1F1" height="59.0679" id="WeightedTreeEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="74.5" y="677"/><ellipse cx="89.5" cy="693" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M89.6094,688.5313 Q88.6875,688.5313 87.9531,688.8438 Q87.2344,689.1563 86.7344,689.75 Q86.2344,690.3281 85.9531,691.2031 Q85.6875,692.0781 85.6875,693.1719 Q85.6875,694.6094 86.125,695.6563 Q86.5781,696.7031 87.4219,697.25 Q88.2813,697.7969 89.5938,697.7969 Q90.375,697.7969 91.0625,697.6719 Q91.7656,697.5313 92.7656,697.2188 L92.7656,699.0938 Q91.9063,699.4219 91.1406,699.5469 Q90.3906,699.6719 89.375,699.6719 Q87.4531,699.6719 86.1406,698.875 Q84.8438,698.0625 84.1875,696.5938 Q83.5313,695.1094 83.5313,693.1406 Q83.5313,691.7188 83.9219,690.5469 Q84.3281,689.3594 85.1094,688.4844 Q85.8906,687.6094 87.0313,687.1406 Q88.1719,686.6563 89.6406,686.6563 Q90.5938,686.6563 91.4844,686.8594 Q92.3906,687.0469 93.3281,687.5156 L92.5,689.2969 Q91.7188,688.9219 91.0625,688.7344 Q90.4063,688.5313 89.6094,688.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="103.5" y="698.432">WeightedTreeEdge</text><line style="stroke:#181818;stroke-width:0.5;" x1="75.5" x2="234.5" y1="709" y2="709"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="82.5" y="721.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="94.5" y="727.9659">weight: number</text></g><!--MD5=[fc8ec160b878bfe58c42ed82c9107112]
class WeightedTreeNode--><g id="elem_WeightedTreeNode"><rect codeLine="153" fill="#F1F1F1" height="97.2038" id="WeightedTreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="71.5" y="356.5"/><ellipse cx="93.7" cy="372.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M97.0438,377.75 L95.575,374 L91.1375,374 L89.7,377.75 L87.575,377.75 L92.5281,365.0313 L94.2781,365.0313 L99.2,377.75 L97.0438,377.75 Z M93.7,368.7969 Q93.6531,368.6406 93.5281,368.2813 Q93.4031,367.9219 93.2938,367.5469 Q93.1844,367.1563 93.3875,367.0938 Q93.5438,367.2813 93.45,367.6406 Q93.3563,367.9844 93.2625,368.2813 Q93.1688,368.5625 93.0906,368.7969 L91.8563,372.1094 L94.9344,372.1094 L93.7,368.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="119" x="109.3" y="377.932">WeightedTreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="72.5" x2="237.5" y1="388.5" y2="388.5"/><ellipse cx="82.5" cy="403.534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="91.5" y="407.4659">getWeight(): number</text><ellipse cx="82.5" cy="422.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="141" x="91.5" y="426.5339">getHeuristic(): number</text><ellipse cx="82.5" cy="441.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="91.5" y="445.6018">getValue(): number</text></g><!--MD5=[05560636010a7bef2faf28b761f4b4cb]
class WeightedTree--><g id="elem_WeightedTree"><rect codeLine="36" fill="#F1F1F1" height="32" id="WeightedTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="108" y="137"/><ellipse cx="123" cy="153" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M126.3438,158.25 L124.875,154.5 L120.4375,154.5 L119,158.25 L116.875,158.25 L121.8281,145.5313 L123.5781,145.5313 L128.5,158.25 L126.3438,158.25 Z M123,149.2969 Q122.9531,149.1406 122.8281,148.7813 Q122.7031,148.4219 122.5938,148.0469 Q122.4844,147.6563 122.6875,147.5938 Q122.8438,147.7813 122.75,148.1406 Q122.6563,148.4844 122.5625,148.7813 Q122.4688,149.0625 122.3906,149.2969 L121.1563,152.6094 L124.2344,152.6094 L123,149.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="86" x="137" y="158.432">WeightedTree</text></g><!--MD5=[d5a630d213adc2e3986060bd811a90b1]
class Search--><g id="elem_Search"><rect codeLine="159" fill="#F1F1F1" height="124.2717" id="Search" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="300" x="1629" y="644.5"/><ellipse cx="1753.75" cy="660.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1757.0938,665.75 L1755.625,662 L1751.1875,662 L1749.75,665.75 L1747.625,665.75 L1752.5781,653.0313 L1754.3281,653.0313 L1759.25,665.75 L1757.0938,665.75 Z M1753.75,656.7969 Q1753.7031,656.6406 1753.5781,656.2813 Q1753.4531,655.9219 1753.3438,655.5469 Q1753.2344,655.1563 1753.4375,655.0938 Q1753.5938,655.2813 1753.5,655.6406 Q1753.4063,655.9844 1753.3125,656.2813 Q1753.2188,656.5625 1753.1406,656.7969 L1751.9063,660.1094 L1754.9844,660.1094 L1753.75,656.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="42" x="1774.25" y="665.932">Search</text><line style="stroke:#181818;stroke-width:0.5;" x1="1630" x2="1928" y1="676.5" y2="676.5"/><polygon fill="none" points="1640,686.534,1644,690.534,1640,694.534,1636,690.534" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1649" y="695.4659">tree: Tree</text><line style="stroke:#181818;stroke-width:0.5;" x1="1630" x2="1928" y1="703.5679" y2="703.5679"/><ellipse cx="1640" cy="718.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="1649" y="722.5339">getAlgorithmName(): string</text><ellipse cx="1640" cy="737.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="214" x="1649" y="741.6018">getSafeAlgorithmName(): string</text><ellipse cx="1640" cy="756.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="274" x="1649" y="760.6697">search(maxIterations?: number): TreeEdge[]</text></g><!--MD5=[7686d504fd3853a1221d3c3ed1fd0f0f]
class UninformedSearch--><g id="elem_UninformedSearch"><rect codeLine="180" fill="#F1F1F1" height="276.815" id="UninformedSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="523" x="2066.5" y="266.5"/><ellipse cx="2265.75" cy="282.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2269.0938,287.75 L2267.625,284 L2263.1875,284 L2261.75,287.75 L2259.625,287.75 L2264.5781,275.0313 L2266.3281,275.0313 L2271.25,287.75 L2269.0938,287.75 Z M2265.75,278.7969 Q2265.7031,278.6406 2265.5781,278.2813 Q2265.4531,277.9219 2265.3438,277.5469 Q2265.2344,277.1563 2265.4375,277.0938 Q2265.5938,277.2813 2265.5,277.6406 Q2265.4063,277.9844 2265.3125,278.2813 Q2265.2188,278.5625 2265.1406,278.7969 L2263.9063,282.1094 L2266.9844,282.1094 L2265.75,278.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="116" x="2286.25" y="287.932">UninformedSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="2067.5" x2="2588.5" y1="298.5" y2="298.5"/><polygon fill="none" points="2077.5,308.534,2081.5,312.534,2077.5,316.534,2073.5,312.534" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2086.5" y="317.4659">currentNode: TreeNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="329.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="2086.5" y="336.5339">openNodes: TreeNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="348.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="2086.5" y="355.6018">closedNodes: TreeNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="367.7377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="2086.5" y="374.6697">sortingFunction: (TreeEdge, TreeEdge) =&gt; number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="386.8056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="2086.5" y="393.7376">currentNode: WeightedTreeNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="405.8735"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="2086.5" y="412.8055">openEdges: WeightedTreeEdge[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="424.9415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="2086.5" y="431.8734">closedNodes: WeightedTreeNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="444.0094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="466" x="2086.5" y="450.9414">sortingFunction: (WeightedTreeEdge, WeightedTreeEdge) =&gt; number</text><line style="stroke:#181818;stroke-width:0.5;" x1="2067.5" x2="2588.5" y1="459.0433" y2="459.0433"/><ellipse cx="2077.5" cy="474.0773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="177" x="2086.5" y="478.0093">getCurrentNode(): TreeNode</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="490.1452"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="2086.5" y="497.0772">doIteration(): TreeEdge[] | null</text><polygon fill="#FFFF44" points="2077.5,507.2131,2081.5,511.2131,2077.5,515.2131,2073.5,511.2131" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="2086.5" y="516.1451">updateCurrentNode(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2074.5" y="528.281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="2086.5" y="535.213">doIteration(currentNode: WeightedTreeNode): WeightedTreeEdge[] | null</text></g><!--MD5=[f660be4ffa4bd991089c932c465ec971]
class BacktrackingSearch--><g id="elem_BacktrackingSearch"><rect codeLine="166" fill="#F1F1F1" height="105.2038" id="BacktrackingSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="322" x="1897" y="100.5"/><ellipse cx="1987.75" cy="116.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1987.8594,112.0313 Q1986.9375,112.0313 1986.2031,112.3438 Q1985.4844,112.6563 1984.9844,113.25 Q1984.4844,113.8281 1984.2031,114.7031 Q1983.9375,115.5781 1983.9375,116.6719 Q1983.9375,118.1094 1984.375,119.1563 Q1984.8281,120.2031 1985.6719,120.75 Q1986.5313,121.2969 1987.8438,121.2969 Q1988.625,121.2969 1989.3125,121.1719 Q1990.0156,121.0313 1991.0156,120.7188 L1991.0156,122.5938 Q1990.1563,122.9219 1989.3906,123.0469 Q1988.6406,123.1719 1987.625,123.1719 Q1985.7031,123.1719 1984.3906,122.375 Q1983.0938,121.5625 1982.4375,120.0938 Q1981.7813,118.6094 1981.7813,116.6406 Q1981.7813,115.2188 1982.1719,114.0469 Q1982.5781,112.8594 1983.3594,111.9844 Q1984.1406,111.1094 1985.2813,110.6406 Q1986.4219,110.1563 1987.8906,110.1563 Q1988.8438,110.1563 1989.7344,110.3594 Q1990.6406,110.5469 1991.5781,111.0156 L1990.75,112.7969 Q1989.9688,112.4219 1989.3125,112.2344 Q1988.6563,112.0313 1987.8594,112.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="2008.25" y="121.932">BacktrackingSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="1898" x2="2218" y1="132.5" y2="132.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1905" y="144.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="1917" y="151.4659">sortingFunction: (Rule, Rule) =&gt; number</text><line style="stroke:#181818;stroke-width:0.5;" x1="1898" x2="2218" y1="159.5679" y2="159.5679"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1905" y="181.1358"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="1917" y="178.5339">doBacktracking(startNode: TreeNode):</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="1917" y="197.6018">{foundNode: TreeNode, isSolution: boolean}</text></g><!--MD5=[1acc1444ea17b597d4326a1f92e0414e]
class BreadthFirstSearch--><g id="elem_BreadthFirstSearch"><rect codeLine="47" fill="#F1F1F1" height="32" id="BreadthFirstSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="2437.5" y="137"/><ellipse cx="2452.5" cy="153" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2452.6094,148.5313 Q2451.6875,148.5313 2450.9531,148.8438 Q2450.2344,149.1563 2449.7344,149.75 Q2449.2344,150.3281 2448.9531,151.2031 Q2448.6875,152.0781 2448.6875,153.1719 Q2448.6875,154.6094 2449.125,155.6563 Q2449.5781,156.7031 2450.4219,157.25 Q2451.2813,157.7969 2452.5938,157.7969 Q2453.375,157.7969 2454.0625,157.6719 Q2454.7656,157.5313 2455.7656,157.2188 L2455.7656,159.0938 Q2454.9063,159.4219 2454.1406,159.5469 Q2453.3906,159.6719 2452.375,159.6719 Q2450.4531,159.6719 2449.1406,158.875 Q2447.8438,158.0625 2447.1875,156.5938 Q2446.5313,155.1094 2446.5313,153.1406 Q2446.5313,151.7188 2446.9219,150.5469 Q2447.3281,149.3594 2448.1094,148.4844 Q2448.8906,147.6094 2450.0313,147.1406 Q2451.1719,146.6563 2452.6406,146.6563 Q2453.5938,146.6563 2454.4844,146.8594 Q2455.3906,147.0469 2456.3281,147.5156 L2455.5,149.2969 Q2454.7188,148.9219 2454.0625,148.7344 Q2453.4063,148.5313 2452.6094,148.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2466.5" y="158.432">BreadthFirstSearch</text></g><!--MD5=[bee246b072b458deb57e2ff44b612b66]
class DepthFirstSearch--><g id="elem_DepthFirstSearch"><rect codeLine="48" fill="#F1F1F1" height="32" id="DepthFirstSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="2254" y="137"/><ellipse cx="2269" cy="153" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2269.1094,148.5313 Q2268.1875,148.5313 2267.4531,148.8438 Q2266.7344,149.1563 2266.2344,149.75 Q2265.7344,150.3281 2265.4531,151.2031 Q2265.1875,152.0781 2265.1875,153.1719 Q2265.1875,154.6094 2265.625,155.6563 Q2266.0781,156.7031 2266.9219,157.25 Q2267.7813,157.7969 2269.0938,157.7969 Q2269.875,157.7969 2270.5625,157.6719 Q2271.2656,157.5313 2272.2656,157.2188 L2272.2656,159.0938 Q2271.4063,159.4219 2270.6406,159.5469 Q2269.8906,159.6719 2268.875,159.6719 Q2266.9531,159.6719 2265.6406,158.875 Q2264.3438,158.0625 2263.6875,156.5938 Q2263.0313,155.1094 2263.0313,153.1406 Q2263.0313,151.7188 2263.4219,150.5469 Q2263.8281,149.3594 2264.6094,148.4844 Q2265.3906,147.6094 2266.5313,147.1406 Q2267.6719,146.6563 2269.1406,146.6563 Q2270.0938,146.6563 2270.9844,146.8594 Q2271.8906,147.0469 2272.8281,147.5156 L2272,149.2969 Q2271.2188,148.9219 2270.5625,148.7344 Q2269.9063,148.5313 2269.1094,148.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="2283" y="158.432">DepthFirstSearch</text></g><!--MD5=[74e179b9d81d7c70fa930fb563934bda]
class InformedSearch--><g id="elem_InformedSearch"><rect codeLine="52" fill="#F1F1F1" height="32" id="InformedSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="1529.5" y="389"/><ellipse cx="1544.5" cy="405" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1544.6094,400.5313 Q1543.6875,400.5313 1542.9531,400.8438 Q1542.2344,401.1563 1541.7344,401.75 Q1541.2344,402.3281 1540.9531,403.2031 Q1540.6875,404.0781 1540.6875,405.1719 Q1540.6875,406.6094 1541.125,407.6563 Q1541.5781,408.7031 1542.4219,409.25 Q1543.2813,409.7969 1544.5938,409.7969 Q1545.375,409.7969 1546.0625,409.6719 Q1546.7656,409.5313 1547.7656,409.2188 L1547.7656,411.0938 Q1546.9063,411.4219 1546.1406,411.5469 Q1545.3906,411.6719 1544.375,411.6719 Q1542.4531,411.6719 1541.1406,410.875 Q1539.8438,410.0625 1539.1875,408.5938 Q1538.5313,407.1094 1538.5313,405.1406 Q1538.5313,403.7188 1538.9219,402.5469 Q1539.3281,401.3594 1540.1094,400.4844 Q1540.8906,399.6094 1542.0313,399.1406 Q1543.1719,398.6563 1544.6406,398.6563 Q1545.5938,398.6563 1546.4844,398.8594 Q1547.3906,399.0469 1548.3281,399.5156 L1547.5,401.2969 Q1546.7188,400.9219 1546.0625,400.7344 Q1545.4063,400.5313 1544.6094,400.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="1558.5" y="410.432">InformedSearch</text></g><!--MD5=[45ced7d662657476bd3ae4bfad8115e2]
class OrderedSearch--><g id="elem_OrderedSearch"><rect codeLine="53" fill="#F1F1F1" height="32" id="OrderedSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="1705.5" y="389"/><ellipse cx="1720.5" cy="405" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1720.6094,400.5313 Q1719.6875,400.5313 1718.9531,400.8438 Q1718.2344,401.1563 1717.7344,401.75 Q1717.2344,402.3281 1716.9531,403.2031 Q1716.6875,404.0781 1716.6875,405.1719 Q1716.6875,406.6094 1717.125,407.6563 Q1717.5781,408.7031 1718.4219,409.25 Q1719.2813,409.7969 1720.5938,409.7969 Q1721.375,409.7969 1722.0625,409.6719 Q1722.7656,409.5313 1723.7656,409.2188 L1723.7656,411.0938 Q1722.9063,411.4219 1722.1406,411.5469 Q1721.3906,411.6719 1720.375,411.6719 Q1718.4531,411.6719 1717.1406,410.875 Q1715.8438,410.0625 1715.1875,408.5938 Q1714.5313,407.1094 1714.5313,405.1406 Q1714.5313,403.7188 1714.9219,402.5469 Q1715.3281,401.3594 1716.1094,400.4844 Q1716.8906,399.6094 1718.0313,399.1406 Q1719.1719,398.6563 1720.6406,398.6563 Q1721.5938,398.6563 1722.4844,398.8594 Q1723.3906,399.0469 1724.3281,399.5156 L1723.5,401.2969 Q1722.7188,400.9219 1722.0625,400.7344 Q1721.4063,400.5313 1720.6094,400.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="1734.5" y="410.432">OrderedSearch</text></g><!--MD5=[fa4e71b7f3755c4c1cfe4a153b4bc2f3]
class GreedySearch--><g id="elem_GreedySearch"><rect codeLine="54" fill="#F1F1F1" height="32" id="GreedySearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="126" x="1537" y="137"/><ellipse cx="1552" cy="153" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1552.1094,148.5313 Q1551.1875,148.5313 1550.4531,148.8438 Q1549.7344,149.1563 1549.2344,149.75 Q1548.7344,150.3281 1548.4531,151.2031 Q1548.1875,152.0781 1548.1875,153.1719 Q1548.1875,154.6094 1548.625,155.6563 Q1549.0781,156.7031 1549.9219,157.25 Q1550.7813,157.7969 1552.0938,157.7969 Q1552.875,157.7969 1553.5625,157.6719 Q1554.2656,157.5313 1555.2656,157.2188 L1555.2656,159.0938 Q1554.4063,159.4219 1553.6406,159.5469 Q1552.8906,159.6719 1551.875,159.6719 Q1549.9531,159.6719 1548.6406,158.875 Q1547.3438,158.0625 1546.6875,156.5938 Q1546.0313,155.1094 1546.0313,153.1406 Q1546.0313,151.7188 1546.4219,150.5469 Q1546.8281,149.3594 1547.6094,148.4844 Q1548.3906,147.6094 1549.5313,147.1406 Q1550.6719,146.6563 1552.1406,146.6563 Q1553.0938,146.6563 1553.9844,146.8594 Q1554.8906,147.0469 1555.8281,147.5156 L1555,149.2969 Q1554.2188,148.9219 1553.5625,148.7344 Q1552.9063,148.5313 1552.1094,148.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="1566" y="158.432">GreedySearch</text></g><!--MD5=[354f0c4d58220a30e473fd49f423a34b]
class AStarSearch--><g id="elem_AStarSearch"><rect codeLine="55" fill="#F1F1F1" height="32" id="AStarSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="114" x="1698" y="137"/><ellipse cx="1713" cy="153" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1713.1094,148.5313 Q1712.1875,148.5313 1711.4531,148.8438 Q1710.7344,149.1563 1710.2344,149.75 Q1709.7344,150.3281 1709.4531,151.2031 Q1709.1875,152.0781 1709.1875,153.1719 Q1709.1875,154.6094 1709.625,155.6563 Q1710.0781,156.7031 1710.9219,157.25 Q1711.7813,157.7969 1713.0938,157.7969 Q1713.875,157.7969 1714.5625,157.6719 Q1715.2656,157.5313 1716.2656,157.2188 L1716.2656,159.0938 Q1715.4063,159.4219 1714.6406,159.5469 Q1713.8906,159.6719 1712.875,159.6719 Q1710.9531,159.6719 1709.6406,158.875 Q1708.3438,158.0625 1707.6875,156.5938 Q1707.0313,155.1094 1707.0313,153.1406 Q1707.0313,151.7188 1707.4219,150.5469 Q1707.8281,149.3594 1708.6094,148.4844 Q1709.3906,147.6094 1710.5313,147.1406 Q1711.6719,146.6563 1713.1406,146.6563 Q1714.0938,146.6563 1714.9844,146.8594 Q1715.8906,147.0469 1716.8281,147.5156 L1716,149.2969 Q1715.2188,148.9219 1714.5625,148.7344 Q1713.9063,148.5313 1713.1094,148.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1727" y="158.432">AStarSearch</text></g><!--MD5=[68cbb797e13e28fad43505a075e340b3]
link Rule to BasicEdge--><g id="link_Rule_BasicEdge"><path codeLine="192" d="M1571.25,1577.23 C1474.48,1528.93 1334.17,1458.91 1240.61,1412.21 " fill="none" id="Rule-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1236.15,1409.99,1242.4207,1417.5846,1240.625,1412.2203,1245.9893,1410.4246,1236.15,1409.99" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1445" y="1516.397">Represents</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1556.0066" y="1569.4599">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1243.1058" y="1420.3007">0..n</text></g><!--MD5=[e894ca0edc3cfe44a3321e9c02df0dfb]
reverse link Problem to Rule--><g id="link_Problem_Rule"><path codeLine="193" d="M1711.84,1427.98 C1705.05,1471.36 1696.19,1528.02 1689.54,1570.54 " fill="none" id="Problem-backto-Rule" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1713.82,1415.31,1708.9386,1420.6177,1711.9606,1427.1651,1716.842,1421.8573,1713.82,1415.31" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1700.6169" y="1436.6088">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1668.423" y="1558.8762">1..n</text></g><!--MD5=[35d72b0e928a4d3243c81e99bec60f94]
link BasicNode to BasicEdge--><g id="link_BasicNode_BasicEdge"><path codeLine="194" d="M1142,1127.03 C1142,1187.77 1142,1258.97 1142,1306.73 " fill="none" id="BasicNode-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1142,1311.51,1146,1302.51,1142,1306.51,1138,1302.51,1142,1311.51" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="1143" y="1192.397">Has Target</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1134.2688" y="1150.7501">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1119.3922" y="1301.2304">0..n</text></g><!--MD5=[d037933e2bb3cbb487cc804950073d26]
link BasicNode to State--><g id="link_BasicNode_State"><path codeLine="195" d="M1424.81,1042.22 C1586.75,1069.38 1789.75,1118.13 1954,1204.5 C1984.81,1220.7 2014.48,1243.58 2040.33,1266.86 " fill="none" id="BasicNode-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2043.99,1270.19,2040.0126,1261.18,2040.2871,1266.8302,2034.6369,1267.1047,2043.99,1270.19" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="1935" y="1192.397">Has State</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1433.1121" y="1040.497">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="2030.4604" y="1259.3188">1</text></g><!--MD5=[6129d246fa550a7af153a7c61078b1cf]
link TreeNode to TreeEdge--><g id="link_TreeNode_TreeEdge"><path codeLine="196" d="M498.08,768.49 C489.82,784.8 482.27,802.82 478,820.5 C463.07,882.28 500.9,953.58 522.38,987.53 " fill="none" id="TreeNode-to-TreeEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="524.85,991.38,523.3629,981.6441,522.1527,987.1699,516.6268,985.9597,524.85,991.38" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="66" x="479" y="835.397">Has source</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="471.9233" y="790.2266">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="20" x="498.1733" y="980.6981">0..1</text></g><!--MD5=[e6dbb7050ae1c78776710c057e065841]
link Tree to TreeNode--><g id="link_Tree_TreeNode"><path codeLine="197" d="M535.3,466.64 C519.3,498.05 502.1,537.66 494,575.5 C489.53,596.4 493.41,618.69 500.31,638.81 " fill="none" id="Tree-to-TreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="501.93,643.27,502.6398,633.4468,500.2339,638.5665,495.1142,636.1605,501.93,643.27" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="495" y="590.397">Has root</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="509.9213" y="489.5486">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="490.6917" y="632.6177">1</text></g><!--MD5=[8aff1c984766060b6a0542611b773bd2]
reverse link Tree to Search--><g id="link_Tree_Search"><path codeLine="198" d="M749.11,449 C929.92,492.58 1217.08,562.26 1465,624.5 C1518.65,637.97 1577.37,653.03 1629.36,666.48 " fill="none" id="Tree-backto-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="744.47,447.88,752.2853,453.8734,749.3314,449.049,754.1558,446.0951,744.47,447.88" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="50" x="1345" y="590.397">Has tree</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="751.1406" y="447.4772">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1613.9852" y="660.7355">1</text></g><!--MD5=[6417cd8e40404b725648120d051d6d1e]
link TreeEdge to BasicEdge--><g id="link_TreeEdge_BasicEdge"><path codeLine="199" d="M540.37,1024.1 C549.36,1051.83 572.49,1112.49 612,1147.5 C732.03,1253.88 911.86,1311.05 1028.07,1338.73 " fill="none" id="TreeEdge-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1029.62,1331.91,1047.53,1343.23,1026.47,1345.55,1029.62,1331.91" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[da37ca0a4895273684b24df6daa84c4b]
link TreeNode to BasicNode--><g id="link_TreeNode_BasicNode"><path codeLine="200" d="M659,768.39 C724.04,800.59 806.44,841.38 884.67,880.11 " fill="none" id="TreeNode-to-BasicNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="887.76,873.83,902.57,888.97,881.54,886.37,887.76,873.83" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1e419efe75438c0f51d1d77eb23720a7]
link Tree to BasicStructure--><g id="link_Tree_BasicStructure"><path codeLine="201" d="M677.69,466.97 C757.7,512.27 867.68,574.53 955.21,624.09 " fill="none" id="Tree-to-BasicStructure" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="958.53,617.93,972.49,633.87,951.64,630.11,958.53,617.93" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2cddfae00cfe97b27de237baec21b5ea]
link BacktrackingSearch to Search--><g id="link_BacktrackingSearch_Search"><path codeLine="202" d="M2034.1,205.76 C1997.43,284.57 1924.44,439.05 1857,567.5 C1846.93,586.69 1835.67,607.13 1824.91,626.24 " fill="none" id="BacktrackingSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1831.08,629.55,1815.13,643.49,1818.9,622.64,1831.08,629.55" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a814e840da8f50d0cfd0442e0a2aec90]
link UninformedSearch to Search--><g id="link_UninformedSearch_Search"><path codeLine="203" d="M2105.14,543.88 C2090.96,552.01 2076.83,559.95 2063,567.5 C2020.56,590.68 1973.64,614.27 1930.37,635.24 " fill="none" id="UninformedSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1933.53,641.49,1912.47,643.86,1927.45,628.87,1933.53,641.49" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bbbcf976ae8363dd9cd71c3c2b524997]
link InformedSearch to Search--><g id="link_InformedSearch_Search"><path codeLine="204" d="M1607.83,421.38 C1622.72,450.38 1656.43,514.95 1688,567.5 C1699.7,586.98 1712.87,607.62 1725.48,626.83 " fill="none" id="InformedSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1731.29,622.92,1736.5,643.46,1719.62,630.65,1731.29,622.92" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[68a0e67f6e3f9c8ace1bb9fbd3db5027]
link BreadthFirstSearch to UninformedSearch--><g id="link_BreadthFirstSearch_UninformedSearch"><path codeLine="205" d="M2506.4,169.26 C2493.3,186.49 2470.54,216.44 2445.58,249.3 " fill="none" id="BreadthFirstSearch-to-UninformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2451.36,253.26,2433.68,264.94,2440.21,244.78,2451.36,253.26" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8ae24da3adde662cd2542f7a4be60495]
link DepthFirstSearch to UninformedSearch--><g id="link_DepthFirstSearch_UninformedSearch"><path codeLine="206" d="M2328,169.26 C2328,185.71 2328,213.73 2328,244.81 " fill="none" id="DepthFirstSearch-to-UninformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2335,244.63,2328,264.63,2321,244.63,2335,244.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[77a59e362d90368c42e093a55d18e163]
reverse link InformedSearch to OrderedSearch--><g id="link_InformedSearch_OrderedSearch"><path codeLine="207" d="M1692.38,405 C1696.67,405 1700.95,405 1705.24,405 " fill="none" id="InformedSearch-backto-OrderedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1692.47,412,1672.47,405,1692.47,398,1692.47,412" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[32bd8cfccb2cecf468ff8cda7d159dee]
link GreedySearch to InformedSearch--><g id="link_GreedySearch_InformedSearch"><path codeLine="208" d="M1600,169.26 C1600,208.14 1600,311.75 1600,367.42 " fill="none" id="GreedySearch-to-InformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1607,367.11,1600,387.11,1593,367.11,1607,367.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7149672487d2764146d752e331edfc00]
link AStarSearch to InformedSearch--><g id="link_AStarSearch_InformedSearch"><path codeLine="209" d="M1745.54,169.26 C1721,208.84 1654.87,315.49 1620.85,370.37 " fill="none" id="AStarSearch-to-InformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1626.82,374.02,1610.33,387.33,1614.92,366.65,1626.82,374.02" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[883ff11a7e97d61180e482f89b1fb75a]
link WeightedTreeEdge to TreeEdge--><g id="link_WeightedTreeEdge_TreeEdge"><path codeLine="210" d="M174.24,736.29 C190.02,758.63 213.8,789.56 239,812.5 C318.47,884.85 427.33,949.04 488.77,982.67 " fill="none" id="WeightedTreeEdge-to-TreeEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="491.71,976.3,505.99,991.96,485.06,988.62,491.71,976.3" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f4e1fd54575900be46a4974447692a60]
link WeightedTreeNode to TreeNode--><g id="link_WeightedTreeNode_TreeNode"><path codeLine="211" d="M171.4,453.96 C185.49,489.15 208.8,536.09 242,567.5 C270.29,594.27 304.73,616.64 339.93,635.04 " fill="none" id="WeightedTreeNode-to-TreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="342.85,628.68,357.6,643.9,336.58,641.19,342.85,628.68" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fe785007cd4539747d41b01700702357]
link WeightedTree to Tree--><g id="link_WeightedTree_Tree"><path codeLine="212" d="M191.91,169.45 C243.01,201.15 362.59,275.33 453.69,331.85 " fill="none" id="WeightedTree-to-Tree" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="457.2,325.79,470.51,342.28,449.82,337.68,457.2,325.79" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ff425a338953511d10fa525b4922dde8]
link RiverBank to Item--><!--MD5=[bcbec08e18fdbcb78e78c15a6692f133]
link Outcome to RiverBank--><!--MD5=[920a0f520a6b4a5dbeb5d50e2ff9f258]
link UninformedSearch to Item--><!--MD5=[07f54075853fd479b64dbe7a730e9886]
link GreedySearch to AStarSearch--><!--MD5=[9bd93df30fbd98658f00fcb75c794a0d]
link AStarSearch to OrderedSearch--><!--MD5=[2a0dc31413142cd3597d4996351fac98]
link WeightedTree to WeightedTreeNode--><!--MD5=[f274a5703e2287df627ac45baa2c8ed0]
link WeightedTreeNode to WeightedTreeEdge--><!--MD5=[fe2c9237d39d322a13805d39b3df2ee2]
@startuml

    ' Config
    hide empty members
    skinparam groupInheritance 2
    ' skinparam classAttributeIconSize 0
    ' left to right direction


    ' Pacotes

    package Definitions <<Rectangle>> {
        enum Item
        enum RiverBank
        struct Outcome
    }

    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package "Tree" as PK_Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree

            package "WeightedTree" as PK_WeightedTree <<Rectangle>> {
                class WeightedTreeEdge
                abstract class WeightedTreeNode
                abstract class WeightedTree
            }
        }
    }

    package Searches <<Rectangle>> {
        abstract class Search

        package "UninformedSearch" as PK_UninformedSearch <<Rectangle>> {
        abstract class UninformedSearch
            class BacktrackingSearch
            class BreadthFirstSearch
            class DepthFirstSearch
        }

        package "InformedSearch" as PK_InformedSearch <<Rectangle>> {
            class InformedSearch
            class OrderedSearch
            class GreedySearch
            class AStarSearch
        }
    }


    ' Definições

    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }


    ' Classes

    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        #addTargetEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +connectTargetEdges(targetEdges: BasicEdge[]): void
        +{abstract}checkIfThereIsLoop(state: State): boolean
        +getDotColor(): string
        +toDot(): string
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode, sortingFunction: Function): BasicEdge[]
        +{abstract}toDot(): string
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
        #addSourceEdge(sourceNode: TreeNode, rule: Rule): TreeEdge | null
        +checkIfThereIsLoop(state: State): boolean
        +checkIfTransitionAlreadyExists(rule: Rule): boolean
    }

    class Tree {
        -root: TreeNode
        +createNextValidTransition(node: TreeNode, \nsortingFunction: Function): TreeEdge | null
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }

    class WeightedTreeEdge {
        -weight: number
    }

    abstract class WeightedTreeNode {
        +getWeight(): number
        {abstract}+getHeuristic(): number
        +getValue(): number
    }

    abstract class Search {
        #tree: Tree
        +{static}getAlgorithmName(): string
        +{static}getSafeAlgorithmName(): string
        +{abstract}search(maxIterations?: number): TreeEdge[]
    }

    class BacktrackingSearch {
        {field}-sortingFunction: (Rule, Rule) => number
        -doBacktracking(startNode: TreeNode): \n{foundNode: TreeNode, isSolution: boolean}
    }

    abstract class UninformedSearch {
        #currentNode: TreeNode
        -openNodes: TreeNode[]
        -closedNodes: TreeNode[]
        {field}-sortingFunction: (TreeEdge, TreeEdge) => number
        {abstract}+getCurrentNode(): TreeNode
        -doIteration(): TreeEdge[] | null
    }

    abstract class UninformedSearch {
        -currentNode: WeightedTreeNode
        -openEdges: WeightedTreeEdge[]
        -closedNodes: WeightedTreeNode[]
        {field}-sortingFunction: (WeightedTreeEdge, WeightedTreeEdge) => number
        #updateCurrentNode(): void
        -doIteration(currentNode: WeightedTreeNode): WeightedTreeEdge[] | null
    }


    ' Relacionamentos

    Rule "1" - -> "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule
    BasicNode "1" - -> "0..n" BasicEdge : Has Target
    BasicNode "1" - -> "1" State : Has State
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    Tree "1" <- - "1" Search : Has tree
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure
    BacktrackingSearch - -|> Search
    UninformedSearch - -|> Search
    InformedSearch - -|> Search
    BreadthFirstSearch - -|> UninformedSearch
    DepthFirstSearch - -|> UninformedSearch
    OrderedSearch -l-|> InformedSearch
    GreedySearch -d-|> InformedSearch
    AStarSearch -do-|> InformedSearch
    WeightedTreeEdge - -|> TreeEdge
    WeightedTreeNode - -|> TreeNode
    WeightedTree - -|> Tree

    Item -[hidden]left- RiverBank
    RiverBank -[hidden]left- Outcome
    UninformedSearch - -[hidden]down-> Item
    GreedySearch -[hidden]r- AStarSearch
    AStarSearch -[hidden]d- OrderedSearch
    WeightedTree -[hidden]d- WeightedTreeNode
    WeightedTreeNode -[hidden]d- WeightedTreeEdge


@enduml

@startuml

    hide empty members
    skinparam groupInheritance 2



    package Definitions <<Rectangle>> {
        enum Item
        enum RiverBank
        struct Outcome
    }

    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package "Tree" as PK_Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree

            package "WeightedTree" as PK_WeightedTree <<Rectangle>> {
                class WeightedTreeEdge
                abstract class WeightedTreeNode
                abstract class WeightedTree
            }
        }
    }

    package Searches <<Rectangle>> {
        abstract class Search

        package "UninformedSearch" as PK_UninformedSearch <<Rectangle>> {
        abstract class UninformedSearch
            class BacktrackingSearch
            class BreadthFirstSearch
            class DepthFirstSearch
        }

        package "InformedSearch" as PK_InformedSearch <<Rectangle>> {
            class InformedSearch
            class OrderedSearch
            class GreedySearch
            class AStarSearch
        }
    }



    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }



    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        #addTargetEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +connectTargetEdges(targetEdges: BasicEdge[]): void
        +{abstract}checkIfThereIsLoop(state: State): boolean
        +getDotColor(): string
        +toDot(): string
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode, sortingFunction: Function): BasicEdge[]
        +{abstract}toDot(): string
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
        #addSourceEdge(sourceNode: TreeNode, rule: Rule): TreeEdge | null
        +checkIfThereIsLoop(state: State): boolean
        +checkIfTransitionAlreadyExists(rule: Rule): boolean
    }

    class Tree {
        -root: TreeNode
        +createNextValidTransition(node: TreeNode, \nsortingFunction: Function): TreeEdge | null
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }

    class WeightedTreeEdge {
        -weight: number
    }

    abstract class WeightedTreeNode {
        +getWeight(): number
        {abstract}+getHeuristic(): number
        +getValue(): number
    }

    abstract class Search {
        #tree: Tree
        +{static}getAlgorithmName(): string
        +{static}getSafeAlgorithmName(): string
        +{abstract}search(maxIterations?: number): TreeEdge[]
    }

    class BacktrackingSearch {
        {field}-sortingFunction: (Rule, Rule) => number
        -doBacktracking(startNode: TreeNode): \n{foundNode: TreeNode, isSolution: boolean}
    }

    abstract class UninformedSearch {
        #currentNode: TreeNode
        -openNodes: TreeNode[]
        -closedNodes: TreeNode[]
        {field}-sortingFunction: (TreeEdge, TreeEdge) => number
        {abstract}+getCurrentNode(): TreeNode
        -doIteration(): TreeEdge[] | null
    }

    abstract class UninformedSearch {
        -currentNode: WeightedTreeNode
        -openEdges: WeightedTreeEdge[]
        -closedNodes: WeightedTreeNode[]
        {field}-sortingFunction: (WeightedTreeEdge, WeightedTreeEdge) => number
        #updateCurrentNode(): void
        -doIteration(currentNode: WeightedTreeNode): WeightedTreeEdge[] | null
    }



    Rule "1" - -> "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule
    BasicNode "1" - -> "0..n" BasicEdge : Has Target
    BasicNode "1" - -> "1" State : Has State
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    Tree "1" <- - "1" Search : Has tree
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure
    BacktrackingSearch - -|> Search
    UninformedSearch - -|> Search
    InformedSearch - -|> Search
    BreadthFirstSearch - -|> UninformedSearch
    DepthFirstSearch - -|> UninformedSearch
    OrderedSearch -l-|> InformedSearch
    GreedySearch -d-|> InformedSearch
    AStarSearch -do-|> InformedSearch
    WeightedTreeEdge - -|> TreeEdge
    WeightedTreeNode - -|> TreeNode
    WeightedTree - -|> Tree

    Item -[hidden]left- RiverBank
    RiverBank -[hidden]left- Outcome
    UninformedSearch - -[hidden]down-> Item
    GreedySearch -[hidden]r- AStarSearch
    AStarSearch -[hidden]d- OrderedSearch
    WeightedTree -[hidden]d- WeightedTreeNode
    WeightedTreeNode -[hidden]d- WeightedTreeEdge


@enduml

PlantUML version 1.2022.7(Mon Aug 22 14:01:30 BRT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>