<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1543px" preserveAspectRatio="none" style="width:1835px;height:1543px;background:#FFFFFF;" version="1.1" viewBox="0 0 1835 1543" width="1835px" zoomAndPan="magnify"><defs/><g><!--MD5=[4add89f23865d9608ef05f08bfd846b0]
cluster Definitions--><g id="cluster_Definitions"><rect fill="none" height="208" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="434" x="1199" y="729"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="77.8125" x="1377.0938" y="745.9659">Definitions</text></g><!--MD5=[121a8bf1197281ab89ed693fab589f94]
cluster Domain--><g id="cluster_Domain"><rect fill="none" height="518" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="810" x="1019" y="1019.5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="54.625" x="1396.6875" y="1036.4659">Domain</text></g><!--MD5=[63e5b7017781b3ad047b9a41bfb8f6f6]
cluster Structure--><g id="cluster_Structure"><rect fill="none" height="1128.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="988" x="7" y="124"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="66.9375" x="467.5313" y="140.9659">Structure</text></g><!--MD5=[8ee15c9c7f74a23967f61be6b3f197f4]
cluster Tree--><g id="cluster_Tree"><rect fill="none" height="726" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="428" x="31" y="170"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="31.75" x="229.125" y="186.9659">Tree</text></g><!--MD5=[38d595aac29b727d429e875f7450ae1c]
cluster Searches--><g id="cluster_Searches"><rect fill="none" height="661.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="751" x="1019" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="64.5" x="1362.25" y="23.9659">Searches</text></g><!--MD5=[44a1b4afaef76c16e6c9ec4990ad0c8d]
class Item--><g id="elem_Item"><rect codeLine="45" fill="#F1F1F1" height="154.4075" id="Item" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="87" x="1529.5" y="767"/><ellipse cx="1555.3" cy="783" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1558.7688,789.5 L1551.4563,789.5 L1551.4563,776.8281 L1558.7688,776.8281 L1558.7688,778.7031 L1553.5031,778.7031 L1553.5031,781.9688 L1558.4563,781.9688 L1558.4563,783.8281 L1553.5031,783.8281 L1553.5031,787.625 L1558.7688,787.625 L1558.7688,789.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="31" x="1571.7" y="788.432">Item</text><line style="stroke:#181818;stroke-width:0.5;" x1="1530.5" x2="1615.5" y1="799" y2="799"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="1535.5" y="817.9659">Lamp = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="1535.5" y="837.0339">Athlete = 1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="1535.5" y="856.1018">Boy = 3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1535.5" y="875.1697">Lord = 6</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1535.5" y="894.2376">Woman = 8</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="1535.5" y="913.3055">Lady = 12</text></g><!--MD5=[818f33120a12cf26bd14afdff251130b]
class RiverBank--><g id="elem_RiverBank"><rect codeLine="54" fill="#F1F1F1" height="78.1358" id="RiverBank" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="1395.5" y="805"/><ellipse cx="1410.5" cy="821" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1413.9688,827.5 L1406.6563,827.5 L1406.6563,814.8281 L1413.9688,814.8281 L1413.9688,816.7031 L1408.7031,816.7031 L1408.7031,819.9688 L1413.6563,819.9688 L1413.6563,821.8281 L1408.7031,821.8281 L1408.7031,825.625 L1413.9688,825.625 L1413.9688,827.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="1424.5" y="826.432">RiverBank</text><line style="stroke:#181818;stroke-width:0.5;" x1="1396.5" x2="1493.5" y1="837" y2="837"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="1401.5" y="855.9659">Initial</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1401.5" y="875.0339">Final</text></g><!--MD5=[651984b30145f63e53adab6e7e9bc4b7]
class Outcome--><g id="elem_Outcome"><rect codeLine="59" fill="#F1F1F1" height="78.1358" id="Outcome" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="1215.5" y="805"/><ellipse cx="1253.9" cy="821" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1258.4625,823.9844 Q1258.4625,825.1563 1257.8844,825.9844 Q1257.3219,826.8125 1256.275,827.25 Q1255.2438,827.6719 1253.8688,827.6719 Q1253.1656,827.6719 1252.525,827.5938 Q1251.9,827.5313 1251.3688,827.4063 Q1250.8375,827.2656 1250.2594,827 L1250.2594,824.9531 Q1251.2438,825.3906 1252.1188,825.6094 Q1252.9938,825.8125 1253.9313,825.8125 Q1254.7906,825.8125 1255.3375,825.6094 Q1255.8844,825.3906 1256.1344,825.0156 Q1256.4,824.6406 1256.4,824.125 Q1256.4,823.6094 1256.1813,823.2656 Q1255.9781,822.9219 1255.3844,822.5938 Q1254.8063,822.2656 1253.7125,821.875 Q1252.9156,821.5625 1252.2906,821.2344 Q1251.6813,820.8906 1251.2594,820.4375 Q1250.8375,819.9688 1250.6188,819.375 Q1250.4156,818.7813 1250.4156,818.0156 Q1250.4156,816.9688 1250.9469,816.2188 Q1251.4938,815.4531 1252.4313,815.0625 Q1253.3688,814.6563 1254.5563,814.6563 Q1255.6031,814.6563 1256.4469,814.8594 Q1257.3063,815.0469 1258.2438,815.4688 L1257.5875,817.2813 Q1256.7125,816.8906 1255.9938,816.7188 Q1255.2906,816.5313 1254.525,816.5313 Q1253.8219,816.5313 1253.3688,816.7344 Q1252.9313,816.9219 1252.7125,817.2656 Q1252.4938,817.5938 1252.4938,818.0313 Q1252.4938,818.5781 1252.7125,818.9219 Q1252.9313,819.2656 1253.4625,819.5781 Q1254.0094,819.875 1254.9781,820.2344 Q1256.0719,820.6406 1256.8375,821.125 Q1257.6188,821.5938 1258.0406,822.2813 Q1258.4625,822.9531 1258.4625,823.9844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="1273.1" y="826.432">Outcome</text><line style="stroke:#181818;stroke-width:0.5;" x1="1216.5" x2="1359.5" y1="837" y2="837"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1221.5" y="855.9659">isTerminal: boolean</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="1221.5" y="875.0339">win: boolean</text></g><!--MD5=[4cf87534c235239d37db4adfd136fff4]
class Rule--><g id="elem_Rule"><rect codeLine="67" fill="#F1F1F1" height="124.2717" id="Rule" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="1101" y="1377.5"/><ellipse cx="1190.75" cy="1393.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1190.8594,1389.0313 Q1189.9375,1389.0313 1189.2031,1389.3438 Q1188.4844,1389.6563 1187.9844,1390.25 Q1187.4844,1390.8281 1187.2031,1391.7031 Q1186.9375,1392.5781 1186.9375,1393.6719 Q1186.9375,1395.1094 1187.375,1396.1563 Q1187.8281,1397.2031 1188.6719,1397.75 Q1189.5313,1398.2969 1190.8438,1398.2969 Q1191.625,1398.2969 1192.3125,1398.1719 Q1193.0156,1398.0313 1194.0156,1397.7188 L1194.0156,1399.5938 Q1193.1563,1399.9219 1192.3906,1400.0469 Q1191.6406,1400.1719 1190.625,1400.1719 Q1188.7031,1400.1719 1187.3906,1399.375 Q1186.0938,1398.5625 1185.4375,1397.0938 Q1184.7813,1395.6094 1184.7813,1393.6406 Q1184.7813,1392.2188 1185.1719,1391.0469 Q1185.5781,1389.8594 1186.3594,1388.9844 Q1187.1406,1388.1094 1188.2813,1387.6406 Q1189.4219,1387.1563 1190.8906,1387.1563 Q1191.8438,1387.1563 1192.7344,1387.3594 Q1193.6406,1387.5469 1194.5781,1388.0156 L1193.75,1389.7969 Q1192.9688,1389.4219 1192.3125,1389.2344 Q1191.6563,1389.0313 1190.8594,1389.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1211.25" y="1398.932">Rule</text><line style="stroke:#181818;stroke-width:0.5;" x1="1102" x2="1318" y1="1409.5" y2="1409.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1109" y="1421.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1121" y="1428.4659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1109" y="1440.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="1121" y="1447.5339">travellingPeople: Item[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1102" x2="1318" y1="1455.6358" y2="1455.6358"/><ellipse cx="1112" cy="1470.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1121" y="1474.6018">getElapsedTime(): number</text><ellipse cx="1112" cy="1489.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="1121" y="1493.6697">transpose(state: State): State</text></g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="74" fill="#F1F1F1" height="181.4754" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="263" x="1526" y="1078"/><ellipse cx="1636.25" cy="1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1636.3594,1089.5313 Q1635.4375,1089.5313 1634.7031,1089.8438 Q1633.9844,1090.1563 1633.4844,1090.75 Q1632.9844,1091.3281 1632.7031,1092.2031 Q1632.4375,1093.0781 1632.4375,1094.1719 Q1632.4375,1095.6094 1632.875,1096.6563 Q1633.3281,1097.7031 1634.1719,1098.25 Q1635.0313,1098.7969 1636.3438,1098.7969 Q1637.125,1098.7969 1637.8125,1098.6719 Q1638.5156,1098.5313 1639.5156,1098.2188 L1639.5156,1100.0938 Q1638.6563,1100.4219 1637.8906,1100.5469 Q1637.1406,1100.6719 1636.125,1100.6719 Q1634.2031,1100.6719 1632.8906,1099.875 Q1631.5938,1099.0625 1630.9375,1097.5938 Q1630.2813,1096.1094 1630.2813,1094.1406 Q1630.2813,1092.7188 1630.6719,1091.5469 Q1631.0781,1090.3594 1631.8594,1089.4844 Q1632.6406,1088.6094 1633.7813,1088.1406 Q1634.9219,1087.6563 1636.3906,1087.6563 Q1637.3438,1087.6563 1638.2344,1087.8594 Q1639.1406,1088.0469 1640.0781,1088.5156 L1639.25,1090.2969 Q1638.4688,1089.9219 1637.8125,1089.7344 Q1637.1563,1089.5313 1636.3594,1089.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="1656.75" y="1099.432">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="1527" x2="1788" y1="1110" y2="1110"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1534" y="1122.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1546" y="1128.9659">initialRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1534" y="1141.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1546" y="1148.0339">finalRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1534" y="1160.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="1546" y="1167.1018">remainingTime: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="1527" x2="1788" y1="1175.2038" y2="1175.2038"/><ellipse cx="1537" cy="1190.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1546" y="1194.1697">getValidRules(): Rule[]</text><ellipse cx="1537" cy="1209.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1546" y="1213.2376">getOutcome(): Outcome</text><ellipse cx="1537" cy="1228.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="1546" y="1232.3055">equalByItems(state: State): boolean</text><ellipse cx="1537" cy="1247.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="1546" y="1251.3734">getLampPosition(): RiverBank</text></g><!--MD5=[08770b5ff02271603200ffd0f930842d]
class Problem--><g id="elem_Problem"><rect codeLine="84" fill="#F1F1F1" height="105.2038" id="Problem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="383" x="1060" y="1116"/><ellipse cx="1219.25" cy="1132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1219.3594,1127.5313 Q1218.4375,1127.5313 1217.7031,1127.8438 Q1216.9844,1128.1563 1216.4844,1128.75 Q1215.9844,1129.3281 1215.7031,1130.2031 Q1215.4375,1131.0781 1215.4375,1132.1719 Q1215.4375,1133.6094 1215.875,1134.6563 Q1216.3281,1135.7031 1217.1719,1136.25 Q1218.0313,1136.7969 1219.3438,1136.7969 Q1220.125,1136.7969 1220.8125,1136.6719 Q1221.5156,1136.5313 1222.5156,1136.2188 L1222.5156,1138.0938 Q1221.6563,1138.4219 1220.8906,1138.5469 Q1220.1406,1138.6719 1219.125,1138.6719 Q1217.2031,1138.6719 1215.8906,1137.875 Q1214.5938,1137.0625 1213.9375,1135.5938 Q1213.2813,1134.1094 1213.2813,1132.1406 Q1213.2813,1130.7188 1213.6719,1129.5469 Q1214.0781,1128.3594 1214.8594,1127.4844 Q1215.6406,1126.6094 1216.7813,1126.1406 Q1217.9219,1125.6563 1219.3906,1125.6563 Q1220.3438,1125.6563 1221.2344,1125.8594 Q1222.1406,1126.0469 1223.0781,1126.5156 L1222.25,1128.2969 Q1221.4688,1127.9219 1220.8125,1127.7344 Q1220.1563,1127.5313 1219.3594,1127.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1239.75" y="1137.432">Problem</text><line style="stroke:#181818;stroke-width:0.5;" x1="1061" x2="1442" y1="1148" y2="1148"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1068" y="1160.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="82" x="1080" y="1166.9659">rules: Rule[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1061" x2="1442" y1="1175.0679" y2="1175.0679"/><ellipse cx="1071" cy="1190.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="357" x="1080" y="1194.0339">getRule(firstPerson: Item, secondPerson?: Item): Rule</text><ellipse cx="1071" cy="1209.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="211" x="1080" y="1213.1018">isSolution(state: State): boolean</text></g><!--MD5=[b6822c04d2a4e38de2312ac23c188825]
class BasicEdge--><g id="elem_BasicEdge"><rect codeLine="90" fill="#F1F1F1" height="97.2038" id="BasicEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="635" y="1120"/><ellipse cx="692.75" cy="1136" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M696.0938,1141.25 L694.625,1137.5 L690.1875,1137.5 L688.75,1141.25 L686.625,1141.25 L691.5781,1128.5313 L693.3281,1128.5313 L698.25,1141.25 L696.0938,1141.25 Z M692.75,1132.2969 Q692.7031,1132.1406 692.5781,1131.7813 Q692.4531,1131.4219 692.3438,1131.0469 Q692.2344,1130.6563 692.4375,1130.5938 Q692.5938,1130.7813 692.5,1131.1406 Q692.4063,1131.4844 692.3125,1131.7813 Q692.2188,1132.0625 692.1406,1132.2969 L690.9063,1135.6094 L693.9844,1135.6094 L692.75,1132.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="62" x="713.25" y="1141.432">BasicEdge</text><line style="stroke:#181818;stroke-width:0.5;" x1="636" x2="820" y1="1152" y2="1152"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="643" y="1164.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="655" y="1170.9659">sourceNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="643" y="1183.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="655" y="1190.0339">targetNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="643" y="1202.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="655" y="1209.1018">rule: Rule</text></g><!--MD5=[991089839fde95c2276dcf2721646821]
class BasicNode--><g id="elem_BasicNode"><rect codeLine="96" fill="#F1F1F1" height="181.4754" id="BasicNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="455" x="500" y="754"/><ellipse cx="690.75" cy="770" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M694.0938,775.25 L692.625,771.5 L688.1875,771.5 L686.75,775.25 L684.625,775.25 L689.5781,762.5313 L691.3281,762.5313 L696.25,775.25 L694.0938,775.25 Z M690.75,766.2969 Q690.7031,766.1406 690.5781,765.7813 Q690.4531,765.4219 690.3438,765.0469 Q690.2344,764.6563 690.4375,764.5938 Q690.5938,764.7813 690.5,765.1406 Q690.4063,765.4844 690.3125,765.7813 Q690.2188,766.0625 690.1406,766.2969 L688.9063,769.6094 L691.9844,769.6094 L690.75,766.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="65" x="711.25" y="775.432">BasicNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="501" x2="954" y1="786" y2="786"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="508" y="798.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="520" y="804.9659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="508" y="817.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="520" y="824.0339">state: State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="508" y="836.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="520" y="843.1018">targetEdges: BasicEdge[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="501" x2="954" y1="851.2038" y2="851.2038"/><polygon fill="#FFFF44" points="511,861.2377,515,865.2377,511,869.2377,507,865.2377" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="429" x="520" y="870.1697">addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="508" y="882.3056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="418" x="520" y="889.2376">addTargetEdge(targetNode: BasicNode, rule: Rule): BasicEdge</text><ellipse cx="511" cy="904.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="520" y="908.3055">addEdge(targetNode: BasicNode, rule: Rule): BasicEdge</text><ellipse cx="511" cy="923.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="258" x="520" y="927.3734">checkIfThereIsLoop(state: State): boolean</text></g><!--MD5=[2a3c70e0e60fdc5bec87fc3bba3491c5]
class BasicStructure--><g id="elem_BasicStructure"><rect codeLine="106" fill="#F1F1F1" height="143.3396" id="BasicStructure" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="357" x="476.5" y="489.5"/><ellipse cx="605.75" cy="505.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M609.0938,510.75 L607.625,507 L603.1875,507 L601.75,510.75 L599.625,510.75 L604.5781,498.0313 L606.3281,498.0313 L611.25,510.75 L609.0938,510.75 Z M605.75,501.7969 Q605.7031,501.6406 605.5781,501.2813 Q605.4531,500.9219 605.3438,500.5469 Q605.2344,500.1563 605.4375,500.0938 Q605.5938,500.2813 605.5,500.6406 Q605.4063,500.9844 605.3125,501.2813 Q605.2188,501.5625 605.1406,501.7969 L603.9063,505.1094 L606.9844,505.1094 L605.75,501.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="90" x="626.25" y="510.932">BasicStructure</text><line style="stroke:#181818;stroke-width:0.5;" x1="477.5" x2="832.5" y1="521.5" y2="521.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="484.5" y="533.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="496.5" y="540.4659">nextNodeId: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="477.5" x2="832.5" y1="548.5679" y2="548.5679"/><polygon fill="#FFFF44" points="487.5,558.6019,491.5,562.6019,487.5,566.6019,483.5,562.6019" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="330" x="496.5" y="567.5339">instantiateNode(id: number, state: State): BasicNode</text><polygon fill="#FFFF44" points="487.5,577.6698,491.5,581.6698,487.5,585.6698,483.5,581.6698" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="496.5" y="586.6018">createNode(state: State): BasicNode</text><ellipse cx="487.5" cy="601.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="331" x="496.5" y="605.6697">createValidTransitions(node: BasicNode): BasicEdge[]</text><ellipse cx="487.5" cy="620.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="496.5" y="624.7376">exportToDot(): string</text></g><!--MD5=[0fe71ee5d44d03bcbd1815cd1a526ec5]
class TreeEdge--><g id="elem_TreeEdge"><rect codeLine="114" fill="#F1F1F1" height="32" id="TreeEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="305" y="828"/><ellipse cx="320" cy="844" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M320.1094,839.5313 Q319.1875,839.5313 318.4531,839.8438 Q317.7344,840.1563 317.2344,840.75 Q316.7344,841.3281 316.4531,842.2031 Q316.1875,843.0781 316.1875,844.1719 Q316.1875,845.6094 316.625,846.6563 Q317.0781,847.7031 317.9219,848.25 Q318.7813,848.7969 320.0938,848.7969 Q320.875,848.7969 321.5625,848.6719 Q322.2656,848.5313 323.2656,848.2188 L323.2656,850.0938 Q322.4063,850.4219 321.6406,850.5469 Q320.8906,850.6719 319.875,850.6719 Q317.9531,850.6719 316.6406,849.875 Q315.3438,849.0625 314.6875,847.5938 Q314.0313,846.1094 314.0313,844.1406 Q314.0313,842.7188 314.4219,841.5469 Q314.8281,840.3594 315.6094,839.4844 Q316.3906,838.6094 317.5313,838.1406 Q318.6719,837.6563 320.1406,837.6563 Q321.0938,837.6563 321.9844,837.8594 Q322.8906,838.0469 323.8281,838.5156 L323,840.2969 Q322.2188,839.9219 321.5625,839.7344 Q320.9063,839.5313 320.1094,839.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="334" y="849.432">TreeEdge</text></g><!--MD5=[8c9078384c8216faeee668eb33da04e9]
class TreeNode--><g id="elem_TreeNode"><rect codeLine="116" fill="#F1F1F1" height="59.0679" id="TreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="199" y="532"/><ellipse cx="271.25" cy="548" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M271.3594,543.5313 Q270.4375,543.5313 269.7031,543.8438 Q268.9844,544.1563 268.4844,544.75 Q267.9844,545.3281 267.7031,546.2031 Q267.4375,547.0781 267.4375,548.1719 Q267.4375,549.6094 267.875,550.6563 Q268.3281,551.7031 269.1719,552.25 Q270.0313,552.7969 271.3438,552.7969 Q272.125,552.7969 272.8125,552.6719 Q273.5156,552.5313 274.5156,552.2188 L274.5156,554.0938 Q273.6563,554.4219 272.8906,554.5469 Q272.1406,554.6719 271.125,554.6719 Q269.2031,554.6719 267.8906,553.875 Q266.5938,553.0625 265.9375,551.5938 Q265.2813,550.1094 265.2813,548.1406 Q265.2813,546.7188 265.6719,545.5469 Q266.0781,544.3594 266.8594,543.4844 Q267.6406,542.6094 268.7813,542.1406 Q269.9219,541.6563 271.3906,541.6563 Q272.3438,541.6563 273.2344,541.8594 Q274.1406,542.0469 275.0781,542.5156 L274.25,544.2969 Q273.4688,543.9219 272.8125,543.7344 Q272.1563,543.5313 271.3594,543.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="291.75" y="553.432">TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="200" x2="417" y1="564" y2="564"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="576.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="219" y="582.9659">sourceEdge: TreeEdge | null</text></g><!--MD5=[bb7f1c801adcc1c297b2d9190618259c]
class Tree--><g id="elem_Tree"><rect codeLine="120" fill="#F1F1F1" height="124.2717" id="Tree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="72" y="228"/><ellipse cx="226.25" cy="244" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M226.3594,239.5313 Q225.4375,239.5313 224.7031,239.8438 Q223.9844,240.1563 223.4844,240.75 Q222.9844,241.3281 222.7031,242.2031 Q222.4375,243.0781 222.4375,244.1719 Q222.4375,245.6094 222.875,246.6563 Q223.3281,247.7031 224.1719,248.25 Q225.0313,248.7969 226.3438,248.7969 Q227.125,248.7969 227.8125,248.6719 Q228.5156,248.5313 229.5156,248.2188 L229.5156,250.0938 Q228.6563,250.4219 227.8906,250.5469 Q227.1406,250.6719 226.125,250.6719 Q224.2031,250.6719 222.8906,249.875 Q221.5938,249.0625 220.9375,247.5938 Q220.2813,246.1094 220.2813,244.1406 Q220.2813,242.7188 220.6719,241.5469 Q221.0781,240.3594 221.8594,239.4844 Q222.6406,238.6094 223.7813,238.1406 Q224.9219,237.6563 226.3906,237.6563 Q227.3438,237.6563 228.2344,237.8594 Q229.1406,238.0469 230.0781,238.5156 L229.25,240.2969 Q228.4688,239.9219 227.8125,239.7344 Q227.1563,239.5313 226.3594,239.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="246.75" y="249.432">Tree</text><line style="stroke:#181818;stroke-width:0.5;" x1="73" x2="418" y1="260" y2="260"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="80" y="272.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="92" y="278.9659">rootNode: TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="73" x2="418" y1="287.0679" y2="287.0679"/><ellipse cx="83" cy="311.6358" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="92" y="306.0339">createNextValidTransition(node: TreeNode,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="92" y="325.1018">sortingFunction: Function): TreeEdge | null</text><ellipse cx="83" cy="340.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="321" x="92" y="344.1697">getAscendingPath(node: TreeNode): TreeEdge[]</text></g><!--MD5=[d5a630d213adc2e3986060bd811a90b1]
class Search--><g id="elem_Search"><rect codeLine="126" fill="#F1F1F1" height="143.3396" id="Search" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="300" x="1059" y="490"/><ellipse cx="1183.75" cy="506" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1187.0938,511.25 L1185.625,507.5 L1181.1875,507.5 L1179.75,511.25 L1177.625,511.25 L1182.5781,498.5313 L1184.3281,498.5313 L1189.25,511.25 L1187.0938,511.25 Z M1183.75,502.2969 Q1183.7031,502.1406 1183.5781,501.7813 Q1183.4531,501.4219 1183.3438,501.0469 Q1183.2344,500.6563 1183.4375,500.5938 Q1183.5938,500.7813 1183.5,501.1406 Q1183.4063,501.4844 1183.3125,501.7813 Q1183.2188,502.0625 1183.1406,502.2969 L1181.9063,505.6094 L1184.9844,505.6094 L1183.75,502.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="42" x="1204.25" y="511.432">Search</text><line style="stroke:#181818;stroke-width:0.5;" x1="1060" x2="1358" y1="522" y2="522"/><polygon fill="none" points="1070,532.034,1074,536.034,1070,540.034,1066,536.034" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1079" y="540.9659">tree: Tree</text><line style="stroke:#181818;stroke-width:0.5;" x1="1060" x2="1358" y1="549.0679" y2="549.0679"/><ellipse cx="1070" cy="564.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1079" y="568.0339">getTree(): Tree</text><ellipse cx="1070" cy="583.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="1079" y="587.1018">getAlgorithmName(): string</text><ellipse cx="1070" cy="602.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="214" x="1079" y="606.1697">getSafeAlgorithmName(): string</text><ellipse cx="1070" cy="621.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="274" x="1079" y="625.2376">search(maxIterations?: number): TreeEdge[]</text></g><!--MD5=[5b8b6bf56c9d6f585d75e45702f9f2fa]
class ListsSearch--><g id="elem_ListsSearch"><rect codeLine="139" fill="#F1F1F1" height="200.5433" id="ListsSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="362" x="1392" y="189.5"/><ellipse cx="1533.75" cy="205.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1537.0938,210.75 L1535.625,207 L1531.1875,207 L1529.75,210.75 L1527.625,210.75 L1532.5781,198.0313 L1534.3281,198.0313 L1539.25,210.75 L1537.0938,210.75 Z M1533.75,201.7969 Q1533.7031,201.6406 1533.5781,201.2813 Q1533.4531,200.9219 1533.3438,200.5469 Q1533.2344,200.1563 1533.4375,200.0938 Q1533.5938,200.2813 1533.5,200.6406 Q1533.4063,200.9844 1533.3125,201.2813 Q1533.2188,201.5625 1533.1406,201.7969 L1531.9063,205.1094 L1534.9844,205.1094 L1533.75,201.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="70" x="1554.25" y="210.932">ListsSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="1393" x2="1753" y1="221.5" y2="221.5"/><polygon fill="none" points="1403,231.534,1407,235.534,1403,239.534,1399,235.534" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1412" y="240.4659">currentNode: TreeNode</text><polygon fill="none" points="1403,250.6019,1407,254.6019,1403,258.6019,1399,254.6019" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="1412" y="259.5339">openNodes: TreeNode[]</text><polygon fill="none" points="1403,269.6698,1407,273.6698,1403,277.6698,1399,273.6698" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="1412" y="278.6018">closedNodes: TreeNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1400" y="290.7377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="1412" y="297.6697">sortingFunction: (TreeEdge, TreeEdge) =&gt; number</text><line style="stroke:#181818;stroke-width:0.5;" x1="1393" x2="1753" y1="305.7717" y2="305.7717"/><ellipse cx="1403" cy="320.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="177" x="1412" y="324.7376">getCurrentNode(): TreeNode</text><ellipse cx="1403" cy="339.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="1412" y="343.8055">getOpenNodes(): TreeNode[]</text><ellipse cx="1403" cy="358.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1412" y="362.8734">getClosedNodes(): TreeNode[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1400" y="375.0094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="1412" y="381.9414">doIteration(): TreeEdge[] | null</text></g><!--MD5=[1acc1444ea17b597d4326a1f92e0414e]
class BreadthFirstSearch--><g id="elem_BreadthFirstSearch"><rect codeLine="37" fill="#F1F1F1" height="32" id="BreadthFirstSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="1542.5" y="45"/><ellipse cx="1557.5" cy="61" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1557.6094,56.5313 Q1556.6875,56.5313 1555.9531,56.8438 Q1555.2344,57.1563 1554.7344,57.75 Q1554.2344,58.3281 1553.9531,59.2031 Q1553.6875,60.0781 1553.6875,61.1719 Q1553.6875,62.6094 1554.125,63.6563 Q1554.5781,64.7031 1555.4219,65.25 Q1556.2813,65.7969 1557.5938,65.7969 Q1558.375,65.7969 1559.0625,65.6719 Q1559.7656,65.5313 1560.7656,65.2188 L1560.7656,67.0938 Q1559.9063,67.4219 1559.1406,67.5469 Q1558.3906,67.6719 1557.375,67.6719 Q1555.4531,67.6719 1554.1406,66.875 Q1552.8438,66.0625 1552.1875,64.5938 Q1551.5313,63.1094 1551.5313,61.1406 Q1551.5313,59.7188 1551.9219,58.5469 Q1552.3281,57.3594 1553.1094,56.4844 Q1553.8906,55.6094 1555.0313,55.1406 Q1556.1719,54.6563 1557.6406,54.6563 Q1558.5938,54.6563 1559.4844,54.8594 Q1560.3906,55.0469 1561.3281,55.5156 L1560.5,57.2969 Q1559.7188,56.9219 1559.0625,56.7344 Q1558.4063,56.5313 1557.6094,56.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1571.5" y="66.432">BreadthFirstSearch</text></g><!--MD5=[bee246b072b458deb57e2ff44b612b66]
class DepthFirstSearch--><g id="elem_DepthFirstSearch"><rect codeLine="38" fill="#F1F1F1" height="32" id="DepthFirstSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="1359" y="45"/><ellipse cx="1374" cy="61" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1374.1094,56.5313 Q1373.1875,56.5313 1372.4531,56.8438 Q1371.7344,57.1563 1371.2344,57.75 Q1370.7344,58.3281 1370.4531,59.2031 Q1370.1875,60.0781 1370.1875,61.1719 Q1370.1875,62.6094 1370.625,63.6563 Q1371.0781,64.7031 1371.9219,65.25 Q1372.7813,65.7969 1374.0938,65.7969 Q1374.875,65.7969 1375.5625,65.6719 Q1376.2656,65.5313 1377.2656,65.2188 L1377.2656,67.0938 Q1376.4063,67.4219 1375.6406,67.5469 Q1374.8906,67.6719 1373.875,67.6719 Q1371.9531,67.6719 1370.6406,66.875 Q1369.3438,66.0625 1368.6875,64.5938 Q1368.0313,63.1094 1368.0313,61.1406 Q1368.0313,59.7188 1368.4219,58.5469 Q1368.8281,57.3594 1369.6094,56.4844 Q1370.3906,55.6094 1371.5313,55.1406 Q1372.6719,54.6563 1374.1406,54.6563 Q1375.0938,54.6563 1375.9844,54.8594 Q1376.8906,55.0469 1377.8281,55.5156 L1377,57.2969 Q1376.2188,56.9219 1375.5625,56.7344 Q1374.9063,56.5313 1374.1094,56.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1388" y="66.432">DepthFirstSearch</text></g><!--MD5=[f660be4ffa4bd991089c932c465ec971]
class BacktrackingSearch--><g id="elem_BacktrackingSearch"><rect codeLine="134" fill="#F1F1F1" height="105.2038" id="BacktrackingSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="322" x="1035" y="237.5"/><ellipse cx="1125.75" cy="253.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1125.8594,249.0313 Q1124.9375,249.0313 1124.2031,249.3438 Q1123.4844,249.6563 1122.9844,250.25 Q1122.4844,250.8281 1122.2031,251.7031 Q1121.9375,252.5781 1121.9375,253.6719 Q1121.9375,255.1094 1122.375,256.1563 Q1122.8281,257.2031 1123.6719,257.75 Q1124.5313,258.2969 1125.8438,258.2969 Q1126.625,258.2969 1127.3125,258.1719 Q1128.0156,258.0313 1129.0156,257.7188 L1129.0156,259.5938 Q1128.1563,259.9219 1127.3906,260.0469 Q1126.6406,260.1719 1125.625,260.1719 Q1123.7031,260.1719 1122.3906,259.375 Q1121.0938,258.5625 1120.4375,257.0938 Q1119.7813,255.6094 1119.7813,253.6406 Q1119.7813,252.2188 1120.1719,251.0469 Q1120.5781,249.8594 1121.3594,248.9844 Q1122.1406,248.1094 1123.2813,247.6406 Q1124.4219,247.1563 1125.8906,247.1563 Q1126.8438,247.1563 1127.7344,247.3594 Q1128.6406,247.5469 1129.5781,248.0156 L1128.75,249.7969 Q1127.9688,249.4219 1127.3125,249.2344 Q1126.6563,249.0313 1125.8594,249.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="1146.25" y="258.932">BacktrackingSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="1036" x2="1356" y1="269.5" y2="269.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1043" y="281.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="1055" y="288.4659">sortingFunction: (Rule, Rule) =&gt; number</text><line style="stroke:#181818;stroke-width:0.5;" x1="1036" x2="1356" y1="296.5679" y2="296.5679"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1043" y="318.1358"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="1055" y="315.5339">doBacktracking(startNode: TreeNode):</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="1055" y="334.6018">{foundNode: TreeNode, isSolution: boolean}</text></g><!--MD5=[68cbb797e13e28fad43505a075e340b3]
link Rule to BasicEdge--><g id="link_Rule_BasicEdge"><path codeLine="153" d="M1101.33,1377.96 C1015.68,1330.25 897.71,1264.54 817.46,1219.84 " fill="none" id="Rule-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="813.56,1217.66,819.4652,1225.5422,817.9247,1220.0991,823.3678,1218.5586,813.56,1217.66" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="998" y="1323.397">Represents</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1086.0925" y="1369.7294">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="829.0166" y="1234.4047">0..n</text></g><!--MD5=[e894ca0edc3cfe44a3321e9c02df0dfb]
reverse link Problem to Rule--><g id="link_Problem_Rule"><path codeLine="154" d="M1241.84,1234.98 C1235.05,1278.36 1226.19,1335.02 1219.54,1377.54 " fill="none" id="Problem-backto-Rule" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1243.82,1222.31,1238.9386,1227.6177,1241.9606,1234.1651,1246.842,1228.8573,1243.82,1222.31" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1230.6169" y="1243.6088">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1198.423" y="1365.8762">1..n</text></g><!--MD5=[35d72b0e928a4d3243c81e99bec60f94]
link BasicNode to BasicEdge--><g id="link_BasicNode_BasicEdge"><path codeLine="155" d="M728,934.84 C728,992.21 728,1064.98 728,1113.84 " fill="none" id="BasicNode-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="728,1118.75,732,1109.75,728,1113.75,724,1109.75,728,1118.75" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="729" y="999.397">Has Target</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="720.0438" y="957.8603">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="705.3266" y="1108.1657">0..n</text></g><!--MD5=[d037933e2bb3cbb487cc804950073d26]
link BasicNode to State--><g id="link_BasicNode_State"><path codeLine="156" d="M954.99,899.69 C1032.31,917.61 1119.32,937.36 1199,954.5 C1325.29,981.67 1368.54,953.58 1484,1011.5 C1515.58,1027.34 1545.79,1050.48 1571.91,1074.13 " fill="none" id="BasicNode-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1575.28,1077.22,1571.358,1068.1857,1571.5978,1073.8375,1565.946,1074.0773,1575.28,1077.22" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="1464" y="999.397">Has State</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="963.0393" y="899.7317">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1561.6009" y="1066.0432">1</text></g><!--MD5=[6129d246fa550a7af153a7c61078b1cf]
link TreeNode to TreeEdge--><g id="link_TreeNode_TreeEdge"><path codeLine="157" d="M295.92,590.86 C284.28,619.31 270.46,664.68 280,703.5 C291.27,749.35 320.56,796.83 338.43,822.87 " fill="none" id="TreeNode-to-TreeEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="341.19,826.85,339.3419,817.1761,338.338,822.7432,332.771,821.7393,341.19,826.85" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="66" x="281" y="699.397">Has source</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="270.026" y="612.6424">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="20" x="314.3384" y="816.116">0..1</text></g><!--MD5=[e6dbb7050ae1c78776710c057e065841]
link Tree to TreeNode--><g id="link_Tree_TreeNode"><path codeLine="158" d="M231.48,351.92 C227.42,379.15 226.02,411.38 234,439.5 C243.19,471.87 263.72,504.07 280.98,527.18 " fill="none" id="Tree-to-TreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="283.92,531.06,281.6816,521.4689,280.904,527.072,275.3009,526.2945,283.92,531.06" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="235" y="435.397">Has root</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="216.377" y="373.6242">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="271.2073" y="520.0357">1</text></g><!--MD5=[8aff1c984766060b6a0542611b773bd2]
reverse link Tree to Search--><g id="link_Tree_Search"><path codeLine="159" d="M425.32,324.79 C578.57,355.78 803.92,406.39 995,469.5 C1016.01,476.44 1037.82,484.59 1059.12,493.13 " fill="none" id="Tree-backto-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="420.48,323.81,428.5176,329.5019,425.3824,324.7933,430.0909,321.6581,420.48,323.81" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="50" x="896" y="435.397">Has tree</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="427.1297" y="322.6538">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1044.2113" y="486.0729">1</text></g><!--MD5=[6417cd8e40404b725648120d051d6d1e]
link TreeEdge to BasicEdge--><g id="link_TreeEdge_BasicEdge"><path codeLine="160" d="M360.96,859.64 C373.49,881.82 399.42,924.52 429,954.5 C488.3,1014.6 566.22,1069.63 627.65,1108.76 " fill="none" id="TreeEdge-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="631.24,1102.76,644.45,1119.33,623.79,1114.61,631.24,1102.76" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[da37ca0a4895273684b24df6daa84c4b]
link TreeNode to BasicNode--><g id="link_TreeNode_BasicNode"><path codeLine="161" d="M339.73,590.82 C366.79,614.74 407.75,649.54 446,676.5 C478.4,699.34 514.04,722.14 548.75,743.24 " fill="none" id="TreeNode-to-BasicNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="551.98,737.01,565.5,753.33,544.75,749,551.98,737.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1e419efe75438c0f51d1d77eb23720a7]
link Tree to BasicStructure--><g id="link_Tree_BasicStructure"><path codeLine="162" d="M338.55,351.87 C394.96,388.97 467.79,436.87 529.36,477.37 " fill="none" id="Tree-to-BasicStructure" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="533.11,471.45,545.97,488.29,525.42,483.15,533.11,471.45" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7e61d39f42d80ed4dc249cdbccf58ef8]
link ListsSearch to Search--><g id="link_ListsSearch_Search"><path codeLine="163" d="M1438.24,390.96 C1399.88,419.41 1358.51,450.1 1321.62,477.46 " fill="none" id="ListsSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1325.91,483,1305.68,489.29,1317.57,471.75,1325.91,483" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2cddfae00cfe97b27de237baec21b5ea]
link BacktrackingSearch to Search--><g id="link_BacktrackingSearch_Search"><path codeLine="164" d="M1198.49,342.74 C1200.21,378.34 1202.53,426.61 1204.56,468.7 " fill="none" id="BacktrackingSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1211.54,468.23,1205.51,488.54,1197.56,468.9,1211.54,468.23" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[44f6dc7f6ed1e166d02cb0473078bfbd]
link BreadthFirstSearch to ListsSearch--><g id="link_BreadthFirstSearch_ListsSearch"><path codeLine="165" d="M1619.64,77.25 C1615.37,96.66 1607.57,132.06 1599.56,168.44 " fill="none" id="BreadthFirstSearch-to-ListsSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1606.44,169.74,1595.3,187.77,1592.76,166.73,1606.44,169.74" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2d1f68a31b1497cafd76ef1463ce723f]
link DepthFirstSearch to ListsSearch--><g id="link_DepthFirstSearch_ListsSearch"><path codeLine="166" d="M1442.4,77.25 C1454.65,97.11 1477.23,133.72 1500.21,170.98 " fill="none" id="DepthFirstSearch-to-ListsSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1506.14,167.26,1510.68,187.96,1494.23,174.61,1506.14,167.26" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ff425a338953511d10fa525b4922dde8]
link RiverBank to Item--><!--MD5=[bcbec08e18fdbcb78e78c15a6692f133]
link Outcome to RiverBank--><!--MD5=[508da6fd99730661eeb051931763b16e]
link ListsSearch to Item--><!--MD5=[fe4cf2a335d39a81e13a5d6a44a7fb29]
@startuml

    ' Config
    hide empty members
    ' skinparam classAttributeIconSize 0
    ' left to right direction


    ' Pacotes

    package Definitions <<Rectangle>> {
        enum Item
        enum RiverBank
        struct Outcome
    }

    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree
        }
    }

    package Searches <<Rectangle>> {
        abstract class Search
        abstract class ListsSearch
        class BreadthFirstSearch
        class DepthFirstSearch
        class BacktrackingSearch
    }


    ' Definições

    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }


    ' Classes

    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        -addTargetEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +{abstract}checkIfThereIsLoop(state: State): boolean
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode): BasicEdge[]
        +{abstract}exportToDot(): string
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
    }

    class Tree {
        -rootNode: TreeNode
        +createNextValidTransition(node: TreeNode, \nsortingFunction: Function): TreeEdge | null
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }

    abstract class Search {
        #tree: Tree
        +getTree(): Tree
        +{static}getAlgorithmName(): string
        +{static}getSafeAlgorithmName(): string
        +{abstract}search(maxIterations?: number): TreeEdge[]
    }

    class BacktrackingSearch {
        {field}-sortingFunction: (Rule, Rule) => number
        -doBacktracking(startNode: TreeNode): \n{foundNode: TreeNode, isSolution: boolean}
    }

    abstract class ListsSearch {
        #currentNode: TreeNode
        #openNodes: TreeNode[]
        #closedNodes: TreeNode[]
        {field}-sortingFunction: (TreeEdge, TreeEdge) => number
        {abstract}+getCurrentNode(): TreeNode
        +getOpenNodes(): TreeNode[]
        +getClosedNodes(): TreeNode[]
        -doIteration(): TreeEdge[] | null
    }


    ' Relacionamentos

    Rule "1" - -> "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule
    BasicNode "1" - -> "0..n" BasicEdge : Has Target
    BasicNode "1" - -> "1" State : Has State
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    Tree "1" <- - "1" Search : Has tree
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure
    ListsSearch - -|> Search
    BacktrackingSearch - -|> Search
    BreadthFirstSearch - -|> ListsSearch
    DepthFirstSearch - -|> ListsSearch

    Item -[hidden]left- RiverBank
    RiverBank -[hidden]left- Outcome
    ListsSearch - -[hidden]down-> Item


@enduml

@startuml

    hide empty members



    package Definitions <<Rectangle>> {
        enum Item
        enum RiverBank
        struct Outcome
    }

    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree
        }
    }

    package Searches <<Rectangle>> {
        abstract class Search
        abstract class ListsSearch
        class BreadthFirstSearch
        class DepthFirstSearch
        class BacktrackingSearch
    }



    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }



    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        -addTargetEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +{abstract}checkIfThereIsLoop(state: State): boolean
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode): BasicEdge[]
        +{abstract}exportToDot(): string
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
    }

    class Tree {
        -rootNode: TreeNode
        +createNextValidTransition(node: TreeNode, \nsortingFunction: Function): TreeEdge | null
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }

    abstract class Search {
        #tree: Tree
        +getTree(): Tree
        +{static}getAlgorithmName(): string
        +{static}getSafeAlgorithmName(): string
        +{abstract}search(maxIterations?: number): TreeEdge[]
    }

    class BacktrackingSearch {
        {field}-sortingFunction: (Rule, Rule) => number
        -doBacktracking(startNode: TreeNode): \n{foundNode: TreeNode, isSolution: boolean}
    }

    abstract class ListsSearch {
        #currentNode: TreeNode
        #openNodes: TreeNode[]
        #closedNodes: TreeNode[]
        {field}-sortingFunction: (TreeEdge, TreeEdge) => number
        {abstract}+getCurrentNode(): TreeNode
        +getOpenNodes(): TreeNode[]
        +getClosedNodes(): TreeNode[]
        -doIteration(): TreeEdge[] | null
    }



    Rule "1" - -> "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule
    BasicNode "1" - -> "0..n" BasicEdge : Has Target
    BasicNode "1" - -> "1" State : Has State
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    Tree "1" <- - "1" Search : Has tree
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure
    ListsSearch - -|> Search
    BacktrackingSearch - -|> Search
    BreadthFirstSearch - -|> ListsSearch
    DepthFirstSearch - -|> ListsSearch

    Item -[hidden]left- RiverBank
    RiverBank -[hidden]left- Outcome
    ListsSearch - -[hidden]down-> Item


@enduml

PlantUML version 1.2022.7(Mon Aug 22 14:01:30 BRT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>