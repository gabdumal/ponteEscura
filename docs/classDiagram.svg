<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1898px" preserveAspectRatio="none" style="width:2856px;height:1898px;background:#FFFFFF;" version="1.1" viewBox="0 0 2856 1898" width="2856px" zoomAndPan="magnify"><defs/><g><!--MD5=[4add89f23865d9608ef05f08bfd846b0]
cluster Definitions--><g id="cluster_Definitions"><rect fill="none" height="208" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="434" x="2165" y="1074"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="77.8125" x="2343.0938" y="1090.9659">Definitions</text></g><!--MD5=[121a8bf1197281ab89ed693fab589f94]
cluster Domain--><g id="cluster_Domain"><rect fill="none" height="518" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="810" x="1700" y="1374"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="54.625" x="2077.6875" y="1390.9659">Domain</text></g><!--MD5=[63e5b7017781b3ad047b9a41bfb8f6f6]
cluster Structure--><g id="cluster_Structure"><rect fill="none" height="1600" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1669" x="7" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="66.9375" x="808.0313" y="23.9659">Structure</text></g><!--MD5=[62b64a30049332948fe41c7fb8cab065]
cluster PK_Tree--><g id="cluster_PK_Tree"><rect fill="none" height="1188" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="997" x="31" y="53"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="31.75" x="513.625" y="69.9659">Tree</text></g><!--MD5=[e8b13cba2af981d58aa2577b369716a5]
cluster PK_WeightedTree--><g id="cluster_PK_WeightedTree"><rect fill="none" height="852.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="411" x="55" y="99"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="100.25" x="210.375" y="115.9659">WeightedTree</text></g><!--MD5=[38d595aac29b727d429e875f7450ae1c]
cluster Searches--><g id="cluster_Searches"><rect fill="none" height="788" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1150" x="1700" y="216"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="64.5" x="2242.75" y="232.9659">Searches</text></g><!--MD5=[4120e9011ff0a271f45df1819781d506]
cluster PK_UninformedSearch--><g id="cluster_PK_UninformedSearch"><rect fill="none" height="497" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="734" x="2092" y="262"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="134" x="2392" y="278.9659">UninformedSearch</text></g><!--MD5=[651cc0966bbb65108ffda3ced9df7240]
cluster PK_InformedSearch--><g id="cluster_PK_InformedSearch"><rect fill="none" height="338" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="344" x="1724" y="298.5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="115.125" x="1838.4375" y="315.4659">InformedSearch</text></g><!--MD5=[44a1b4afaef76c16e6c9ec4990ad0c8d]
class Item--><g id="elem_Item"><rect codeLine="65" fill="#F1F1F1" height="154.4075" id="Item" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="87" x="2495.5" y="1112"/><ellipse cx="2521.3" cy="1128" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2524.7688,1134.5 L2517.4563,1134.5 L2517.4563,1121.8281 L2524.7688,1121.8281 L2524.7688,1123.7031 L2519.5031,1123.7031 L2519.5031,1126.9688 L2524.4563,1126.9688 L2524.4563,1128.8281 L2519.5031,1128.8281 L2519.5031,1132.625 L2524.7688,1132.625 L2524.7688,1134.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="31" x="2537.7" y="1133.432">Item</text><line style="stroke:#181818;stroke-width:0.5;" x1="2496.5" x2="2581.5" y1="1144" y2="1144"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="2501.5" y="1162.9659">Lamp = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="2501.5" y="1182.0339">Athlete = 1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="2501.5" y="1201.1018">Boy = 3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="2501.5" y="1220.1697">Lord = 6</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="2501.5" y="1239.2376">Woman = 8</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="2501.5" y="1258.3055">Lady = 12</text></g><!--MD5=[818f33120a12cf26bd14afdff251130b]
class RiverBank--><g id="elem_RiverBank"><rect codeLine="74" fill="#F1F1F1" height="78.1358" id="RiverBank" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="2361.5" y="1150"/><ellipse cx="2376.5" cy="1166" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2379.9688,1172.5 L2372.6563,1172.5 L2372.6563,1159.8281 L2379.9688,1159.8281 L2379.9688,1161.7031 L2374.7031,1161.7031 L2374.7031,1164.9688 L2379.6563,1164.9688 L2379.6563,1166.8281 L2374.7031,1166.8281 L2374.7031,1170.625 L2379.9688,1170.625 L2379.9688,1172.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="2390.5" y="1171.432">RiverBank</text><line style="stroke:#181818;stroke-width:0.5;" x1="2362.5" x2="2459.5" y1="1182" y2="1182"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="2367.5" y="1200.9659">Initial</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="2367.5" y="1220.0339">Final</text></g><!--MD5=[651984b30145f63e53adab6e7e9bc4b7]
class Outcome--><g id="elem_Outcome"><rect codeLine="79" fill="#F1F1F1" height="78.1358" id="Outcome" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="2181.5" y="1150"/><ellipse cx="2219.9" cy="1166" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2224.4625,1168.9844 Q2224.4625,1170.1563 2223.8844,1170.9844 Q2223.3219,1171.8125 2222.275,1172.25 Q2221.2438,1172.6719 2219.8688,1172.6719 Q2219.1656,1172.6719 2218.525,1172.5938 Q2217.9,1172.5313 2217.3688,1172.4063 Q2216.8375,1172.2656 2216.2594,1172 L2216.2594,1169.9531 Q2217.2438,1170.3906 2218.1188,1170.6094 Q2218.9938,1170.8125 2219.9313,1170.8125 Q2220.7906,1170.8125 2221.3375,1170.6094 Q2221.8844,1170.3906 2222.1344,1170.0156 Q2222.4,1169.6406 2222.4,1169.125 Q2222.4,1168.6094 2222.1813,1168.2656 Q2221.9781,1167.9219 2221.3844,1167.5938 Q2220.8063,1167.2656 2219.7125,1166.875 Q2218.9156,1166.5625 2218.2906,1166.2344 Q2217.6813,1165.8906 2217.2594,1165.4375 Q2216.8375,1164.9688 2216.6188,1164.375 Q2216.4156,1163.7813 2216.4156,1163.0156 Q2216.4156,1161.9688 2216.9469,1161.2188 Q2217.4938,1160.4531 2218.4313,1160.0625 Q2219.3688,1159.6563 2220.5563,1159.6563 Q2221.6031,1159.6563 2222.4469,1159.8594 Q2223.3063,1160.0469 2224.2438,1160.4688 L2223.5875,1162.2813 Q2222.7125,1161.8906 2221.9938,1161.7188 Q2221.2906,1161.5313 2220.525,1161.5313 Q2219.8219,1161.5313 2219.3688,1161.7344 Q2218.9313,1161.9219 2218.7125,1162.2656 Q2218.4938,1162.5938 2218.4938,1163.0313 Q2218.4938,1163.5781 2218.7125,1163.9219 Q2218.9313,1164.2656 2219.4625,1164.5781 Q2220.0094,1164.875 2220.9781,1165.2344 Q2222.0719,1165.6406 2222.8375,1166.125 Q2223.6188,1166.5938 2224.0406,1167.2813 Q2224.4625,1167.9531 2224.4625,1168.9844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="2239.1" y="1171.432">Outcome</text><line style="stroke:#181818;stroke-width:0.5;" x1="2182.5" x2="2325.5" y1="1182" y2="1182"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="2187.5" y="1200.9659">isTerminal: boolean</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="2187.5" y="1220.0339">win: boolean</text></g><!--MD5=[4cf87534c235239d37db4adfd136fff4]
class Rule--><g id="elem_Rule"><rect codeLine="87" fill="#F1F1F1" height="124.2717" id="Rule" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="1782" y="1732"/><ellipse cx="1871.75" cy="1748" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1871.8594,1743.5313 Q1870.9375,1743.5313 1870.2031,1743.8438 Q1869.4844,1744.1563 1868.9844,1744.75 Q1868.4844,1745.3281 1868.2031,1746.2031 Q1867.9375,1747.0781 1867.9375,1748.1719 Q1867.9375,1749.6094 1868.375,1750.6563 Q1868.8281,1751.7031 1869.6719,1752.25 Q1870.5313,1752.7969 1871.8438,1752.7969 Q1872.625,1752.7969 1873.3125,1752.6719 Q1874.0156,1752.5313 1875.0156,1752.2188 L1875.0156,1754.0938 Q1874.1563,1754.4219 1873.3906,1754.5469 Q1872.6406,1754.6719 1871.625,1754.6719 Q1869.7031,1754.6719 1868.3906,1753.875 Q1867.0938,1753.0625 1866.4375,1751.5938 Q1865.7813,1750.1094 1865.7813,1748.1406 Q1865.7813,1746.7188 1866.1719,1745.5469 Q1866.5781,1744.3594 1867.3594,1743.4844 Q1868.1406,1742.6094 1869.2813,1742.1406 Q1870.4219,1741.6563 1871.8906,1741.6563 Q1872.8438,1741.6563 1873.7344,1741.8594 Q1874.6406,1742.0469 1875.5781,1742.5156 L1874.75,1744.2969 Q1873.9688,1743.9219 1873.3125,1743.7344 Q1872.6563,1743.5313 1871.8594,1743.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1892.25" y="1753.432">Rule</text><line style="stroke:#181818;stroke-width:0.5;" x1="1783" x2="1999" y1="1764" y2="1764"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1790" y="1776.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1802" y="1782.9659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1790" y="1795.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="1802" y="1802.0339">travellingPeople: Item[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1783" x2="1999" y1="1810.1358" y2="1810.1358"/><ellipse cx="1793" cy="1825.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1802" y="1829.1018">getElapsedTime(): number</text><ellipse cx="1793" cy="1844.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="1802" y="1848.1697">transpose(state: State): State</text></g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="94" fill="#F1F1F1" height="181.4754" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="263" x="2207" y="1432.5"/><ellipse cx="2317.25" cy="1448.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2317.3594,1444.0313 Q2316.4375,1444.0313 2315.7031,1444.3438 Q2314.9844,1444.6563 2314.4844,1445.25 Q2313.9844,1445.8281 2313.7031,1446.7031 Q2313.4375,1447.5781 2313.4375,1448.6719 Q2313.4375,1450.1094 2313.875,1451.1563 Q2314.3281,1452.2031 2315.1719,1452.75 Q2316.0313,1453.2969 2317.3438,1453.2969 Q2318.125,1453.2969 2318.8125,1453.1719 Q2319.5156,1453.0313 2320.5156,1452.7188 L2320.5156,1454.5938 Q2319.6563,1454.9219 2318.8906,1455.0469 Q2318.1406,1455.1719 2317.125,1455.1719 Q2315.2031,1455.1719 2313.8906,1454.375 Q2312.5938,1453.5625 2311.9375,1452.0938 Q2311.2813,1450.6094 2311.2813,1448.6406 Q2311.2813,1447.2188 2311.6719,1446.0469 Q2312.0781,1444.8594 2312.8594,1443.9844 Q2313.6406,1443.1094 2314.7813,1442.6406 Q2315.9219,1442.1563 2317.3906,1442.1563 Q2318.3438,1442.1563 2319.2344,1442.3594 Q2320.1406,1442.5469 2321.0781,1443.0156 L2320.25,1444.7969 Q2319.4688,1444.4219 2318.8125,1444.2344 Q2318.1563,1444.0313 2317.3594,1444.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="2337.75" y="1453.932">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="2208" x2="2469" y1="1464.5" y2="1464.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2215" y="1476.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="2227" y="1483.4659">initialRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2215" y="1495.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="2227" y="1502.5339">finalRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2215" y="1514.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="2227" y="1521.6018">remainingTime: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="2208" x2="2469" y1="1529.7038" y2="1529.7038"/><ellipse cx="2218" cy="1544.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="2227" y="1548.6697">getValidRules(): Rule[]</text><ellipse cx="2218" cy="1563.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2227" y="1567.7376">getOutcome(): Outcome</text><ellipse cx="2218" cy="1582.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="2227" y="1586.8055">equalByItems(state: State): boolean</text><ellipse cx="2218" cy="1601.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="2227" y="1605.8734">getLampPosition(): RiverBank</text></g><!--MD5=[08770b5ff02271603200ffd0f930842d]
class Problem--><g id="elem_Problem"><rect codeLine="104" fill="#F1F1F1" height="105.2038" id="Problem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="383" x="1741" y="1470.5"/><ellipse cx="1900.25" cy="1486.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1900.3594,1482.0313 Q1899.4375,1482.0313 1898.7031,1482.3438 Q1897.9844,1482.6563 1897.4844,1483.25 Q1896.9844,1483.8281 1896.7031,1484.7031 Q1896.4375,1485.5781 1896.4375,1486.6719 Q1896.4375,1488.1094 1896.875,1489.1563 Q1897.3281,1490.2031 1898.1719,1490.75 Q1899.0313,1491.2969 1900.3438,1491.2969 Q1901.125,1491.2969 1901.8125,1491.1719 Q1902.5156,1491.0313 1903.5156,1490.7188 L1903.5156,1492.5938 Q1902.6563,1492.9219 1901.8906,1493.0469 Q1901.1406,1493.1719 1900.125,1493.1719 Q1898.2031,1493.1719 1896.8906,1492.375 Q1895.5938,1491.5625 1894.9375,1490.0938 Q1894.2813,1488.6094 1894.2813,1486.6406 Q1894.2813,1485.2188 1894.6719,1484.0469 Q1895.0781,1482.8594 1895.8594,1481.9844 Q1896.6406,1481.1094 1897.7813,1480.6406 Q1898.9219,1480.1563 1900.3906,1480.1563 Q1901.3438,1480.1563 1902.2344,1480.3594 Q1903.1406,1480.5469 1904.0781,1481.0156 L1903.25,1482.7969 Q1902.4688,1482.4219 1901.8125,1482.2344 Q1901.1563,1482.0313 1900.3594,1482.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1920.75" y="1491.932">Problem</text><line style="stroke:#181818;stroke-width:0.5;" x1="1742" x2="2123" y1="1502.5" y2="1502.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1749" y="1514.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="82" x="1761" y="1521.4659">rules: Rule[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1742" x2="2123" y1="1529.5679" y2="1529.5679"/><ellipse cx="1752" cy="1544.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="357" x="1761" y="1548.5339">getRule(firstPerson: Item, secondPerson?: Item): Rule</text><ellipse cx="1752" cy="1563.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="211" x="1761" y="1567.6018">isSolution(state: State): boolean</text></g><!--MD5=[b6822c04d2a4e38de2312ac23c188825]
class BasicEdge--><g id="elem_BasicEdge"><rect codeLine="110" fill="#F1F1F1" height="97.2038" id="BasicEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="1260" y="1474.5"/><ellipse cx="1317.75" cy="1490.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1321.0938,1495.75 L1319.625,1492 L1315.1875,1492 L1313.75,1495.75 L1311.625,1495.75 L1316.5781,1483.0313 L1318.3281,1483.0313 L1323.25,1495.75 L1321.0938,1495.75 Z M1317.75,1486.7969 Q1317.7031,1486.6406 1317.5781,1486.2813 Q1317.4531,1485.9219 1317.3438,1485.5469 Q1317.2344,1485.1563 1317.4375,1485.0938 Q1317.5938,1485.2813 1317.5,1485.6406 Q1317.4063,1485.9844 1317.3125,1486.2813 Q1317.2188,1486.5625 1317.1406,1486.7969 L1315.9063,1490.1094 L1318.9844,1490.1094 L1317.75,1486.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="62" x="1338.25" y="1495.932">BasicEdge</text><line style="stroke:#181818;stroke-width:0.5;" x1="1261" x2="1445" y1="1506.5" y2="1506.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1268" y="1518.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1280" y="1525.4659">sourceNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1268" y="1537.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="1280" y="1544.5339">targetNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1268" y="1556.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1280" y="1563.6018">rule: Rule</text></g><!--MD5=[991089839fde95c2276dcf2721646821]
class BasicNode--><g id="elem_BasicNode"><rect codeLine="116" fill="#F1F1F1" height="200.5433" id="BasicNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="567" x="1069" y="1089"/><ellipse cx="1315.75" cy="1105" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1319.0938,1110.25 L1317.625,1106.5 L1313.1875,1106.5 L1311.75,1110.25 L1309.625,1110.25 L1314.5781,1097.5313 L1316.3281,1097.5313 L1321.25,1110.25 L1319.0938,1110.25 Z M1315.75,1101.2969 Q1315.7031,1101.1406 1315.5781,1100.7813 Q1315.4531,1100.4219 1315.3438,1100.0469 Q1315.2344,1099.6563 1315.4375,1099.5938 Q1315.5938,1099.7813 1315.5,1100.1406 Q1315.4063,1100.4844 1315.3125,1100.7813 Q1315.2188,1101.0625 1315.1406,1101.2969 L1313.9063,1104.6094 L1316.9844,1104.6094 L1315.75,1101.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="65" x="1336.25" y="1110.432">BasicNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="1070" x2="1635" y1="1121" y2="1121"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1077" y="1133.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1089" y="1139.9659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1077" y="1152.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1089" y="1159.0339">state: State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1077" y="1171.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1089" y="1178.1018">targetEdges: BasicEdge[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1070" x2="1635" y1="1186.2038" y2="1186.2038"/><polygon fill="#FFFF44" points="1080,1196.2377,1084,1200.2377,1080,1204.2377,1076,1200.2377" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="429" x="1089" y="1205.1697">addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null</text><polygon fill="#FFFF44" points="1080,1215.3056,1084,1219.3056,1080,1223.3056,1076,1219.3056" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="541" x="1089" y="1224.2376">addTargetEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge</text><ellipse cx="1080" cy="1239.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="1089" y="1243.3055">addEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge</text><ellipse cx="1080" cy="1258.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="1089" y="1262.3734">connectTargetEdges(targetEdges: BasicEdge[]): void</text><ellipse cx="1080" cy="1277.5094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="258" x="1089" y="1281.4414">checkIfThereIsLoop(state: State): boolean</text></g><!--MD5=[2a3c70e0e60fdc5bec87fc3bba3491c5]
class BasicStructure--><g id="elem_BasicStructure"><rect codeLine="127" fill="#F1F1F1" height="124.2717" id="BasicStructure" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="526" x="1047" y="844"/><ellipse cx="1260.75" cy="860" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1264.0938,865.25 L1262.625,861.5 L1258.1875,861.5 L1256.75,865.25 L1254.625,865.25 L1259.5781,852.5313 L1261.3281,852.5313 L1266.25,865.25 L1264.0938,865.25 Z M1260.75,856.2969 Q1260.7031,856.1406 1260.5781,855.7813 Q1260.4531,855.4219 1260.3438,855.0469 Q1260.2344,854.6563 1260.4375,854.5938 Q1260.5938,854.7813 1260.5,855.1406 Q1260.4063,855.4844 1260.3125,855.7813 Q1260.2188,856.0625 1260.1406,856.2969 L1258.9063,859.6094 L1261.9844,859.6094 L1260.75,856.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="90" x="1281.25" y="865.432">BasicStructure</text><line style="stroke:#181818;stroke-width:0.5;" x1="1048" x2="1572" y1="876" y2="876"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1055" y="888.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1067" y="894.9659">nextNodeId: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="1048" x2="1572" y1="903.0679" y2="903.0679"/><polygon fill="#FFFF44" points="1058,913.1019,1062,917.1019,1058,921.1019,1054,917.1019" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="330" x="1067" y="922.0339">instantiateNode(id: number, state: State): BasicNode</text><polygon fill="#FFFF44" points="1058,932.1698,1062,936.1698,1058,940.1698,1054,936.1698" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="1067" y="941.1018">createNode(state: State): BasicNode</text><ellipse cx="1058" cy="956.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="500" x="1067" y="960.1697">createValidTransitions(node: BasicNode, sortingFunction: Function): BasicEdge[]</text></g><!--MD5=[0fe71ee5d44d03bcbd1815cd1a526ec5]
class TreeEdge--><g id="elem_TreeEdge"><rect codeLine="134" fill="#F1F1F1" height="32" id="TreeEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="699" y="1173"/><ellipse cx="714" cy="1189" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M714.1094,1184.5313 Q713.1875,1184.5313 712.4531,1184.8438 Q711.7344,1185.1563 711.2344,1185.75 Q710.7344,1186.3281 710.4531,1187.2031 Q710.1875,1188.0781 710.1875,1189.1719 Q710.1875,1190.6094 710.625,1191.6563 Q711.0781,1192.7031 711.9219,1193.25 Q712.7813,1193.7969 714.0938,1193.7969 Q714.875,1193.7969 715.5625,1193.6719 Q716.2656,1193.5313 717.2656,1193.2188 L717.2656,1195.0938 Q716.4063,1195.4219 715.6406,1195.5469 Q714.8906,1195.6719 713.875,1195.6719 Q711.9531,1195.6719 710.6406,1194.875 Q709.3438,1194.0625 708.6875,1192.5938 Q708.0313,1191.1094 708.0313,1189.1406 Q708.0313,1187.7188 708.4219,1186.5469 Q708.8281,1185.3594 709.6094,1184.4844 Q710.3906,1183.6094 711.5313,1183.1406 Q712.6719,1182.6563 714.1406,1182.6563 Q715.0938,1182.6563 715.9844,1182.8594 Q716.8906,1183.0469 717.8281,1183.5156 L717,1185.2969 Q716.2188,1184.9219 715.5625,1184.7344 Q714.9063,1184.5313 714.1094,1184.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="728" y="1194.432">TreeEdge</text></g><!--MD5=[8c9078384c8216faeee668eb33da04e9]
class TreeNode--><g id="elem_TreeNode"><rect codeLine="136" fill="#F1F1F1" height="124.2717" id="TreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="482" x="506" y="844"/><ellipse cx="709.75" cy="860" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M709.8594,855.5313 Q708.9375,855.5313 708.2031,855.8438 Q707.4844,856.1563 706.9844,856.75 Q706.4844,857.3281 706.2031,858.2031 Q705.9375,859.0781 705.9375,860.1719 Q705.9375,861.6094 706.375,862.6563 Q706.8281,863.7031 707.6719,864.25 Q708.5313,864.7969 709.8438,864.7969 Q710.625,864.7969 711.3125,864.6719 Q712.0156,864.5313 713.0156,864.2188 L713.0156,866.0938 Q712.1563,866.4219 711.3906,866.5469 Q710.6406,866.6719 709.625,866.6719 Q707.7031,866.6719 706.3906,865.875 Q705.0938,865.0625 704.4375,863.5938 Q703.7813,862.1094 703.7813,860.1406 Q703.7813,858.7188 704.1719,857.5469 Q704.5781,856.3594 705.3594,855.4844 Q706.1406,854.6094 707.2813,854.1406 Q708.4219,853.6563 709.8906,853.6563 Q710.8438,853.6563 711.7344,853.8594 Q712.6406,854.0469 713.5781,854.5156 L712.75,856.2969 Q711.9688,855.9219 711.3125,855.7344 Q710.6563,855.5313 709.8594,855.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="730.25" y="865.432">TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="507" x2="987" y1="876" y2="876"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="514" y="888.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="526" y="894.9659">sourceEdge: TreeEdge | null</text><line style="stroke:#181818;stroke-width:0.5;" x1="507" x2="987" y1="903.0679" y2="903.0679"/><polygon fill="#FFFF44" points="517,913.1019,521,917.1019,517,921.1019,513,917.1019" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="526" y="922.0339">addSourceEdge(sourceNode: TreeNode, rule: Rule): TreeEdge | null</text><ellipse cx="517" cy="937.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="526" y="941.1018">checkIfThereIsLoop(state: State): boolean</text><ellipse cx="517" cy="956.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="526" y="960.1697">checkIfTransitionAlreadyExists(rule: Rule): boolean</text></g><!--MD5=[bb7f1c801adcc1c297b2d9190618259c]
class Tree--><g id="elem_Tree"><rect codeLine="143" fill="#F1F1F1" height="124.2717" id="Tree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="607" y="542.5"/><ellipse cx="761.25" cy="558.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M761.3594,554.0313 Q760.4375,554.0313 759.7031,554.3438 Q758.9844,554.6563 758.4844,555.25 Q757.9844,555.8281 757.7031,556.7031 Q757.4375,557.5781 757.4375,558.6719 Q757.4375,560.1094 757.875,561.1563 Q758.3281,562.2031 759.1719,562.75 Q760.0313,563.2969 761.3438,563.2969 Q762.125,563.2969 762.8125,563.1719 Q763.5156,563.0313 764.5156,562.7188 L764.5156,564.5938 Q763.6563,564.9219 762.8906,565.0469 Q762.1406,565.1719 761.125,565.1719 Q759.2031,565.1719 757.8906,564.375 Q756.5938,563.5625 755.9375,562.0938 Q755.2813,560.6094 755.2813,558.6406 Q755.2813,557.2188 755.6719,556.0469 Q756.0781,554.8594 756.8594,553.9844 Q757.6406,553.1094 758.7813,552.6406 Q759.9219,552.1563 761.3906,552.1563 Q762.3438,552.1563 763.2344,552.3594 Q764.1406,552.5469 765.0781,553.0156 L764.25,554.7969 Q763.4688,554.4219 762.8125,554.2344 Q762.1563,554.0313 761.3594,554.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="781.75" y="563.932">Tree</text><line style="stroke:#181818;stroke-width:0.5;" x1="608" x2="953" y1="574.5" y2="574.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="615" y="586.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="627" y="593.4659">root: TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="608" x2="953" y1="601.5679" y2="601.5679"/><ellipse cx="618" cy="626.1358" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="627" y="620.5339">createNextValidTransition(node: TreeNode,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="627" y="639.6018">sortingFunction: Function): TreeEdge | null</text><ellipse cx="618" cy="654.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="321" x="627" y="658.6697">getAscendingPath(node: TreeNode): TreeEdge[]</text></g><!--MD5=[4843b67a3b9840b2bac36b52d843b310]
class WeightedTreeEdge--><g id="elem_WeightedTreeEdge"><rect codeLine="149" fill="#F1F1F1" height="59.0679" id="WeightedTreeEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="233.5" y="876.5"/><ellipse cx="248.5" cy="892.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M248.6094,888.0313 Q247.6875,888.0313 246.9531,888.3438 Q246.2344,888.6563 245.7344,889.25 Q245.2344,889.8281 244.9531,890.7031 Q244.6875,891.5781 244.6875,892.6719 Q244.6875,894.1094 245.125,895.1563 Q245.5781,896.2031 246.4219,896.75 Q247.2813,897.2969 248.5938,897.2969 Q249.375,897.2969 250.0625,897.1719 Q250.7656,897.0313 251.7656,896.7188 L251.7656,898.5938 Q250.9063,898.9219 250.1406,899.0469 Q249.3906,899.1719 248.375,899.1719 Q246.4531,899.1719 245.1406,898.375 Q243.8438,897.5625 243.1875,896.0938 Q242.5313,894.6094 242.5313,892.6406 Q242.5313,891.2188 242.9219,890.0469 Q243.3281,888.8594 244.1094,887.9844 Q244.8906,887.1094 246.0313,886.6406 Q247.1719,886.1563 248.6406,886.1563 Q249.5938,886.1563 250.4844,886.3594 Q251.3906,886.5469 252.3281,887.0156 L251.5,888.7969 Q250.7188,888.4219 250.0625,888.2344 Q249.4063,888.0313 248.6094,888.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="262.5" y="897.932">WeightedTreeEdge</text><line style="stroke:#181818;stroke-width:0.5;" x1="234.5" x2="393.5" y1="908.5" y2="908.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="241.5" y="920.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="253.5" y="927.4659">weight: number</text></g><!--MD5=[fc8ec160b878bfe58c42ed82c9107112]
class WeightedTreeNode--><g id="elem_WeightedTreeNode"><rect codeLine="153" fill="#F1F1F1" height="78.1358" id="WeightedTreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="284" y="565.5"/><ellipse cx="305.75" cy="581.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M309.0938,586.75 L307.625,583 L303.1875,583 L301.75,586.75 L299.625,586.75 L304.5781,574.0313 L306.3281,574.0313 L311.25,586.75 L309.0938,586.75 Z M305.75,577.7969 Q305.7031,577.6406 305.5781,577.2813 Q305.4531,576.9219 305.3438,576.5469 Q305.2344,576.1563 305.4375,576.0938 Q305.5938,576.2813 305.5,576.6406 Q305.4063,576.9844 305.3125,577.2813 Q305.2188,577.5625 305.1406,577.7969 L303.9063,581.1094 L306.9844,581.1094 L305.75,577.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="119" x="321.25" y="586.932">WeightedTreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="285" x2="449" y1="597.5" y2="597.5"/><ellipse cx="295" cy="612.534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="304" y="616.4659">getWeight(): number</text><ellipse cx="295" cy="631.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="120" x="304" y="635.5339">getValue(): number</text></g><!--MD5=[05560636010a7bef2faf28b761f4b4cb]
class WeightedTree--><g id="elem_WeightedTree"><rect codeLine="36" fill="#F1F1F1" height="32" id="WeightedTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="332" y="336.5"/><ellipse cx="347" cy="352.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M350.3438,357.75 L348.875,354 L344.4375,354 L343,357.75 L340.875,357.75 L345.8281,345.0313 L347.5781,345.0313 L352.5,357.75 L350.3438,357.75 Z M347,348.7969 Q346.9531,348.6406 346.8281,348.2813 Q346.7031,347.9219 346.5938,347.5469 Q346.4844,347.1563 346.6875,347.0938 Q346.8438,347.2813 346.75,347.6406 Q346.6563,347.9844 346.5625,348.2813 Q346.4688,348.5625 346.3906,348.7969 L345.1563,352.1094 L348.2344,352.1094 L347,348.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="86" x="361" y="357.932">WeightedTree</text></g><!--MD5=[110b8963fc4d90fda6da449baef3bf57]
class OrderedTreeNode--><g id="elem_OrderedTreeNode"><rect codeLine="37" fill="#F1F1F1" height="32" id="OrderedTreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="218.5" y="137"/><ellipse cx="233.5" cy="153" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M233.6094,148.5313 Q232.6875,148.5313 231.9531,148.8438 Q231.2344,149.1563 230.7344,149.75 Q230.2344,150.3281 229.9531,151.2031 Q229.6875,152.0781 229.6875,153.1719 Q229.6875,154.6094 230.125,155.6563 Q230.5781,156.7031 231.4219,157.25 Q232.2813,157.7969 233.5938,157.7969 Q234.375,157.7969 235.0625,157.6719 Q235.7656,157.5313 236.7656,157.2188 L236.7656,159.0938 Q235.9063,159.4219 235.1406,159.5469 Q234.3906,159.6719 233.375,159.6719 Q231.4531,159.6719 230.1406,158.875 Q228.8438,158.0625 228.1875,156.5938 Q227.5313,155.1094 227.5313,153.1406 Q227.5313,151.7188 227.9219,150.5469 Q228.3281,149.3594 229.1094,148.4844 Q229.8906,147.6094 231.0313,147.1406 Q232.1719,146.6563 233.6406,146.6563 Q234.5938,146.6563 235.4844,146.8594 Q236.3906,147.0469 237.3281,147.5156 L236.5,149.2969 Q235.7188,148.9219 235.0625,148.7344 Q234.4063,148.5313 233.6094,148.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="247.5" y="158.432">OrderedTreeNode</text></g><!--MD5=[a9be67010c85e9dbc306a26b44919019]
class GreedyTreeNode--><g id="elem_GreedyTreeNode"><rect codeLine="158" fill="#F1F1F1" height="59.0679" id="GreedyTreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="82" y="323"/><ellipse cx="111.4" cy="339" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M111.5094,334.5313 Q110.5875,334.5313 109.8531,334.8438 Q109.1344,335.1563 108.6344,335.75 Q108.1344,336.3281 107.8531,337.2031 Q107.5875,338.0781 107.5875,339.1719 Q107.5875,340.6094 108.025,341.6563 Q108.4781,342.7031 109.3219,343.25 Q110.1813,343.7969 111.4938,343.7969 Q112.275,343.7969 112.9625,343.6719 Q113.6656,343.5313 114.6656,343.2188 L114.6656,345.0938 Q113.8063,345.4219 113.0406,345.5469 Q112.2906,345.6719 111.275,345.6719 Q109.3531,345.6719 108.0406,344.875 Q106.7438,344.0625 106.0875,342.5938 Q105.4313,341.1094 105.4313,339.1406 Q105.4313,337.7188 105.8219,336.5469 Q106.2281,335.3594 107.0094,334.4844 Q107.7906,333.6094 108.9313,333.1406 Q110.0719,332.6563 111.5406,332.6563 Q112.4938,332.6563 113.3844,332.8594 Q114.2906,333.0469 115.2281,333.5156 L114.4,335.2969 Q113.6188,334.9219 112.9625,334.7344 Q112.3063,334.5313 111.5094,334.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="128.6" y="344.432">GreedyTreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="83" x2="259" y1="355" y2="355"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="90" y="367.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="102" y="373.9659">getHeuristic(): number</text></g><!--MD5=[bbdd4e1c4ed0e12c88f0ad2583098c55]
class AStarTreeNode--><g id="elem_AStarTreeNode"><rect codeLine="162" fill="#F1F1F1" height="59.0679" id="AStarTreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="71" y="575"/><ellipse cx="105.8" cy="591" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M105.9094,586.5313 Q104.9875,586.5313 104.2531,586.8438 Q103.5344,587.1563 103.0344,587.75 Q102.5344,588.3281 102.2531,589.2031 Q101.9875,590.0781 101.9875,591.1719 Q101.9875,592.6094 102.425,593.6563 Q102.8781,594.7031 103.7219,595.25 Q104.5813,595.7969 105.8938,595.7969 Q106.675,595.7969 107.3625,595.6719 Q108.0656,595.5313 109.0656,595.2188 L109.0656,597.0938 Q108.2063,597.4219 107.4406,597.5469 Q106.6906,597.6719 105.675,597.6719 Q103.7531,597.6719 102.4406,596.875 Q101.1438,596.0625 100.4875,594.5938 Q99.8313,593.1094 99.8313,591.1406 Q99.8313,589.7188 100.2219,588.5469 Q100.6281,587.3594 101.4094,586.4844 Q102.1906,585.6094 103.3313,585.1406 Q104.4719,584.6563 105.9406,584.6563 Q106.8938,584.6563 107.7844,584.8594 Q108.6906,585.0469 109.6281,585.5156 L108.8,587.2969 Q108.0188,586.9219 107.3625,586.7344 Q106.7063,586.5313 105.9094,586.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="124.2" y="596.432">AStarTreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="72" x2="248" y1="607" y2="607"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="79" y="619.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="91" y="625.9659">getHeuristic(): number</text></g><!--MD5=[d5a630d213adc2e3986060bd811a90b1]
class Search--><g id="elem_Search"><rect codeLine="166" fill="#F1F1F1" height="124.2717" id="Search" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="300" x="1840" y="844"/><ellipse cx="1964.75" cy="860" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1968.0938,865.25 L1966.625,861.5 L1962.1875,861.5 L1960.75,865.25 L1958.625,865.25 L1963.5781,852.5313 L1965.3281,852.5313 L1970.25,865.25 L1968.0938,865.25 Z M1964.75,856.2969 Q1964.7031,856.1406 1964.5781,855.7813 Q1964.4531,855.4219 1964.3438,855.0469 Q1964.2344,854.6563 1964.4375,854.5938 Q1964.5938,854.7813 1964.5,855.1406 Q1964.4063,855.4844 1964.3125,855.7813 Q1964.2188,856.0625 1964.1406,856.2969 L1962.9063,859.6094 L1965.9844,859.6094 L1964.75,856.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="42" x="1985.25" y="865.432">Search</text><line style="stroke:#181818;stroke-width:0.5;" x1="1841" x2="2139" y1="876" y2="876"/><polygon fill="none" points="1851,886.034,1855,890.034,1851,894.034,1847,890.034" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1860" y="894.9659">tree: Tree</text><line style="stroke:#181818;stroke-width:0.5;" x1="1841" x2="2139" y1="903.0679" y2="903.0679"/><ellipse cx="1851" cy="918.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="1860" y="922.0339">getAlgorithmName(): string</text><ellipse cx="1851" cy="937.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="214" x="1860" y="941.1018">getSafeAlgorithmName(): string</text><ellipse cx="1851" cy="956.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="274" x="1860" y="960.1697">search(maxIterations?: number): TreeEdge[]</text></g><!--MD5=[7686d504fd3853a1221d3c3ed1fd0f0f]
class UninformedSearch--><g id="elem_UninformedSearch"><rect codeLine="187" fill="#F1F1F1" height="276.815" id="UninformedSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="523" x="2277.5" y="466"/><ellipse cx="2476.75" cy="482" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2480.0938,487.25 L2478.625,483.5 L2474.1875,483.5 L2472.75,487.25 L2470.625,487.25 L2475.5781,474.5313 L2477.3281,474.5313 L2482.25,487.25 L2480.0938,487.25 Z M2476.75,478.2969 Q2476.7031,478.1406 2476.5781,477.7813 Q2476.4531,477.4219 2476.3438,477.0469 Q2476.2344,476.6563 2476.4375,476.5938 Q2476.5938,476.7813 2476.5,477.1406 Q2476.4063,477.4844 2476.3125,477.7813 Q2476.2188,478.0625 2476.1406,478.2969 L2474.9063,481.6094 L2477.9844,481.6094 L2476.75,478.2969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="116" x="2497.25" y="487.432">UninformedSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="2278.5" x2="2799.5" y1="498" y2="498"/><polygon fill="none" points="2288.5,508.034,2292.5,512.034,2288.5,516.034,2284.5,512.034" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2297.5" y="516.9659">currentNode: TreeNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="529.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="2297.5" y="536.0339">openNodes: TreeNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="548.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="2297.5" y="555.1018">closedNodes: TreeNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="567.2377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="2297.5" y="574.1697">sortingFunction: (TreeEdge, TreeEdge) =&gt; number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="586.3056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="2297.5" y="593.2376">currentNode: WeightedTreeNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="605.3735"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="2297.5" y="612.3055">openEdges: WeightedTreeEdge[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="624.4415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="2297.5" y="631.3734">closedNodes: WeightedTreeNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="643.5094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="466" x="2297.5" y="650.4414">sortingFunction: (WeightedTreeEdge, WeightedTreeEdge) =&gt; number</text><line style="stroke:#181818;stroke-width:0.5;" x1="2278.5" x2="2799.5" y1="658.5433" y2="658.5433"/><ellipse cx="2288.5" cy="673.5773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="177" x="2297.5" y="677.5093">getCurrentNode(): TreeNode</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="689.6452"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="2297.5" y="696.5772">doIteration(): TreeEdge[] | null</text><polygon fill="#FFFF44" points="2288.5,706.7131,2292.5,710.7131,2288.5,714.7131,2284.5,710.7131" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="2297.5" y="715.6451">updateCurrentNode(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2285.5" y="727.781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="2297.5" y="734.713">doIteration(currentNode: WeightedTreeNode): WeightedTreeEdge[] | null</text></g><!--MD5=[f660be4ffa4bd991089c932c465ec971]
class BacktrackingSearch--><g id="elem_BacktrackingSearch"><rect codeLine="173" fill="#F1F1F1" height="105.2038" id="BacktrackingSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="322" x="2108" y="300"/><ellipse cx="2198.75" cy="316" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2198.8594,311.5313 Q2197.9375,311.5313 2197.2031,311.8438 Q2196.4844,312.1563 2195.9844,312.75 Q2195.4844,313.3281 2195.2031,314.2031 Q2194.9375,315.0781 2194.9375,316.1719 Q2194.9375,317.6094 2195.375,318.6563 Q2195.8281,319.7031 2196.6719,320.25 Q2197.5313,320.7969 2198.8438,320.7969 Q2199.625,320.7969 2200.3125,320.6719 Q2201.0156,320.5313 2202.0156,320.2188 L2202.0156,322.0938 Q2201.1563,322.4219 2200.3906,322.5469 Q2199.6406,322.6719 2198.625,322.6719 Q2196.7031,322.6719 2195.3906,321.875 Q2194.0938,321.0625 2193.4375,319.5938 Q2192.7813,318.1094 2192.7813,316.1406 Q2192.7813,314.7188 2193.1719,313.5469 Q2193.5781,312.3594 2194.3594,311.4844 Q2195.1406,310.6094 2196.2813,310.1406 Q2197.4219,309.6563 2198.8906,309.6563 Q2199.8438,309.6563 2200.7344,309.8594 Q2201.6406,310.0469 2202.5781,310.5156 L2201.75,312.2969 Q2200.9688,311.9219 2200.3125,311.7344 Q2199.6563,311.5313 2198.8594,311.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="2219.25" y="321.432">BacktrackingSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="2109" x2="2429" y1="332" y2="332"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2116" y="344.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="2128" y="350.9659">sortingFunction: (Rule, Rule) =&gt; number</text><line style="stroke:#181818;stroke-width:0.5;" x1="2109" x2="2429" y1="359.0679" y2="359.0679"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2116" y="380.6358"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="2128" y="378.0339">doBacktracking(startNode: TreeNode):</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="2128" y="397.1018">{foundNode: TreeNode, isSolution: boolean}</text></g><!--MD5=[1acc1444ea17b597d4326a1f92e0414e]
class BreadthFirstSearch--><g id="elem_BreadthFirstSearch"><rect codeLine="50" fill="#F1F1F1" height="32" id="BreadthFirstSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="2648.5" y="336.5"/><ellipse cx="2663.5" cy="352.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2663.6094,348.0313 Q2662.6875,348.0313 2661.9531,348.3438 Q2661.2344,348.6563 2660.7344,349.25 Q2660.2344,349.8281 2659.9531,350.7031 Q2659.6875,351.5781 2659.6875,352.6719 Q2659.6875,354.1094 2660.125,355.1563 Q2660.5781,356.2031 2661.4219,356.75 Q2662.2813,357.2969 2663.5938,357.2969 Q2664.375,357.2969 2665.0625,357.1719 Q2665.7656,357.0313 2666.7656,356.7188 L2666.7656,358.5938 Q2665.9063,358.9219 2665.1406,359.0469 Q2664.3906,359.1719 2663.375,359.1719 Q2661.4531,359.1719 2660.1406,358.375 Q2658.8438,357.5625 2658.1875,356.0938 Q2657.5313,354.6094 2657.5313,352.6406 Q2657.5313,351.2188 2657.9219,350.0469 Q2658.3281,348.8594 2659.1094,347.9844 Q2659.8906,347.1094 2661.0313,346.6406 Q2662.1719,346.1563 2663.6406,346.1563 Q2664.5938,346.1563 2665.4844,346.3594 Q2666.3906,346.5469 2667.3281,347.0156 L2666.5,348.7969 Q2665.7188,348.4219 2665.0625,348.2344 Q2664.4063,348.0313 2663.6094,348.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2677.5" y="357.932">BreadthFirstSearch</text></g><!--MD5=[bee246b072b458deb57e2ff44b612b66]
class DepthFirstSearch--><g id="elem_DepthFirstSearch"><rect codeLine="51" fill="#F1F1F1" height="32" id="DepthFirstSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="2465" y="336.5"/><ellipse cx="2480" cy="352.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2480.1094,348.0313 Q2479.1875,348.0313 2478.4531,348.3438 Q2477.7344,348.6563 2477.2344,349.25 Q2476.7344,349.8281 2476.4531,350.7031 Q2476.1875,351.5781 2476.1875,352.6719 Q2476.1875,354.1094 2476.625,355.1563 Q2477.0781,356.2031 2477.9219,356.75 Q2478.7813,357.2969 2480.0938,357.2969 Q2480.875,357.2969 2481.5625,357.1719 Q2482.2656,357.0313 2483.2656,356.7188 L2483.2656,358.5938 Q2482.4063,358.9219 2481.6406,359.0469 Q2480.8906,359.1719 2479.875,359.1719 Q2477.9531,359.1719 2476.6406,358.375 Q2475.3438,357.5625 2474.6875,356.0938 Q2474.0313,354.6094 2474.0313,352.6406 Q2474.0313,351.2188 2474.4219,350.0469 Q2474.8281,348.8594 2475.6094,347.9844 Q2476.3906,347.1094 2477.5313,346.6406 Q2478.6719,346.1563 2480.1406,346.1563 Q2481.0938,346.1563 2481.9844,346.3594 Q2482.8906,346.5469 2483.8281,347.0156 L2483,348.7969 Q2482.2188,348.4219 2481.5625,348.2344 Q2480.9063,348.0313 2480.1094,348.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="2494" y="357.932">DepthFirstSearch</text></g><!--MD5=[74e179b9d81d7c70fa930fb563934bda]
class InformedSearch--><g id="elem_InformedSearch"><rect codeLine="55" fill="#F1F1F1" height="32" id="InformedSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="1740.5" y="588.5"/><ellipse cx="1755.5" cy="604.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1755.6094,600.0313 Q1754.6875,600.0313 1753.9531,600.3438 Q1753.2344,600.6563 1752.7344,601.25 Q1752.2344,601.8281 1751.9531,602.7031 Q1751.6875,603.5781 1751.6875,604.6719 Q1751.6875,606.1094 1752.125,607.1563 Q1752.5781,608.2031 1753.4219,608.75 Q1754.2813,609.2969 1755.5938,609.2969 Q1756.375,609.2969 1757.0625,609.1719 Q1757.7656,609.0313 1758.7656,608.7188 L1758.7656,610.5938 Q1757.9063,610.9219 1757.1406,611.0469 Q1756.3906,611.1719 1755.375,611.1719 Q1753.4531,611.1719 1752.1406,610.375 Q1750.8438,609.5625 1750.1875,608.0938 Q1749.5313,606.6094 1749.5313,604.6406 Q1749.5313,603.2188 1749.9219,602.0469 Q1750.3281,600.8594 1751.1094,599.9844 Q1751.8906,599.1094 1753.0313,598.6406 Q1754.1719,598.1563 1755.6406,598.1563 Q1756.5938,598.1563 1757.4844,598.3594 Q1758.3906,598.5469 1759.3281,599.0156 L1758.5,600.7969 Q1757.7188,600.4219 1757.0625,600.2344 Q1756.4063,600.0313 1755.6094,600.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="1769.5" y="609.932">InformedSearch</text></g><!--MD5=[45ced7d662657476bd3ae4bfad8115e2]
class OrderedSearch--><g id="elem_OrderedSearch"><rect codeLine="56" fill="#F1F1F1" height="32" id="OrderedSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="1916.5" y="588.5"/><ellipse cx="1931.5" cy="604.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1931.6094,600.0313 Q1930.6875,600.0313 1929.9531,600.3438 Q1929.2344,600.6563 1928.7344,601.25 Q1928.2344,601.8281 1927.9531,602.7031 Q1927.6875,603.5781 1927.6875,604.6719 Q1927.6875,606.1094 1928.125,607.1563 Q1928.5781,608.2031 1929.4219,608.75 Q1930.2813,609.2969 1931.5938,609.2969 Q1932.375,609.2969 1933.0625,609.1719 Q1933.7656,609.0313 1934.7656,608.7188 L1934.7656,610.5938 Q1933.9063,610.9219 1933.1406,611.0469 Q1932.3906,611.1719 1931.375,611.1719 Q1929.4531,611.1719 1928.1406,610.375 Q1926.8438,609.5625 1926.1875,608.0938 Q1925.5313,606.6094 1925.5313,604.6406 Q1925.5313,603.2188 1925.9219,602.0469 Q1926.3281,600.8594 1927.1094,599.9844 Q1927.8906,599.1094 1929.0313,598.6406 Q1930.1719,598.1563 1931.6406,598.1563 Q1932.5938,598.1563 1933.4844,598.3594 Q1934.3906,598.5469 1935.3281,599.0156 L1934.5,600.7969 Q1933.7188,600.4219 1933.0625,600.2344 Q1932.4063,600.0313 1931.6094,600.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="1945.5" y="609.932">OrderedSearch</text></g><!--MD5=[fa4e71b7f3755c4c1cfe4a153b4bc2f3]
class GreedySearch--><g id="elem_GreedySearch"><rect codeLine="57" fill="#F1F1F1" height="32" id="GreedySearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="126" x="1748" y="336.5"/><ellipse cx="1763" cy="352.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1763.1094,348.0313 Q1762.1875,348.0313 1761.4531,348.3438 Q1760.7344,348.6563 1760.2344,349.25 Q1759.7344,349.8281 1759.4531,350.7031 Q1759.1875,351.5781 1759.1875,352.6719 Q1759.1875,354.1094 1759.625,355.1563 Q1760.0781,356.2031 1760.9219,356.75 Q1761.7813,357.2969 1763.0938,357.2969 Q1763.875,357.2969 1764.5625,357.1719 Q1765.2656,357.0313 1766.2656,356.7188 L1766.2656,358.5938 Q1765.4063,358.9219 1764.6406,359.0469 Q1763.8906,359.1719 1762.875,359.1719 Q1760.9531,359.1719 1759.6406,358.375 Q1758.3438,357.5625 1757.6875,356.0938 Q1757.0313,354.6094 1757.0313,352.6406 Q1757.0313,351.2188 1757.4219,350.0469 Q1757.8281,348.8594 1758.6094,347.9844 Q1759.3906,347.1094 1760.5313,346.6406 Q1761.6719,346.1563 1763.1406,346.1563 Q1764.0938,346.1563 1764.9844,346.3594 Q1765.8906,346.5469 1766.8281,347.0156 L1766,348.7969 Q1765.2188,348.4219 1764.5625,348.2344 Q1763.9063,348.0313 1763.1094,348.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="1777" y="357.932">GreedySearch</text></g><!--MD5=[354f0c4d58220a30e473fd49f423a34b]
class AStarSearch--><g id="elem_AStarSearch"><rect codeLine="58" fill="#F1F1F1" height="32" id="AStarSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="114" x="1909" y="336.5"/><ellipse cx="1924" cy="352.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1924.1094,348.0313 Q1923.1875,348.0313 1922.4531,348.3438 Q1921.7344,348.6563 1921.2344,349.25 Q1920.7344,349.8281 1920.4531,350.7031 Q1920.1875,351.5781 1920.1875,352.6719 Q1920.1875,354.1094 1920.625,355.1563 Q1921.0781,356.2031 1921.9219,356.75 Q1922.7813,357.2969 1924.0938,357.2969 Q1924.875,357.2969 1925.5625,357.1719 Q1926.2656,357.0313 1927.2656,356.7188 L1927.2656,358.5938 Q1926.4063,358.9219 1925.6406,359.0469 Q1924.8906,359.1719 1923.875,359.1719 Q1921.9531,359.1719 1920.6406,358.375 Q1919.3438,357.5625 1918.6875,356.0938 Q1918.0313,354.6094 1918.0313,352.6406 Q1918.0313,351.2188 1918.4219,350.0469 Q1918.8281,348.8594 1919.6094,347.9844 Q1920.3906,347.1094 1921.5313,346.6406 Q1922.6719,346.1563 1924.1406,346.1563 Q1925.0938,346.1563 1925.9844,346.3594 Q1926.8906,346.5469 1927.8281,347.0156 L1927,348.7969 Q1926.2188,348.4219 1925.5625,348.2344 Q1924.9063,348.0313 1924.1094,348.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1938" y="357.932">AStarSearch</text></g><!--MD5=[16d2df248585b4d1ff73328f8d648dbe]
reverse link Rule to BasicEdge--><g id="link_Rule_BasicEdge"><path codeLine="199" d="M1776.71,1735.96 C1678.12,1686.76 1537.54,1616.6 1445.79,1570.81 " fill="none" id="Rule-backto-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1780.9,1738.05,1774.6487,1730.4394,1776.4307,1735.8082,1771.0619,1737.5902,1780.9,1738.05" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1656" y="1677.897">Represents</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1767.0066" y="1730.9599">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1454.1058" y="1581.8007">0..n</text></g><!--MD5=[e894ca0edc3cfe44a3321e9c02df0dfb]
reverse link Problem to Rule--><g id="link_Problem_Rule"><path codeLine="200" d="M1922.84,1589.48 C1916.05,1632.86 1907.19,1689.52 1900.54,1732.04 " fill="none" id="Problem-backto-Rule" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1924.82,1576.81,1919.9386,1582.1177,1922.9606,1588.6651,1927.842,1583.3573,1924.82,1576.81" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="1911" y="1677.897">Has rules</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1911.6169" y="1598.1088">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1879.423" y="1720.3762">1..n</text></g><!--MD5=[35d72b0e928a4d3243c81e99bec60f94]
link BasicNode to BasicEdge--><g id="link_BasicNode_BasicEdge"><path codeLine="201" d="M1353,1288.86 C1353,1347.67 1353,1420.02 1353,1468.49 " fill="none" id="BasicNode-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1353,1473.36,1357,1464.36,1353,1468.36,1349,1464.36,1353,1473.36" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="63" x="1354" y="1353.897">Has target</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1345.1563" y="1311.4749">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1330.3266" y="1462.7816">0..n</text></g><!--MD5=[d037933e2bb3cbb487cc804950073d26]
link BasicNode to State--><g id="link_BasicNode_State"><path codeLine="202" d="M1635.73,1214.92 C1797.64,1237.89 2000.64,1281.89 2165,1366 C2196.16,1381.94 2226.04,1404.88 2251.99,1428.29 " fill="none" id="BasicNode-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2255.67,1431.64,2251.7116,1422.6216,2251.9742,1428.2724,2246.3234,1428.5349,2255.67,1431.64" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="56" x="2146" y="1353.897">Has state</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1644.0277" y="1212.7741">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="2242.201" y="1420.7643">1</text></g><!--MD5=[6129d246fa550a7af153a7c61078b1cf]
link TreeNode to TreeEdge--><g id="link_TreeNode_TreeEdge"><path codeLine="203" d="M709.08,967.99 C700.82,984.3 693.27,1002.32 689,1020 C675.78,1074.72 710.86,1136.77 732.11,1167.91 " fill="none" id="TreeNode-to-TreeEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="734.79,1171.76,732.9419,1162.0861,731.938,1167.6532,726.371,1166.6493,734.79,1171.76" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="66" x="690" y="1034.897">Has source</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="682.9233" y="989.7266">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="20" x="708.0441" y="1161.2946">0..1</text></g><!--MD5=[e6dbb7050ae1c78776710c057e065841]
link Tree to TreeNode--><g id="link_Tree_TreeNode"><path codeLine="204" d="M746.3,666.14 C730.3,697.55 713.1,737.16 705,775 C700.53,795.9 704.41,818.19 711.31,838.31 " fill="none" id="Tree-to-TreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="712.93,842.77,713.6398,832.9468,711.2339,838.0665,706.1142,835.6605,712.93,842.77" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="706" y="789.897">Has root</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="720.9213" y="689.0486">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="701.6917" y="832.1177">1</text></g><!--MD5=[8aff1c984766060b6a0542611b773bd2]
reverse link Tree to Search--><g id="link_Tree_Search"><path codeLine="205" d="M960.11,648.5 C1140.92,692.08 1428.08,761.76 1676,824 C1729.65,837.47 1788.37,852.53 1840.36,865.98 " fill="none" id="Tree-backto-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="955.47,647.38,963.2853,653.3734,960.3314,648.549,965.1558,645.5951,955.47,647.38" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="86" x="1556" y="789.897">Construct tree</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="962.1406" y="646.9772">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1824.9852" y="860.2355">1</text></g><!--MD5=[6417cd8e40404b725648120d051d6d1e]
link TreeEdge to BasicEdge--><g id="link_TreeEdge_BasicEdge"><path codeLine="206" d="M752.9,1204.89 C763.43,1229.72 787.72,1279.73 823,1309 C946.07,1411.13 1124.32,1469.3 1239.45,1498.37 " fill="none" id="TreeEdge-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1240.96,1491.53,1258.71,1503.1,1237.62,1505.13,1240.96,1491.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[da37ca0a4895273684b24df6daa84c4b]
link TreeNode to BasicNode--><g id="link_TreeNode_BasicNode"><path codeLine="207" d="M878.49,967.97 C949.14,1000.73 1038.35,1042.1 1120.29,1080.09 " fill="none" id="TreeNode-to-BasicNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1122.99,1073.63,1138.19,1088.4,1117.1,1086.33,1122.99,1073.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1e419efe75438c0f51d1d77eb23720a7]
link Tree to BasicStructure--><g id="link_Tree_BasicStructure"><path codeLine="208" d="M888.69,666.47 C973.86,714.69 1092.99,782.14 1182.85,833.01 " fill="none" id="Tree-to-BasicStructure" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1186.28,826.91,1200.24,842.86,1179.38,839.09,1186.28,826.91" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2cddfae00cfe97b27de237baec21b5ea]
link BacktrackingSearch to Search--><g id="link_BacktrackingSearch_Search"><path codeLine="209" d="M2245.1,405.26 C2208.43,484.07 2135.44,638.55 2068,767 C2057.93,786.19 2046.67,806.63 2035.91,825.74 " fill="none" id="BacktrackingSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2042.08,829.05,2026.13,842.99,2029.9,822.14,2042.08,829.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a814e840da8f50d0cfd0442e0a2aec90]
link UninformedSearch to Search--><g id="link_UninformedSearch_Search"><path codeLine="210" d="M2316.14,743.38 C2301.96,751.51 2287.83,759.45 2274,767 C2231.56,790.18 2184.64,813.77 2141.37,834.74 " fill="none" id="UninformedSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2144.53,840.99,2123.47,843.36,2138.45,828.37,2144.53,840.99" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bbbcf976ae8363dd9cd71c3c2b524997]
link InformedSearch to Search--><g id="link_InformedSearch_Search"><path codeLine="211" d="M1818.83,620.88 C1833.72,649.88 1867.43,714.45 1899,767 C1910.7,786.48 1923.87,807.12 1936.48,826.33 " fill="none" id="InformedSearch-to-Search" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1942.29,822.42,1947.5,842.96,1930.62,830.15,1942.29,822.42" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[68a0e67f6e3f9c8ace1bb9fbd3db5027]
link BreadthFirstSearch to UninformedSearch--><g id="link_BreadthFirstSearch_UninformedSearch"><path codeLine="212" d="M2717.4,368.76 C2704.3,385.99 2681.54,415.94 2656.58,448.8 " fill="none" id="BreadthFirstSearch-to-UninformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2662.36,452.76,2644.68,464.44,2651.21,444.28,2662.36,452.76" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8ae24da3adde662cd2542f7a4be60495]
link DepthFirstSearch to UninformedSearch--><g id="link_DepthFirstSearch_UninformedSearch"><path codeLine="213" d="M2539,368.76 C2539,385.21 2539,413.23 2539,444.31 " fill="none" id="DepthFirstSearch-to-UninformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2546,444.13,2539,464.13,2532,444.13,2546,444.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[77a59e362d90368c42e093a55d18e163]
reverse link InformedSearch to OrderedSearch--><g id="link_InformedSearch_OrderedSearch"><path codeLine="214" d="M1903.38,604.5 C1907.67,604.5 1911.95,604.5 1916.24,604.5 " fill="none" id="InformedSearch-backto-OrderedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1903.47,611.5,1883.47,604.5,1903.47,597.5,1903.47,611.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[32bd8cfccb2cecf468ff8cda7d159dee]
link GreedySearch to InformedSearch--><g id="link_GreedySearch_InformedSearch"><path codeLine="215" d="M1811,368.76 C1811,407.64 1811,511.25 1811,566.92 " fill="none" id="GreedySearch-to-InformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1818,566.61,1811,586.61,1804,566.61,1818,566.61" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7149672487d2764146d752e331edfc00]
link AStarSearch to InformedSearch--><g id="link_AStarSearch_InformedSearch"><path codeLine="216" d="M1956.54,368.76 C1932,408.34 1865.87,514.99 1831.85,569.87 " fill="none" id="AStarSearch-to-InformedSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1837.82,573.52,1821.33,586.83,1825.92,566.15,1837.82,573.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[883ff11a7e97d61180e482f89b1fb75a]
link WeightedTreeEdge to TreeEdge--><g id="link_WeightedTreeEdge_TreeEdge"><path codeLine="217" d="M331.91,935.67 C347.29,958.54 371.17,990.23 398,1012 C486.8,1084.04 609.92,1137.5 683.69,1165.63 " fill="none" id="WeightedTreeEdge-to-TreeEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="685.86,1158.96,702.15,1172.51,680.97,1172.08,685.86,1158.96" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f4e1fd54575900be46a4974447692a60]
link WeightedTreeNode to TreeNode--><g id="link_WeightedTreeNode_TreeNode"><path codeLine="218" d="M379.69,643.85 C393.2,679.66 417.7,732.61 454,767 C482.28,793.8 516.73,816.2 551.92,834.62 " fill="none" id="WeightedTreeNode-to-TreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="554.85,828.26,569.58,843.49,548.57,840.77,554.85,828.26" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fe785007cd4539747d41b01700702357]
link WeightedTree to Tree--><g id="link_WeightedTree_Tree"><path codeLine="219" d="M415.1,368.95 C464.46,400.59 579.8,474.52 667.89,530.99 " fill="none" id="WeightedTree-to-Tree" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="671.63,525.07,684.69,541.76,664.07,536.86,671.63,525.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c371594385a6d887c71bc4b8bf76aad1]
link OrderedTreeNode to WeightedTreeNode--><g id="link_OrderedTreeNode_WeightedTreeNode"><path codeLine="220" d="M296.09,169.4 C296.55,208.85 299.18,316.67 314,405 C322,452.68 336.38,505.51 348.15,544.67 " fill="none" id="OrderedTreeNode-to-WeightedTreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="354.82,542.56,354,563.73,341.44,546.67,354.82,542.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[99c1c6c2b7c68bbbc5d740b525953bb0]
link GreedyTreeNode to WeightedTreeNode--><g id="link_GreedyTreeNode_WeightedTreeNode"><path codeLine="221" d="M196.15,382.19 C215.63,404.66 243.06,436.89 266,466 C286.8,492.4 309,522.4 327.28,547.64 " fill="none" id="GreedyTreeNode-to-WeightedTreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="332.92,543.5,338.93,563.82,321.56,551.68,332.92,543.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8a74488e66e9ed4f799fcaea24239240]
link AStarTreeNode to WeightedTreeNode--><g id="link_AStarTreeNode_WeightedTreeNode"><path codeLine="222" d="M249.35,604.5 C253.75,604.5 258.15,604.5 262.54,604.5 " fill="none" id="AStarTreeNode-to-WeightedTreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="262.3,597.5,282.3,604.5,262.3,611.5,262.3,597.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ff425a338953511d10fa525b4922dde8]
link RiverBank to Item--><!--MD5=[bcbec08e18fdbcb78e78c15a6692f133]
link Outcome to RiverBank--><!--MD5=[920a0f520a6b4a5dbeb5d50e2ff9f258]
link UninformedSearch to Item--><!--MD5=[07f54075853fd479b64dbe7a730e9886]
link GreedySearch to AStarSearch--><!--MD5=[9bd93df30fbd98658f00fcb75c794a0d]
link AStarSearch to OrderedSearch--><!--MD5=[2a0dc31413142cd3597d4996351fac98]
link WeightedTree to WeightedTreeNode--><!--MD5=[94ee265be2fd6dfcf21f56233ef18b4d]
link AStarTreeNode to WeightedTreeEdge--><!--MD5=[fff64829743e9db4f3d34ef80193f30f]
@startuml

    ' Config
    hide empty members
    skinparam groupInheritance 2
    ' skinparam classAttributeIconSize 0
    ' left to right direction


    ' Pacotes

    package Definitions <<Rectangle>> {
        enum Item
        enum RiverBank
        struct Outcome
    }

    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package "Tree" as PK_Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree

            package "WeightedTree" as PK_WeightedTree <<Rectangle>> {
                class WeightedTreeEdge
                abstract class WeightedTreeNode
                abstract class WeightedTree
                class OrderedTreeNode
                class GreedyTreeNode
                class AStarTreeNode
            }
        }
    }

    package Searches <<Rectangle>> {
        abstract class Search

        package "UninformedSearch" as PK_UninformedSearch <<Rectangle>> {
        abstract class UninformedSearch
            class BacktrackingSearch
            class BreadthFirstSearch
            class DepthFirstSearch
        }

        package "InformedSearch" as PK_InformedSearch <<Rectangle>> {
            class InformedSearch
            class OrderedSearch
            class GreedySearch
            class AStarSearch
        }
    }


    ' Definições

    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }


    ' Classes

    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        #addTargetEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +connectTargetEdges(targetEdges: BasicEdge[]): void
        +{abstract}checkIfThereIsLoop(state: State): boolean
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode, sortingFunction: Function): BasicEdge[]
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
        #addSourceEdge(sourceNode: TreeNode, rule: Rule): TreeEdge | null
        +checkIfThereIsLoop(state: State): boolean
        +checkIfTransitionAlreadyExists(rule: Rule): boolean
    }

    class Tree {
        -root: TreeNode
        +createNextValidTransition(node: TreeNode, \nsortingFunction: Function): TreeEdge | null
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }

    class WeightedTreeEdge {
        -weight: number
    }

    abstract class WeightedTreeNode {
        +getWeight(): number
        {abstract}+getValue(): number
    }

    class GreedyTreeNode {
        -getHeuristic(): number
    }

    class AStarTreeNode {
        -getHeuristic(): number
    }

    abstract class Search {
        #tree: Tree
        +{static}getAlgorithmName(): string
        +{static}getSafeAlgorithmName(): string
        +{abstract}search(maxIterations?: number): TreeEdge[]
    }

    class BacktrackingSearch {
        {field}-sortingFunction: (Rule, Rule) => number
        -doBacktracking(startNode: TreeNode): \n{foundNode: TreeNode, isSolution: boolean}
    }

    abstract class UninformedSearch {
        #currentNode: TreeNode
        -openNodes: TreeNode[]
        -closedNodes: TreeNode[]
        {field}-sortingFunction: (TreeEdge, TreeEdge) => number
        {abstract}+getCurrentNode(): TreeNode
        -doIteration(): TreeEdge[] | null
    }

    abstract class UninformedSearch {
        -currentNode: WeightedTreeNode
        -openEdges: WeightedTreeEdge[]
        -closedNodes: WeightedTreeNode[]
        {field}-sortingFunction: (WeightedTreeEdge, WeightedTreeEdge) => number
        #updateCurrentNode(): void
        -doIteration(currentNode: WeightedTreeNode): WeightedTreeEdge[] | null
    }


    ' Relacionamentos

    Rule "1" <- - "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule : Has rules
    BasicNode "1" - -> "0..n" BasicEdge : Has target
    BasicNode "1" - -> "1" State : Has state
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    Tree "1" <- - "1" Search : Construct tree
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure
    BacktrackingSearch - -|> Search
    UninformedSearch - -|> Search
    InformedSearch - -|> Search
    BreadthFirstSearch - -|> UninformedSearch
    DepthFirstSearch - -|> UninformedSearch
    OrderedSearch -l-|> InformedSearch
    GreedySearch -d-|> InformedSearch
    AStarSearch -do-|> InformedSearch
    WeightedTreeEdge - -|> TreeEdge
    WeightedTreeNode - -|> TreeNode
    WeightedTree - -|> Tree
    OrderedTreeNode - - -|> WeightedTreeNode
    GreedyTreeNode - -|> WeightedTreeNode
    AStarTreeNode -|> WeightedTreeNode

    Item -[hidden]left- RiverBank
    RiverBank -[hidden]left- Outcome
    UninformedSearch - -[hidden]down-> Item
    GreedySearch -[hidden]r- AStarSearch
    AStarSearch -[hidden]d- OrderedSearch
    WeightedTree -[hidden]d- WeightedTreeNode
    AStarTreeNode -[hidden]d- WeightedTreeEdge
    ' WeightedTreeNode - - WeightedTreeEdge
    ' OrderedTreeNode - - GreedyTreeNode
    ' GreedyTreeNode - - AStarTreeNode


@enduml

@startuml

    hide empty members
    skinparam groupInheritance 2



    package Definitions <<Rectangle>> {
        enum Item
        enum RiverBank
        struct Outcome
    }

    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package "Tree" as PK_Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree

            package "WeightedTree" as PK_WeightedTree <<Rectangle>> {
                class WeightedTreeEdge
                abstract class WeightedTreeNode
                abstract class WeightedTree
                class OrderedTreeNode
                class GreedyTreeNode
                class AStarTreeNode
            }
        }
    }

    package Searches <<Rectangle>> {
        abstract class Search

        package "UninformedSearch" as PK_UninformedSearch <<Rectangle>> {
        abstract class UninformedSearch
            class BacktrackingSearch
            class BreadthFirstSearch
            class DepthFirstSearch
        }

        package "InformedSearch" as PK_InformedSearch <<Rectangle>> {
            class InformedSearch
            class OrderedSearch
            class GreedySearch
            class AStarSearch
        }
    }



    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }



    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        #addTargetEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule, connect: boolean): BasicEdge
        +connectTargetEdges(targetEdges: BasicEdge[]): void
        +{abstract}checkIfThereIsLoop(state: State): boolean
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode, sortingFunction: Function): BasicEdge[]
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
        #addSourceEdge(sourceNode: TreeNode, rule: Rule): TreeEdge | null
        +checkIfThereIsLoop(state: State): boolean
        +checkIfTransitionAlreadyExists(rule: Rule): boolean
    }

    class Tree {
        -root: TreeNode
        +createNextValidTransition(node: TreeNode, \nsortingFunction: Function): TreeEdge | null
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }

    class WeightedTreeEdge {
        -weight: number
    }

    abstract class WeightedTreeNode {
        +getWeight(): number
        {abstract}+getValue(): number
    }

    class GreedyTreeNode {
        -getHeuristic(): number
    }

    class AStarTreeNode {
        -getHeuristic(): number
    }

    abstract class Search {
        #tree: Tree
        +{static}getAlgorithmName(): string
        +{static}getSafeAlgorithmName(): string
        +{abstract}search(maxIterations?: number): TreeEdge[]
    }

    class BacktrackingSearch {
        {field}-sortingFunction: (Rule, Rule) => number
        -doBacktracking(startNode: TreeNode): \n{foundNode: TreeNode, isSolution: boolean}
    }

    abstract class UninformedSearch {
        #currentNode: TreeNode
        -openNodes: TreeNode[]
        -closedNodes: TreeNode[]
        {field}-sortingFunction: (TreeEdge, TreeEdge) => number
        {abstract}+getCurrentNode(): TreeNode
        -doIteration(): TreeEdge[] | null
    }

    abstract class UninformedSearch {
        -currentNode: WeightedTreeNode
        -openEdges: WeightedTreeEdge[]
        -closedNodes: WeightedTreeNode[]
        {field}-sortingFunction: (WeightedTreeEdge, WeightedTreeEdge) => number
        #updateCurrentNode(): void
        -doIteration(currentNode: WeightedTreeNode): WeightedTreeEdge[] | null
    }



    Rule "1" <- - "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule : Has rules
    BasicNode "1" - -> "0..n" BasicEdge : Has target
    BasicNode "1" - -> "1" State : Has state
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    Tree "1" <- - "1" Search : Construct tree
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure
    BacktrackingSearch - -|> Search
    UninformedSearch - -|> Search
    InformedSearch - -|> Search
    BreadthFirstSearch - -|> UninformedSearch
    DepthFirstSearch - -|> UninformedSearch
    OrderedSearch -l-|> InformedSearch
    GreedySearch -d-|> InformedSearch
    AStarSearch -do-|> InformedSearch
    WeightedTreeEdge - -|> TreeEdge
    WeightedTreeNode - -|> TreeNode
    WeightedTree - -|> Tree
    OrderedTreeNode - - -|> WeightedTreeNode
    GreedyTreeNode - -|> WeightedTreeNode
    AStarTreeNode -|> WeightedTreeNode

    Item -[hidden]left- RiverBank
    RiverBank -[hidden]left- Outcome
    UninformedSearch - -[hidden]down-> Item
    GreedySearch -[hidden]r- AStarSearch
    AStarSearch -[hidden]d- OrderedSearch
    WeightedTree -[hidden]d- WeightedTreeNode
    AStarTreeNode -[hidden]d- WeightedTreeEdge


@enduml

PlantUML version 1.2022.7(Mon Aug 22 14:01:30 BRT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>