<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1347px" preserveAspectRatio="none" style="width:1867px;height:1347px;background:#FFFFFF;" version="1.1" viewBox="0 0 1867 1347" width="1867px" zoomAndPan="magnify"><defs/><g><!--MD5=[121a8bf1197281ab89ed693fab589f94]
cluster Domain--><g id="cluster_Domain"><rect fill="none" height="518" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="810" x="1051" y="823"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="54.625" x="1428.6875" y="839.9659">Domain</text></g><!--MD5=[63e5b7017781b3ad047b9a41bfb8f6f6]
cluster Structure--><g id="cluster_Structure"><rect fill="none" height="1057" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1012" x="7" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="66.9375" x="479.5313" y="23.9659">Structure</text></g><!--MD5=[8ee15c9c7f74a23967f61be6b3f197f4]
cluster Tree--><g id="cluster_Tree"><rect fill="none" height="638.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="428" x="39" y="61"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="31.75" x="237.125" y="77.9659">Tree</text></g><!--MD5=[4cf87534c235239d37db4adfd136fff4]
class Rule--><g id="elem_Rule"><rect codeLine="54" fill="#F1F1F1" height="124.2717" id="Rule" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="1133" y="1181"/><ellipse cx="1222.75" cy="1197" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1222.8594,1192.5313 Q1221.9375,1192.5313 1221.2031,1192.8438 Q1220.4844,1193.1563 1219.9844,1193.75 Q1219.4844,1194.3281 1219.2031,1195.2031 Q1218.9375,1196.0781 1218.9375,1197.1719 Q1218.9375,1198.6094 1219.375,1199.6563 Q1219.8281,1200.7031 1220.6719,1201.25 Q1221.5313,1201.7969 1222.8438,1201.7969 Q1223.625,1201.7969 1224.3125,1201.6719 Q1225.0156,1201.5313 1226.0156,1201.2188 L1226.0156,1203.0938 Q1225.1563,1203.4219 1224.3906,1203.5469 Q1223.6406,1203.6719 1222.625,1203.6719 Q1220.7031,1203.6719 1219.3906,1202.875 Q1218.0938,1202.0625 1217.4375,1200.5938 Q1216.7813,1199.1094 1216.7813,1197.1406 Q1216.7813,1195.7188 1217.1719,1194.5469 Q1217.5781,1193.3594 1218.3594,1192.4844 Q1219.1406,1191.6094 1220.2813,1191.1406 Q1221.4219,1190.6563 1222.8906,1190.6563 Q1223.8438,1190.6563 1224.7344,1190.8594 Q1225.6406,1191.0469 1226.5781,1191.5156 L1225.75,1193.2969 Q1224.9688,1192.9219 1224.3125,1192.7344 Q1223.6563,1192.5313 1222.8594,1192.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1243.25" y="1202.432">Rule</text><line style="stroke:#181818;stroke-width:0.5;" x1="1134" x2="1350" y1="1213" y2="1213"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1141" y="1225.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1153" y="1231.9659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1141" y="1244.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="1153" y="1251.0339">travellingPeople: Item[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1134" x2="1350" y1="1259.1358" y2="1259.1358"/><ellipse cx="1144" cy="1274.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1153" y="1278.1018">getElapsedTime(): number</text><ellipse cx="1144" cy="1293.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="1153" y="1297.1697">transpose(state: State): State</text></g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="61" fill="#F1F1F1" height="181.4754" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="263" x="1558" y="881.5"/><ellipse cx="1668.25" cy="897.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1668.3594,893.0313 Q1667.4375,893.0313 1666.7031,893.3438 Q1665.9844,893.6563 1665.4844,894.25 Q1664.9844,894.8281 1664.7031,895.7031 Q1664.4375,896.5781 1664.4375,897.6719 Q1664.4375,899.1094 1664.875,900.1563 Q1665.3281,901.2031 1666.1719,901.75 Q1667.0313,902.2969 1668.3438,902.2969 Q1669.125,902.2969 1669.8125,902.1719 Q1670.5156,902.0313 1671.5156,901.7188 L1671.5156,903.5938 Q1670.6563,903.9219 1669.8906,904.0469 Q1669.1406,904.1719 1668.125,904.1719 Q1666.2031,904.1719 1664.8906,903.375 Q1663.5938,902.5625 1662.9375,901.0938 Q1662.2813,899.6094 1662.2813,897.6406 Q1662.2813,896.2188 1662.6719,895.0469 Q1663.0781,893.8594 1663.8594,892.9844 Q1664.6406,892.1094 1665.7813,891.6406 Q1666.9219,891.1563 1668.3906,891.1563 Q1669.3438,891.1563 1670.2344,891.3594 Q1671.1406,891.5469 1672.0781,892.0156 L1671.25,893.7969 Q1670.4688,893.4219 1669.8125,893.2344 Q1669.1563,893.0313 1668.3594,893.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="1688.75" y="902.932">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="1559" x2="1820" y1="913.5" y2="913.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1566" y="925.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1578" y="932.4659">initialRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1566" y="944.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1578" y="951.5339">finalRiverBank: Item[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1566" y="963.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="1578" y="970.6018">remainingTime: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="1559" x2="1820" y1="978.7038" y2="978.7038"/><ellipse cx="1569" cy="993.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1578" y="997.6697">getValidRules(): Rule[]</text><ellipse cx="1569" cy="1012.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1578" y="1016.7376">getOutcome(): Outcome</text><ellipse cx="1569" cy="1031.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="1578" y="1035.8055">equalByItems(state: State): boolean</text><ellipse cx="1569" cy="1050.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="1578" y="1054.8734">getLampPosition(): RiverBank</text></g><!--MD5=[08770b5ff02271603200ffd0f930842d]
class Problem--><g id="elem_Problem"><rect codeLine="71" fill="#F1F1F1" height="105.2038" id="Problem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="383" x="1092" y="919.5"/><ellipse cx="1251.25" cy="935.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1251.3594,931.0313 Q1250.4375,931.0313 1249.7031,931.3438 Q1248.9844,931.6563 1248.4844,932.25 Q1247.9844,932.8281 1247.7031,933.7031 Q1247.4375,934.5781 1247.4375,935.6719 Q1247.4375,937.1094 1247.875,938.1563 Q1248.3281,939.2031 1249.1719,939.75 Q1250.0313,940.2969 1251.3438,940.2969 Q1252.125,940.2969 1252.8125,940.1719 Q1253.5156,940.0313 1254.5156,939.7188 L1254.5156,941.5938 Q1253.6563,941.9219 1252.8906,942.0469 Q1252.1406,942.1719 1251.125,942.1719 Q1249.2031,942.1719 1247.8906,941.375 Q1246.5938,940.5625 1245.9375,939.0938 Q1245.2813,937.6094 1245.2813,935.6406 Q1245.2813,934.2188 1245.6719,933.0469 Q1246.0781,931.8594 1246.8594,930.9844 Q1247.6406,930.1094 1248.7813,929.6406 Q1249.9219,929.1563 1251.3906,929.1563 Q1252.3438,929.1563 1253.2344,929.3594 Q1254.1406,929.5469 1255.0781,930.0156 L1254.25,931.7969 Q1253.4688,931.4219 1252.8125,931.2344 Q1252.1563,931.0313 1251.3594,931.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1271.75" y="940.932">Problem</text><line style="stroke:#181818;stroke-width:0.5;" x1="1093" x2="1474" y1="951.5" y2="951.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1100" y="963.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="82" x="1112" y="970.4659">rules: Rule[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1093" x2="1474" y1="978.5679" y2="978.5679"/><ellipse cx="1103" cy="993.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="357" x="1112" y="997.5339">getRule(firstPerson: Item, secondPerson?: Item): Rule</text><ellipse cx="1103" cy="1012.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="211" x="1112" y="1016.6018">isSolution(state: State): boolean</text></g><!--MD5=[b6822c04d2a4e38de2312ac23c188825]
class BasicEdge--><g id="elem_BasicEdge"><rect codeLine="77" fill="#F1F1F1" height="97.2038" id="BasicEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="643" y="923.5"/><ellipse cx="700.75" cy="939.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M704.0938,944.75 L702.625,941 L698.1875,941 L696.75,944.75 L694.625,944.75 L699.5781,932.0313 L701.3281,932.0313 L706.25,944.75 L704.0938,944.75 Z M700.75,935.7969 Q700.7031,935.6406 700.5781,935.2813 Q700.4531,934.9219 700.3438,934.5469 Q700.2344,934.1563 700.4375,934.0938 Q700.5938,934.2813 700.5,934.6406 Q700.4063,934.9844 700.3125,935.2813 Q700.2188,935.5625 700.1406,935.7969 L698.9063,939.1094 L701.9844,939.1094 L700.75,935.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="62" x="721.25" y="944.932">BasicEdge</text><line style="stroke:#181818;stroke-width:0.5;" x1="644" x2="828" y1="955.5" y2="955.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="651" y="967.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="663" y="974.4659">sourceNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="651" y="986.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="663" y="993.5339">targetNode: BasicNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="651" y="1005.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="663" y="1012.6018">rule: Rule</text></g><!--MD5=[991089839fde95c2276dcf2721646821]
class BasicNode--><g id="elem_BasicNode"><rect codeLine="83" fill="#F1F1F1" height="181.4754" id="BasicNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="455" x="508" y="557.5"/><ellipse cx="698.75" cy="573.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M702.0938,578.75 L700.625,575 L696.1875,575 L694.75,578.75 L692.625,578.75 L697.5781,566.0313 L699.3281,566.0313 L704.25,578.75 L702.0938,578.75 Z M698.75,569.7969 Q698.7031,569.6406 698.5781,569.2813 Q698.4531,568.9219 698.3438,568.5469 Q698.2344,568.1563 698.4375,568.0938 Q698.5938,568.2813 698.5,568.6406 Q698.4063,568.9844 698.3125,569.2813 Q698.2188,569.5625 698.1406,569.7969 L696.9063,573.1094 L699.9844,573.1094 L698.75,569.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="65" x="719.25" y="578.932">BasicNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="509" x2="962" y1="589.5" y2="589.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="516" y="601.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="528" y="608.4659">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="516" y="620.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="528" y="627.5339">state: State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="516" y="639.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="528" y="646.6018">targetEdges: BasicEdge[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="509" x2="962" y1="654.7038" y2="654.7038"/><polygon fill="#FFFF44" points="519,664.7377,523,668.7377,519,672.7377,515,668.7377" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="429" x="528" y="673.6697">addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="516" y="685.8056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="418" x="528" y="692.7376">addTargetEdge(targetNode: BasicNode, rule: Rule): BasicEdge</text><ellipse cx="519" cy="707.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="528" y="711.8055">addEdge(targetNode: BasicNode, rule: Rule): BasicEdge</text><ellipse cx="519" cy="726.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="258" x="528" y="730.8734">checkIfThereIsLoop(state: State): boolean</text></g><!--MD5=[2a3c70e0e60fdc5bec87fc3bba3491c5]
class BasicStructure--><g id="elem_BasicStructure"><rect codeLine="93" fill="#F1F1F1" height="143.3396" id="BasicStructure" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="357" x="484.5" y="309.5"/><ellipse cx="613.75" cy="325.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M617.0938,330.75 L615.625,327 L611.1875,327 L609.75,330.75 L607.625,330.75 L612.5781,318.0313 L614.3281,318.0313 L619.25,330.75 L617.0938,330.75 Z M613.75,321.7969 Q613.7031,321.6406 613.5781,321.2813 Q613.4531,320.9219 613.3438,320.5469 Q613.2344,320.1563 613.4375,320.0938 Q613.5938,320.2813 613.5,320.6406 Q613.4063,320.9844 613.3125,321.2813 Q613.2188,321.5625 613.1406,321.7969 L611.9063,325.1094 L614.9844,325.1094 L613.75,321.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="90" x="634.25" y="330.932">BasicStructure</text><line style="stroke:#181818;stroke-width:0.5;" x1="485.5" x2="840.5" y1="341.5" y2="341.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="492.5" y="353.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="504.5" y="360.4659">nextNodeId: number</text><line style="stroke:#181818;stroke-width:0.5;" x1="485.5" x2="840.5" y1="368.5679" y2="368.5679"/><polygon fill="#FFFF44" points="495.5,378.6019,499.5,382.6019,495.5,386.6019,491.5,382.6019" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="330" x="504.5" y="387.5339">instantiateNode(id: number, state: State): BasicNode</text><polygon fill="#FFFF44" points="495.5,397.6698,499.5,401.6698,495.5,405.6698,491.5,401.6698" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="504.5" y="406.6018">createNode(state: State): BasicNode</text><ellipse cx="495.5" cy="421.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="331" x="504.5" y="425.6697">createValidTransitions(node: BasicNode): BasicEdge[]</text><ellipse cx="495.5" cy="440.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="504.5" y="444.7376">exportToDot(): string</text></g><!--MD5=[0fe71ee5d44d03bcbd1815cd1a526ec5]
class TreeEdge--><g id="elem_TreeEdge"><rect codeLine="101" fill="#F1F1F1" height="32" id="TreeEdge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="313" y="631.5"/><ellipse cx="328" cy="647.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M328.1094,643.0313 Q327.1875,643.0313 326.4531,643.3438 Q325.7344,643.6563 325.2344,644.25 Q324.7344,644.8281 324.4531,645.7031 Q324.1875,646.5781 324.1875,647.6719 Q324.1875,649.1094 324.625,650.1563 Q325.0781,651.2031 325.9219,651.75 Q326.7813,652.2969 328.0938,652.2969 Q328.875,652.2969 329.5625,652.1719 Q330.2656,652.0313 331.2656,651.7188 L331.2656,653.5938 Q330.4063,653.9219 329.6406,654.0469 Q328.8906,654.1719 327.875,654.1719 Q325.9531,654.1719 324.6406,653.375 Q323.3438,652.5625 322.6875,651.0938 Q322.0313,649.6094 322.0313,647.6406 Q322.0313,646.2188 322.4219,645.0469 Q322.8281,643.8594 323.6094,642.9844 Q324.3906,642.1094 325.5313,641.6406 Q326.6719,641.1563 328.1406,641.1563 Q329.0938,641.1563 329.9844,641.3594 Q330.8906,641.5469 331.8281,642.0156 L331,643.7969 Q330.2188,643.4219 329.5625,643.2344 Q328.9063,643.0313 328.1094,643.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="342" y="652.932">TreeEdge</text></g><!--MD5=[8c9078384c8216faeee668eb33da04e9]
class TreeNode--><g id="elem_TreeNode"><rect codeLine="103" fill="#F1F1F1" height="59.0679" id="TreeNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="207" y="352"/><ellipse cx="279.25" cy="368" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M279.3594,363.5313 Q278.4375,363.5313 277.7031,363.8438 Q276.9844,364.1563 276.4844,364.75 Q275.9844,365.3281 275.7031,366.2031 Q275.4375,367.0781 275.4375,368.1719 Q275.4375,369.6094 275.875,370.6563 Q276.3281,371.7031 277.1719,372.25 Q278.0313,372.7969 279.3438,372.7969 Q280.125,372.7969 280.8125,372.6719 Q281.5156,372.5313 282.5156,372.2188 L282.5156,374.0938 Q281.6563,374.4219 280.8906,374.5469 Q280.1406,374.6719 279.125,374.6719 Q277.2031,374.6719 275.8906,373.875 Q274.5938,373.0625 273.9375,371.5938 Q273.2813,370.1094 273.2813,368.1406 Q273.2813,366.7188 273.6719,365.5469 Q274.0781,364.3594 274.8594,363.4844 Q275.6406,362.6094 276.7813,362.1406 Q277.9219,361.6563 279.3906,361.6563 Q280.3438,361.6563 281.2344,361.8594 Q282.1406,362.0469 283.0781,362.5156 L282.25,364.2969 Q281.4688,363.9219 280.8125,363.7344 Q280.1563,363.5313 279.3594,363.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="299.75" y="373.432">TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="208" x2="425" y1="384" y2="384"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="215" y="396.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="227" y="402.9659">sourceEdge: TreeEdge | null</text></g><!--MD5=[bb7f1c801adcc1c297b2d9190618259c]
class Tree--><g id="elem_Tree"><rect codeLine="107" fill="#F1F1F1" height="86.1358" id="Tree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="80" y="119"/><ellipse cx="234.25" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M234.3594,130.5313 Q233.4375,130.5313 232.7031,130.8438 Q231.9844,131.1563 231.4844,131.75 Q230.9844,132.3281 230.7031,133.2031 Q230.4375,134.0781 230.4375,135.1719 Q230.4375,136.6094 230.875,137.6563 Q231.3281,138.7031 232.1719,139.25 Q233.0313,139.7969 234.3438,139.7969 Q235.125,139.7969 235.8125,139.6719 Q236.5156,139.5313 237.5156,139.2188 L237.5156,141.0938 Q236.6563,141.4219 235.8906,141.5469 Q235.1406,141.6719 234.125,141.6719 Q232.2031,141.6719 230.8906,140.875 Q229.5938,140.0625 228.9375,138.5938 Q228.2813,137.1094 228.2813,135.1406 Q228.2813,133.7188 228.6719,132.5469 Q229.0781,131.3594 229.8594,130.4844 Q230.6406,129.6094 231.7813,129.1406 Q232.9219,128.6563 234.3906,128.6563 Q235.3438,128.6563 236.2344,128.8594 Q237.1406,129.0469 238.0781,129.5156 L237.25,131.2969 Q236.4688,130.9219 235.8125,130.7344 Q235.1563,130.5313 234.3594,130.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="254.75" y="140.432">Tree</text><line style="stroke:#181818;stroke-width:0.5;" x1="81" x2="426" y1="151" y2="151"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="88" y="163.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="100" y="169.9659">rootNode: TreeNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="81" x2="426" y1="178.0679" y2="178.0679"/><ellipse cx="91" cy="193.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="321" x="100" y="197.0339">getAscendingPath(node: TreeNode): TreeEdge[]</text></g><!--MD5=[44a1b4afaef76c16e6c9ec4990ad0c8d]
class Item--><g id="elem_Item"><rect codeLine="10" fill="#F1F1F1" height="154.4075" id="Item" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="87" x="1177.5" y="304"/><ellipse cx="1203.3" cy="320" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1206.7688,326.5 L1199.4563,326.5 L1199.4563,313.8281 L1206.7688,313.8281 L1206.7688,315.7031 L1201.5031,315.7031 L1201.5031,318.9688 L1206.4563,318.9688 L1206.4563,320.8281 L1201.5031,320.8281 L1201.5031,324.625 L1206.7688,324.625 L1206.7688,326.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="31" x="1219.7" y="325.432">Item</text><line style="stroke:#181818;stroke-width:0.5;" x1="1178.5" x2="1263.5" y1="336" y2="336"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="1183.5" y="354.9659">Lamp = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="1183.5" y="374.0339">Athlete = 1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="1183.5" y="393.1018">Boy = 3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1183.5" y="412.1697">Lord = 6</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1183.5" y="431.2376">Woman = 8</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="1183.5" y="450.3055">Lady = 12</text></g><!--MD5=[818f33120a12cf26bd14afdff251130b]
class RiverBank--><g id="elem_RiverBank"><rect codeLine="19" fill="#F1F1F1" height="78.1358" id="RiverBank" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="1043.5" y="342"/><ellipse cx="1058.5" cy="358" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1061.9688,364.5 L1054.6563,364.5 L1054.6563,351.8281 L1061.9688,351.8281 L1061.9688,353.7031 L1056.7031,353.7031 L1056.7031,356.9688 L1061.6563,356.9688 L1061.6563,358.8281 L1056.7031,358.8281 L1056.7031,362.625 L1061.9688,362.625 L1061.9688,364.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="1072.5" y="363.432">RiverBank</text><line style="stroke:#181818;stroke-width:0.5;" x1="1044.5" x2="1141.5" y1="374" y2="374"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="1049.5" y="392.9659">Initial</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1049.5" y="412.0339">Final</text></g><!--MD5=[651984b30145f63e53adab6e7e9bc4b7]
class Outcome--><g id="elem_Outcome"><rect codeLine="24" fill="#F1F1F1" height="78.1358" id="Outcome" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="1299.5" y="342"/><ellipse cx="1337.9" cy="358" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1342.4625,360.9844 Q1342.4625,362.1563 1341.8844,362.9844 Q1341.3219,363.8125 1340.275,364.25 Q1339.2438,364.6719 1337.8688,364.6719 Q1337.1656,364.6719 1336.525,364.5938 Q1335.9,364.5313 1335.3688,364.4063 Q1334.8375,364.2656 1334.2594,364 L1334.2594,361.9531 Q1335.2438,362.3906 1336.1188,362.6094 Q1336.9938,362.8125 1337.9313,362.8125 Q1338.7906,362.8125 1339.3375,362.6094 Q1339.8844,362.3906 1340.1344,362.0156 Q1340.4,361.6406 1340.4,361.125 Q1340.4,360.6094 1340.1813,360.2656 Q1339.9781,359.9219 1339.3844,359.5938 Q1338.8063,359.2656 1337.7125,358.875 Q1336.9156,358.5625 1336.2906,358.2344 Q1335.6813,357.8906 1335.2594,357.4375 Q1334.8375,356.9688 1334.6188,356.375 Q1334.4156,355.7813 1334.4156,355.0156 Q1334.4156,353.9688 1334.9469,353.2188 Q1335.4938,352.4531 1336.4313,352.0625 Q1337.3688,351.6563 1338.5563,351.6563 Q1339.6031,351.6563 1340.4469,351.8594 Q1341.3063,352.0469 1342.2438,352.4688 L1341.5875,354.2813 Q1340.7125,353.8906 1339.9938,353.7188 Q1339.2906,353.5313 1338.525,353.5313 Q1337.8219,353.5313 1337.3688,353.7344 Q1336.9313,353.9219 1336.7125,354.2656 Q1336.4938,354.5938 1336.4938,355.0313 Q1336.4938,355.5781 1336.7125,355.9219 Q1336.9313,356.2656 1337.4625,356.5781 Q1338.0094,356.875 1338.9781,357.2344 Q1340.0719,357.6406 1340.8375,358.125 Q1341.6188,358.5938 1342.0406,359.2813 Q1342.4625,359.9531 1342.4625,360.9844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="1357.1" y="363.432">Outcome</text><line style="stroke:#181818;stroke-width:0.5;" x1="1300.5" x2="1443.5" y1="374" y2="374"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1305.5" y="392.9659">isTerminal: boolean</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="1305.5" y="412.0339">win: boolean</text></g><!--MD5=[68cbb797e13e28fad43505a075e340b3]
link Rule to BasicEdge--><g id="link_Rule_BasicEdge"><path codeLine="115" d="M1133.43,1184.39 C1043.16,1136.49 916.01,1069.02 830.03,1023.4 " fill="none" id="Rule-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="825.76,1021.13,831.8345,1028.8825,830.1765,1023.474,835.5849,1021.8161,825.76,1021.13" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1020" y="1126.897">Represents</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1117.8496" y="1176.1655">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="837.5244" y="1034.8919">0..n</text></g><!--MD5=[e894ca0edc3cfe44a3321e9c02df0dfb]
reverse link Problem to Rule--><g id="link_Problem_Rule"><path codeLine="116" d="M1273.84,1038.48 C1267.05,1081.86 1258.19,1138.52 1251.54,1181.04 " fill="none" id="Problem-backto-Rule" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1275.82,1025.81,1270.9386,1031.1177,1273.9606,1037.6651,1278.842,1032.3573,1275.82,1025.81" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1262.6169" y="1047.1088">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1230.423" y="1169.3762">1..n</text></g><!--MD5=[35d72b0e928a4d3243c81e99bec60f94]
link BasicNode to BasicEdge--><g id="link_BasicNode_BasicEdge"><path codeLine="117" d="M736,738.34 C736,795.71 736,868.48 736,917.34 " fill="none" id="BasicNode-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="736,922.25,740,913.25,736,917.25,732,913.25,736,922.25" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="737" y="802.897">Has Target</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="728.0438" y="761.3603">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="713.3266" y="911.6657">0..n</text></g><!--MD5=[d037933e2bb3cbb487cc804950073d26]
link BasicNode to State--><g id="link_BasicNode_State"><path codeLine="118" d="M962.77,666.24 C1124.26,685.47 1342.51,726.7 1516,815 C1547.19,830.87 1577.09,853.78 1603.04,877.2 " fill="none" id="BasicNode-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1606.72,880.56,1602.7616,871.5416,1603.0242,877.1924,1597.3734,877.4549,1606.72,880.56" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="1497" y="802.897">Has State</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="970.8045" y="663.7992">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1593.2554" y="869.6772">1</text></g><!--MD5=[6129d246fa550a7af153a7c61078b1cf]
link TreeNode to TreeEdge--><g id="link_TreeNode_TreeEdge"><path codeLine="119" d="M302.99,410.62 C292.02,435.78 279.87,473.94 288,507 C299.27,552.85 328.56,600.33 346.43,626.37 " fill="none" id="TreeNode-to-TreeEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="349.19,630.35,347.3419,620.6761,346.338,626.2432,340.771,625.2393,349.19,630.35" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="66" x="289" y="502.897">Has source</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="275.1528" y="433.1673">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="20" x="322.3384" y="619.616">0..1</text></g><!--MD5=[e6dbb7050ae1c78776710c057e065841]
link Tree to TreeNode--><g id="link_Tree_TreeNode"><path codeLine="120" d="M240.9,204.92 C236.34,226.04 233.92,251.82 241,274 C249.75,301.42 268.36,327.82 284.98,347.55 " fill="none" id="Tree-to-TreeNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="288.17,351.26,285.3499,341.8235,284.916,347.4637,279.2759,347.0299,288.17,351.26" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="242" y="269.897">Has root</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="222.0263" y="227.412">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="274.6303" y="340.2222">1</text></g><!--MD5=[6417cd8e40404b725648120d051d6d1e]
link TreeEdge to BasicEdge--><g id="link_TreeEdge_BasicEdge"><path codeLine="121" d="M368.96,663.14 C381.49,685.32 407.42,728.02 437,758 C496.3,818.1 574.22,873.13 635.65,912.26 " fill="none" id="TreeEdge-to-BasicEdge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="639.24,906.26,652.45,922.83,631.79,918.11,639.24,906.26" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[da37ca0a4895273684b24df6daa84c4b]
link TreeNode to BasicNode--><g id="link_TreeNode_BasicNode"><path codeLine="122" d="M361.05,410.81 C411.92,442.92 498.54,497.6 575.71,546.32 " fill="none" id="TreeNode-to-BasicNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="579.1,540.18,592.27,556.77,571.63,552.01,579.1,540.18" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1e419efe75438c0f51d1d77eb23720a7]
link Tree to BasicStructure--><g id="link_Tree_BasicStructure"><path codeLine="123" d="M332.86,204.84 C383.13,231.51 449.95,266.96 510.32,298.99 " fill="none" id="Tree-to-BasicStructure" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="513.51,292.76,527.9,308.32,506.95,305.13,513.51,292.76" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7a72719a63f27394cd91229b024a483e]
link Structure to RiverBank--><!--MD5=[ff425a338953511d10fa525b4922dde8]
link RiverBank to Item--><!--MD5=[023dec70d9c7948c1262beb181bb592a]
link Item to Outcome--><!--MD5=[820a71e0c80ffbe86cc15ef22c4f61ff]
@startuml

    ' Config
    hide empty members
    ' skinparam classAttributeIconSize 0
    ' left to right direction


    ' Definições

    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }


    ' Pacotes

    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree
        }

    }


    ' Classes

    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        -addTargetEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +{abstract}checkIfThereIsLoop(state: State): boolean
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode): BasicEdge[]
        +{abstract}exportToDot(): string
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
    }

    class Tree {
        -rootNode: TreeNode
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }


    ' Relacionamentos

    Rule "1" - -> "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule
    BasicNode "1" - -> "0..n" BasicEdge : Has Target
    BasicNode "1" - -> "1" State : Has State
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure

    Structure -[hidden]down-> RiverBank
    RiverBank -[hidden]right-> Item
    Item -[hidden]right-> Outcome

    ' Funcionario -[hidden]-> Falha
    ' Cargo -right[hidden]-> Status
    ' Status -right[hidden]-> TipoAD


@enduml

@startuml

    hide empty members



    enum Item {
        Lamp = 0
	    Athlete = 1
	    Boy = 3
	    Lord = 6
	    Woman = 8
	    Lady = 12
    }

    enum RiverBank {
        Initial
        Final
    }

    struct Outcome {
        isTerminal: boolean
        win: boolean
    }



    package Domain <<Rectangle>> {
        class Rule
        class State
        class Problem
    }

    package Structure <<Rectangle>> {
        class BasicEdge
        class BasicNode
        class BasicStructure

        package Tree <<Rectangle>> {
            class TreeEdge
            class TreeNode
            class Tree
        }

    }



    class Rule {
        -id: number
        -travellingPeople: Item[]
        +getElapsedTime(): number
        +transpose(state: State): State
    }

    class State {
        -initialRiverBank: Item[]
        -finalRiverBank: Item[]
        -remainingTime: number
        +getValidRules(): Rule[]
        +getOutcome(): Outcome
        +equalByItems(state: State): boolean
        +getLampPosition(): RiverBank
    }

    class Problem {
        -{static}rules: Rule[]
        +{static}getRule(firstPerson: Item, secondPerson?: Item): Rule
        +{static}isSolution(state: State): boolean
    }

    abstract class BasicEdge {
        -sourceNode: BasicNode
        -targetNode: BasicNode
        -rule: Rule
    }

    abstract class BasicNode {
        -id: number
        -state: State
        -targetEdges: BasicEdge[]
        #{abstract}addSourceEdge(sourceNode: BasicNode, rule: Rule): BasicEdge | null
        -addTargetEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +addEdge(targetNode: BasicNode, rule: Rule): BasicEdge
        +{abstract}checkIfThereIsLoop(state: State): boolean
    }

    abstract class BasicStructure {
        -nextNodeId: number
        #{abstract}instantiateNode(id: number, state: State): BasicNode
        #createNode(state: State): BasicNode
        +{abstract}createValidTransitions(node: BasicNode): BasicEdge[]
        +{abstract}exportToDot(): string
    }

    class TreeEdge {}

    class TreeNode {
        -sourceEdge: TreeEdge | null
    }

    class Tree {
        -rootNode: TreeNode
        +{static}getAscendingPath(node: TreeNode): TreeEdge[]
    }



    Rule "1" - -> "0..n" BasicEdge : Represents
    Problem "1" *- - "1..n" Rule
    BasicNode "1" - -> "0..n" BasicEdge : Has Target
    BasicNode "1" - -> "1" State : Has State
    TreeNode "1" - -> "0..1" TreeEdge : Has source
    Tree "1" - -> "1" TreeNode : Has root
    TreeEdge - -|> BasicEdge
    TreeNode - -|> BasicNode
    Tree - -|> BasicStructure

    Structure -[hidden]down-> RiverBank
    RiverBank -[hidden]right-> Item
    Item -[hidden]right-> Outcome



@enduml

PlantUML version 1.2022.7(Mon Aug 22 14:01:30 BRT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>